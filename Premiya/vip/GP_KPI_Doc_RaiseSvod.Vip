/*************************************************************************************************\
* Наименование: Свод по Ведомостям премирования                                                            *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#794          |26/02/18|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/
#include aTuneIer.vih    // Функции для работы с UserDeskRep
#include GetKau.vih      // Обьектный интерфес выбора КАУ
#include CatFunc.Vih

//-------------------------
#include GP_Log.vih
//-------------------------
#include GP_GetPodalN.Vih
#include GP_KPI_Doc_RaiseSvod.Vih
#include GP_KPI_RaiseEdit.Vih
#include GP_PodrFilterDef.Vih
#doc
Свод по Ведомостям премирования
#end

//-------------------------------------
Interface GP_KPI_Doc_RaiseSvod 'Свод по ведомостям премирования', EscClose, Cyan;
Show  at (,,90,18);
#include ShowKau.Vpp

!-------------------------------------------------------------------------------
Table Struct tbl_name_gr "Группировки"
(
  npp  : word   "npp",
  kod  : word   "kod",
  name : string "name",
  IE   : word   "Раскрывать иерархию"
)
With Index
(
  ind01 = npp,
  ind03 = kod(Unique),
  ind02 = name(Unique)
);

!-------------------------------------------------------------------------------
//====================
#include GetKau.Var      // Переменная типа "Интерфеса выбора КАУ"

var

 iCatFunc  : CatalogsFunctions;
 piTuneIer : iTuneIer; //objTuneIer;
 oGP_Log :GP_Log;
 pGP_PodrFilterDef:GP_PodrFilterDef;
var
 IndexNo        :Longint;
 NameGroup      :String;
 KodGroup       :String;
 nppTmp         :Word;
 kodTmp         :Word;
 wSort          :word;
 fCurrMainFormat:longint;//основной формат
 kol_fld        :word; //кол-во выводимых полей
 isPodrShare    :boolean; //включено разграничение прав
 sUserName      :string;// текущий пользователь
 wPa            :word;//номер отчета

//------------------
  NPOEM_OWN_Raise_Protect:word;//тип разграничения прав
//------- фильтры
  Marker_Count :longint;
  KauMarkerName:string;
  Marker_Tmp :longint;
  wFilter    :longint;

//----------------------------------------------
Create View
var
  pUserDeskRep:comp;
  pPersons    :comp;
  pNode       :comp;
  wc_Nrec     :comp;

as select
  if(UserDeskRep.RESLNGINT[05]=1,GP_KPI_Raise_Flt.Name
   ,if(UserDeskRep.RESLNGINT[05]>1,'Выбрано '+string(UserDeskRep.RESLNGINT[05])+' записей'
      ,'не задано'  ) ) (FieldName=Flt_Raise)
,if(UserDeskRep.RESLNGINT[06]=1,Katpodr_Flt1.Name
   ,if(UserDeskRep.RESLNGINT[06]>1,'Выбрано '+string(UserDeskRep.RESLNGINT[06])+' записей'
      ,'не задано'  ) ) (FieldName=Flt_Podr)
,if(UserDeskRep.RESLNGINT[07]=1,KlKatego_Flt.NaiKat
   ,if(UserDeskRep.RESLNGINT[07]>1,'Выбрано '+string(UserDeskRep.RESLNGINT[07])+' записей'
      ,'не задано'  ) ) (FieldName=Flt_Kateg)
,if(UserDeskRep.RESLNGINT[08]=1,Persons_Flt.Fio
   ,if(UserDeskRep.RESLNGINT[08]>1,'Выбрано '+string(UserDeskRep.RESLNGINT[08])+' записей'
      ,'не задано'  ) ) (FieldName=Flt_Persons)
,if(UserDeskRep.RESLNGINT[09]=1,CatPost_Flt.Name
   ,if(UserDeskRep.RESLNGINT[09]>1,'Выбрано '+string(UserDeskRep.RESLNGINT[09])+' записей'
      ,'не задано'  ) ) (FieldName=Flt_Post)
from
   GP_KPI_Raise
  ,GP_KPI_Raise GP_KPI_Raise_Flt
  ,UserDeskRep
  ,tbl_name_Gr(ind01)
  ,tbl_name_Gr tbl_LLL(ind01)
  ,tbl_name_Gr tbl_RRR(ind01)
  // фильтры
  , KatPodr KatPodr_Flt
  , KatPodr KatPodr_Flt1
  , Catalogs CatPost_Flt
  , KlKatego KlKatego_Flt
  , Persons  Persons_Flt
where  ((
//--------   Настройки отчета
    cgGP_Report_20001 == UserDeskRep.NRep
and sUserName         == UserDeskRep.OwnName
//-----------------
and UserDeskRep.ResComp[1]  == AllMemo.Nrec
//-----------------
and UserDeskRep.ResComp[5] == GP_KPI_Raise_Flt.Nrec
and UserDeskRep.ResComp[6] == Katpodr_Flt1.Nrec
and UserDeskRep.ResComp[7] == KlKatego_Flt.Nrec
and UserDeskRep.ResComp[8] == Persons_Flt.Nrec
and UserDeskRep.ResComp[9] == CatPost_Flt.Nrec
//----------- Группировки
and 0 == tbl_LLL.npp
AND 0 << tbl_RRR.npp

//----------------------------
and wc_Nrec == KatPodr_Flt.Nrec
))
;
//----------------------------
create view lPMarker
var pUserDeskRep :comp;
as select PickRep.cUserDeskRep
From PickRep
where ((
  pUserDeskRep  == PickRep.cUserDeskRep
))
;

//--------------------------------
Create  view vZar_User
var
   pPodr:comp;
as select Zar_User.Nrec
From
   Zar_User
  ,GP_USERRIGHTS
  ,USERRIGHTS
  ,KatLink
where
((   sUserName  == Zar_User.OwnName
and  sUserName  == GP_USERRIGHTS.OWNNAME
//and  pPodr    == GP_USERRIGHTS.crecds
and  0          == GP_USERRIGHTS.wType
and  sUserName  == USERRIGHTS.OWNNAME
//and  pPodr    == GP_USERRIGHTS.crecds
//and  0          == USERRIGHTS.wType
//--------------------------
and  sUserName == katlink.OWNNAME
and  coGrPodr  == katlink.CODETABLE
and  0         == katlink.code

));

//--------------------------------
#include GP_KPI_Doc_RaiseSvod.Vpp
//--------------------------------

//-----------------------------------------------------
// Для поиска вышестоящего подразделения
//-----------------------------------------------------
Function GetKatPodrUp(_PKatPodr:comp):comp; cacheable;
{ Result:=_PKatPodr;
  if Result=0 then exit;
  set wc_nrec:=_PKatPodr;
  if getfirst KatPodr_Flt<>tsok exit;
  if pos('-',KatPodr_flt.kod)>0
  { Result:=GetKatPodrUp(KatPodr_flt.cPodr);
  }
} //Function GetKatPodrUp(_PKatPodr:comp):comp

//------------------------------------------------------------------------------
// приходиться писать свою, иначе все с фильтром по зверю
//------------------------------------------------------------------------------
procedure  MyPickRep2Marker(_MarkerName: string; _nFilter: word;ww_One:comp=0;_pMarker:TPtr=0);
Var ww_Marker : TPtr;
{  ww_Marker:=_pMarker;
   if _pMarker=0
   { ww_Marker := InitMarker(_MarkerName, 8, 100, 10);
   }
   ClearMarker(ww_Marker);
   lPMarker.pUserDeskRep:=UserDeskRep.Nrec;
   lPMarker._Loop PickRep Where (( pUserDeskRep == PickRep.cUserDeskRep
                    and   _nFilter         == PickRep.wList
                       ))
   { InsertMarker(ww_Marker, lPMarker.PickRep.cRec )
   }
   if GetMarkerCount(ww_Marker)=0
   { if ww_One>0
       InsertMarker(ww_Marker, ww_One )
   }
   if _pMarker=0
     DoneMarker(ww_Marker,_MarkerName)
} //procedure  MyPickRep2Marker(_MarkerName: string; _nFilter: word;ww_One:comp=0);

//-------------------------------
Function ChkPickFilter(_pUserDeskRep:comp; _nFilter:word; _val:comp) :boolean;
{ Result:=true;
  if UserDeskRep.RESLNGINT[_nFilter]=0
  {
    exit;
  }
  Result:=false;
  lPMarker.pUserDeskRep:=_pUserDeskRep;
  lPMarker._Loop PickRep
   Where (( pUserDeskRep == PickRep.cUserDeskRep
     and   _nFilter      == PickRep.wList
     and   _Val          == PickRep.cREc
   ))
   { Result:=true;
     exit;
   }
} //Function ChkPickFilter(_pUserDeskRep:comp; _nFilter:word; _val:comp) :boolean;


//------------------------------------------------------------------------------
// приходиться писать свою, иначе все с фильтром по зверю
//------------------------------------------------------------------------------
procedure MyDelPickRep(_nFilter: word);
{ lPMarker.pUserDeskRep:=UserDeskRep.Nrec;
  lPMarker.delete PickRep
   Where (( pUserDeskRep == PickRep.cUserDeskRep
     and   _nFilter         == PickRep.wList
   )) ;
  set UserDeskRep.RESLNGINT[_nFilter]:=0;
  set UserDeskRep.RESComp  [_nFilter]:=0;
} //procedure MyDelPickRep(_nFilter: word);



// -----------------------------------------------------------------------------
// маркер с множ.выбором - в таблицу PickRep с кодом nReport
Function MyMarker2PickRep(_MarkerName: string; _nFilter: word;_pMarker:TPtr=0) : boolean;
var
  tmpWord: TNumPick;
  tmpComp: comp;
  ii : longint;
  ww_Marker : TPtr;

{
  MyMarker2PickRep := True;
  // использует тек. UserDeskRep.nRec
  // очистим PickRep
  MyDelPickRep(_nFilter);
  // скопируем
  //Marker2PickRep(_MarkerName, _nFilter, tmpComp, tmpWord);
  ww_Marker:=_pMarker;
  if _pMarker=0
  { ww_Marker := InitMarker(_MarkerName, 8, 100, 10);
  }
  tmpWord:=GetMarkerCount(ww_Marker);
  tmpComp:=0;
  For(ii:=0;ii<tmpWord;ii++)
  { if GetMarker(ww_Marker, ii, tmpComp)
    { lPMarker.ClearBuffer(lPMarker.tnPickRep);
      lPMarker.PickRep.cUser        := UserID();
      //lPMarker.PickRep.OwnName      := sUserName;
      lPMarker.PickRep.wList        := _nFilter;
      lPMarker.PickRep.cRec         := tmpComp;
      lPMarker.PickRep.PickNum      := ii;
      lPMarker.PickRep.cUserDeskRep := UserDeskRep.nRec;
      if ( lPMarker.insert current PickRep = tsOk ) {}
    } //if GetMarker(ww_Marker, ii, tmpComp)
  } //For(ii:=0;ii<tmpWord;ii++)
  if _pMarker=0
    DoneMarker(ww_Marker,_MarkerName);
  // просто чтобы обновилось поле
  set UserDeskRep.ResComp[_nFilter]   := tmpComp;
  set UserDeskRep.RESLNGINT[_nFilter] := tmpWord;
}



//----------------------------------
//1754
Function GetPodrShare :boolean;
{ Result:=false;
  case NPOEM_OWN_Raise_Protect of
  0,2:  Result:= vZar_User.ZAR_USER.PODRSHARE = '+';
  end;
}//Function PodrShare :boolean;



//=======================================
//Чтение параметров
//=======================================
Procedure PositionChanged;
var wkl   :Boolean;
    iii   :Word;
    wKod  :Word;
    sName :String;
    arrLen:Word;
{
  wkl:=False;

  arrLen:=cg_s_Len_a_gr; //!!!

//  message(NameGroup);
//  message(KodGroup);

  if RecordsInTable(#tbl_name_Gr)=0
  { delete all tbl_name_Gr;
    //Заполним левую панель
    for(iii:=1;iii<=word(arrLen);iii:=iii+1)
    {
      wKod :=iii;
      sName:=GetLevelName(iii);
      if(wKod<>0 AND sName<>'')
      { clearbuffer(#tbl_name_Gr);
         tbl_name_Gr.npp :=0;
         tbl_name_Gr.kod :=wKod;
         tbl_name_Gr.name:=sName;
        insert current tbl_name_Gr;
      } //if
    } //for
  }
  else
  { update all tbl_name_Gr set Npp:=0
  }
  KodGroup:=UserDeskRep.ResName[2];
  //Заполним правую панель
  if(KodGroup<>'')
  {
    MySetGroupMas(KodGroup);
    nppTmp:=0;
    for(iii:=1;iii<=word(arrLen);iii:=iii+1)
    {
      wKod :=a_GroupRep[iii];
      sName:=GetLevelName(a_GroupRep[iii]);
      if(wKod<>0 AND sName<>'')
      { if GetFirst tbl_name_Gr Where (( wKod == tbl_name_Gr.kod )) = tsOk
        { nppTmp:=nppTmp+1;
          tbl_name_Gr.npp :=nppTmp;
          tbl_name_Gr.IE  :=a_GroupIE[iii];
          Update current tbl_name_Gr;
        } //if GetFirst
      } //if
    } //if
  } //if

  //ReReadRecord(#tbl_name_Gr);
  ReReadRecord(#tbl_LLL);
  if getfirst tbl_LLL=tsok {}
  ReReadRecord(#tbl_RRR);
  ReDrawPanel(#tbl_LLL);
  ReDrawPanel(#tbl_RRR);
} //Procedure PositionChanged

//-------------------------------------
// Запомнить группировки
//-------------------------------------
Procedure SaveGroup;
{ NameGroup:='';
  KodGroup:='';
  ReReadRecord(#tbl_name_Gr);
  _loop tbl_name_Gr where (( 0 << tbl_name_Gr.npp))
  { NameGroup:=NameGroup+if(NameGroup='','','/')+tbl_name_Gr.Name;
    KodGroup:=KodGroup+if(KodGroup='','','/')+String(tbl_name_Gr.Kod)+if(tbl_name_Gr.IE>0,':'+string(tbl_name_Gr.IE),'');
  }
  if UserDeskRep.ResName[1]<>NameGroup
  or UserDeskRep.ResName[2]<>KodGroup
  { set UserDeskRep.ResName[1]:=NameGroup;
    set UserDeskRep.ResName[2]:=KodGroup;
    update current UserDeskRep;
  }
} //Procedure SaveGroup;



//******************************************************************************
//***************** П А Р А М Е Т Р Ы   Н А С Т Р О Й К И **********************
//******************************************************************************
Window  wnGR_Add_Nastr 'Настройка уровня'  (,,sci13Esc)
Show  at (,,40,5);
screen ScrGR_Add_Nastr;
Table tbl_RRR;
Fields
  tbl_RRR.Name :Protect,Skip,NoDel;
  tbl_RRR.IE ('') :NoProtect;
buttons
  cmOk  ,,, 'Сохранить',,;
  cmCancel  ,,, 'Сохранить',,;
<<
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Раскрывать иерархию до .@@@@@ уровня

  <.Сохранить.>  <.Отмена.>
>>
end;//screen ScrGR_Add_Nastr;
HandleEvent
cmOK:
{ update current tbl_RRR;
  SaveGroup;
  CloseWindowEx(wnGR_Add_Nastr,cmDefault);
}
cmCancel:
{ ReReadRecord(#tbl_RRR);
}
end;//Window  wnGR_Add_Nastr
end;//Window  wnGR_Add_Nastr


//******************************************************************************
//***************** П А Р А М Е Т Р Ы   Н А С Т Р О Й К И **********************
//******************************************************************************
Window wnParam 'Параметры формирования',EscClose;
Show  at (,,90,18);
screen ScrMain;
Show  at (,,,4);
  Table UserDeskRep;
Fields
  UserDeskRep.RepName ('Наименование настройки'):NoProtect;
  UserDeskRep.ResName[1]:Protect;
  UserDeskRep.ResName[2]:Protect;
  UserDeskRep.RESLNGINT[01] :#(Month_List)
  UserDeskRep.RESLNGINT[03] :noProtect,spinButton [1, 2017, 2200];
  UserDeskRep.RESLNGINT[02] :#(Month_List)
  UserDeskRep.RESLNGINT[04] :noProtect,spinButton [1, 2017, 2200];
  Flt_Raise (,,sci13Esc) : Protect,PickButton;
  UserDeskRep.RESWORD[01] :NoProtect;
<<
 `Наименование`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Группировка `.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@
 `Период     c`.@@@@@@@@@@ мес. .@@@@@@@ год `по` .@@@@@@@@@@ мес. .@@@@@@@ год
 `Выводить премии` .@@@@@@@@@@@@@@@@@@@@@@@@@@@                    [.] Отладка`
>>
end;//screen ScrMain;
//------------------------------------------------------
Tabbedsheet bottom tsDoc;
show at (,5,,);
//----------------------
FormatsGroup fgFlt 'Фильтры';
Screen scrFlt ;
  Show  at (,5,,8) fixed_y;
Fields
  Flt_Podr    ('Подразделение ведомости',,sci13Esc) : Protect,PickButton;
  Flt_Kateg   (,,sci13Esc) : Protect,PickButton;
  Flt_Persons (,,sci13Esc) : Protect,PickButton;
  Flt_Post    (,,sci13Esc) : Protect,PickButton;
<<
  `Подр.ведомости`.@@@@@@@@@@@@@@@@@@@
  `Категория`     .@@@@@@@@@@@@@@@@@@@
  `Сотрудник`     .@@@@@@@@@@@@@@@@@@@
  `Должность`     .@@@@@@@@@@@@@@@@@@@
>>
end;//Screen scrFlt ;
//===============================
screen ScreenAdd1Wn;//Для RunInterface
  show at(, 9,,9 ) Fixed_y;
  Table UserDeskRep;
 Fields
  'Дополнительный фильтр' : Protect,skip, {font = {bold = true}};
  'Persons.Fio like ''%Авр%'' or Persons.StrTabn=''000001'' ' :Protect;
<<
  .@@@@@@@@@@@@@@@@@@@@@@ например .@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;
text AllMemo.mem;
  show at(, 10,, );
end;//FormatsGroup fgFlt 'Фильтры';

//------------------------------------------------------
FormatsGroup fgGroup 'Группировки';
Browse brLeftPanel (,,sci1Esc);
  Show  at (,5,25,) ;
  Table tbl_LLL;
Fields
  tbl_LLL.Name  'Доступные элементы','группировки' (,,) : [25], Protect;
end;
//*******************************************************************************
Browse brRightPanel (,, sci14Esc);
  Show  at (51,5, 75,);
  Table tbl_RRR;
Fields
  tbl_RRR.Name  'Выбранные уровни','группировки' (,,) : [25], Protect;
end;
//*******************************************************************************
Screen scrMoveButtonsH1 (,,sci1EnEsc);
  Show at (26,5,50,);
  Table tbl_LLL;
buttons
//  cmValue2,,, 'Сохранить изменения',,;
//  cmValue3,,,         'Отменить все сделанные изменения',,;
//<. Сохранить      .>
//<. Восстановить   .>

  cmMoveOne  ,,, 'Добавить в группировку',,;
  cmMoveAll  ,,, 'Добавить все в группировку',,;
  cmReMoveOne,,, 'Удалить из группировки',,;
  cmReMoveAll,,, 'Удалить все из группировки',,;
<<


 <. Добавить      > .>

 <. Добавить все >> .>

 <.< Удалить        .>

 <.<< Удалить все   .>

>>
end; // screen scrMoveButtonsH
//*******************************************************************************
Screen scrMoveButtonsV (,, sci1EnEsc);
  Show at (76,5,, );
Buttons
  cmMoveUp   ,,, 'Переместить вверх элемент группировки',,;
  cmMoveDown ,,, 'Переместить вниз элемент группировки',,;
<<

 <. Выше .>

 <. Ниже .>
>>
end; // screen scrMoveButtonsV
end;//FormatsGroup fgGroup '';
//------------------------------------------------------
end;//Tabbedsheet bottom tsDoc;
HandleEvent
//--------------------------
cmInit:
{ PositionChanged;
}
//--------------------------
cmDone:
{ UpdateTable;
}
//--------------------------
cmEdit:
{ Case CurTable of
  #tbl_RRR:
  { case tbl_RRR.kod of
    cg_s_code_Department:
    { RunWindowModal(wnGR_Add_Nastr);

    }
    else
    { message('Дополнительной настройки не предусмотрено');

    }
    end;
  }
  end;
}
//--------------------------
cmMoveOne  :
{ if GetFirst tbl_name_Gr Where (( 0 == tbl_name_Gr.npp )) = tsOk
  { nppTmp:=0;
    if GetLast tbl_RRR = tsOk Then nppTmp:=tbl_RRR.npp;
    nppTmp:=nppTmp+1;
    update current tbl_LLL set tbl_LLL.npp:=nppTmp;
    ReReadRecord(#tbl_name_Gr);
    ReReadRecord(#tbl_LLL);
    ReReadRecord(#tbl_RRR);
    nppTmp:=0;
    _loop tbl_RRR
    { nppTmp:=nppTmp+1;
      update current tbl_RRR set tbl_RRR.npp:=nppTmp;
    }
    if GetFirst tbl_LLL = tsOk {}
    if GetFirst tbl_RRR = tsOk {}
    SaveGroup;
  } //if
  ReReadRecord(#tbl_name_Gr);
  ReReadRecord(#tbl_LLL);
  ReReadRecord(#tbl_RRR);
  ReDrawPanel(#tbl_LLL);
  ReDrawPanel(#tbl_RRR);
} //cmMoveOne

//--------------------------
cmMoveAll :
{ if GetFirst tbl_name_gr Where (( 0 == tbl_name_gr.npp )) = tsOk
  { nppTmp:=0;
    _loop tbl_LLL
    { nppTmp:=nppTmp+1;
      update current tbl_LLL set tbl_LLL.npp:=nppTmp;
    }
    if GetFirst tbl_LLL = tsOk {}
    if GetFirst tbl_RRR = tsOk {}
    SaveGroup;
  } //if
  ReReadRecord(#tbl_name_gr);
  ReReadRecord(#tbl_LLL);
  ReReadRecord(#tbl_RRR);
  ReDrawPanel(#tbl_LLL);
  ReDrawPanel(#tbl_RRR);
} //cmMoveAll

//--------------------------
cmReMoveOne :
{ if GetFirst tbl_name_gr Where (( 0 << tbl_name_gr.npp )) = tsOk
  { update current tbl_RRR set tbl_RRR.npp:=0;
    ReReadRecord(#tbl_name_gr);
    ReReadRecord(#tbl_LLL);
    ReReadRecord(#tbl_RRR);
    nppTmp:=0;
    _loop tbl_RRR
    { nppTmp:=nppTmp+1;
      update current tbl_RRR set tbl_RRR.npp:=nppTmp;
    }
    if GetFirst tbl_LLL = tsOk {}
    if GetFirst tbl_RRR = tsOk {}
    SaveGroup;
  } //if
  ReReadRecord(#tbl_name_gr);
  ReReadRecord(#tbl_LLL);
  ReReadRecord(#tbl_RRR);
  ReDrawPanel(#tbl_LLL);
  ReDrawPanel(#tbl_RRR);
} //cmReMoveOne

//--------------------------
cmReMoveAll :
{ if GetFirst tbl_name_gr Where (( 0 << tbl_name_gr.npp )) = tsOk
  { update tbl_RRR set tbl_RRR.npp:=0;
    SaveGroup;
  } //if
  ReReadRecord(#tbl_name_gr);
  ReReadRecord(#tbl_LLL);
  ReReadRecord(#tbl_RRR);
  ReDrawPanel(#tbl_LLL);
  ReDrawPanel(#tbl_RRR);
} //cmReMoveAll

//--------------------------
cmMoveUp :
{ if GetFirst tbl_name_gr Where (( 0 << tbl_name_gr.npp )) = tsOk
  { if(tbl_name_gr.kod<>tbl_RRR.kod)
    { kodTmp:=tbl_RRR.kod;
      if GetPrev tbl_RRR = tsOk
      { update current tbl_RRR set tbl_RRR.npp:=tbl_RRR.npp+1;
        if GetFirst tbl_RRR Where (( kodTmp == tbl_RRR.kod )) = tsOk
        { update current tbl_RRR set tbl_RRR.npp:=tbl_RRR.npp-1;
        }
        SaveGroup;
      }
    } //if
  } //if
  ReReadRecord(#tbl_name_gr);
  ReReadRecord(#tbl_LLL);
  ReReadRecord(#tbl_RRR);
  ReDrawPanel(#tbl_LLL);
  ReDrawPanel(#tbl_RRR);
} //cmMoveUp

//--------------------------
cmMoveDown :
{ if GetLast tbl_name_gr Where (( 0 << tbl_name_gr.npp )) = tsOk
  { if(tbl_name_gr.kod<>tbl_RRR.kod)
    { kodTmp:=tbl_RRR.kod;
      if GetNext tbl_RRR = tsOk
      { update current tbl_RRR set tbl_RRR.npp:=tbl_RRR.npp-1;
        if GetFirst tbl_RRR Where (( kodTmp == tbl_RRR.kod )) = tsOk
        { update current tbl_RRR set tbl_RRR.npp:=tbl_RRR.npp+1;
        }
        SaveGroup;
      }
    } //if
  } //if
  ReReadRecord(#tbl_name_gr);
  ReReadRecord(#tbl_LLL);
  ReReadRecord(#tbl_RRR);
  ReDrawPanel(#tbl_LLL);
  ReDrawPanel(#tbl_RRR);
} //cmMoveDown
end;
end;//Window wnParam


//******************************************************************************
//********************** В Ы Б О Р   Н А С Т Р О Й К И *************************
//******************************************************************************

//Window wnGetNastr 'Выберите настройку для формирования отчета',EscClose;
// Show  at (,,90,18);
Browse brCaseSet (,, sci1478Esc);
 Show  at (,,,15);
  Table UserDeskRep;
Fields
  UserDeskRep.RepName 'Наименование настройки'
    ('Enter - сформировать отчет'):[40], Protect;
  UserDeskRep.dRep 'Сформирован'
    ('Enter - сформировать отчет'):[12,'DD/MM/YYYY'], Protect, NoAutoSize;
  UserDeskRep.ResName[1] 'Группировки'  :[40],Protect;
End;
Screen scNastrButtonScreen('',, sci13Esc);
  Show at (,16,,);
Buttons
  cmValue3,,, 'Формирование отчета по текущей настройке',, sci1Esc;
//  cmAttrib,,, 'Просмотр последнего сформированного отчета',, sci1Esc;
  cmEdit,,,   'Редактирование настройки',, sci1Esc;
  cmCancel,,, 'Выход',, sci1Esc;

<<
     <.Сформировать.>        <. Настройка .>    <.   Отмена   .>
>>
End;


//******************************************************************************
/////////////////////// ОБРАБОТЧИК СОБЫТИЙ AllMemo     /////////////////////////
//******************************************************************************
TableEvent  Table AllMemo;
//--------------------------
cmSetDefault:
{ Clearbuffer(#AllMemo);
  AllMemo.Nrec:=GetNextNrec(#AllMemo,0);
  set UserDeskRep.ResComp[1] :=AllMemo.Nrec;
}
//--------------------------
cmInsertRecord:
{ insert current AllMemo

}
//--------------------------
cmUpdateRecord:
{ update current AllMemo
}
end;//TableEvent  Table AllMemo;


//******************************************************************************
/////////////////////// ОБРАБОТЧИК СОБЫТИЙ USERDESKREP /////////////////////////
//******************************************************************************
TableEvent  Table UserDeskRep;
//--------------------------
cmSetDefault :
  {
    ClearBuffer(tnUserDeskRep);
    UserDeskRep.nRec    := GetNextNRec(#UserDeskRep, 0); // чтобы фильтры перерисовались
    UserDeskRep.nRep    := cgGP_Report_20001;
    UserDeskRep.OwnName := sUserName;
    UserDeskRep.RepName := 'Без имени';
    UserDeskRep.dRep    := Cur_Date;
    UserDeskRep.RESLNGINT[01]:=MonthRas;
    UserDeskRep.RESLNGINT[02]:=MonthRas;
    UserDeskRep.RESLNGINT[03]:=YearRas;
    set UserDeskRep.RESLNGINT[04]:=YearRas;
    clearbuffer(#AllMemo);
    Insert current AllMemo;
    UserDeskRep.ResComp[1] :=AllMemo.Nrec;
    insert current UserDeskRep;
    SetNew(False);
    RunWindowModal(wnParam);
  }
//--------------------------
//--------------------------
cmCheckField:
{ timelog('GP_KPI_Doc_RaiseSvodF->cmCheckField');
  case CurField of
   #UserDeskRep.RESLNGINT[01]
  ,#UserDeskRep.RESLNGINT[03]:
  { timelog('GP_KPI_Doc_RaiseSvodF->cmCheckField');

    if Date(1,UserDeskRep.RESLNGINT[01],UserDeskRep.RESLNGINT[03])
      >Date(1,UserDeskRep.RESLNGINT[02],UserDeskRep.RESLNGINT[04])
    { set UserDeskRep.RESLNGINT[02]:=UserDeskRep.RESLNGINT[01];
      set UserDeskRep.RESLNGINT[04]:=UserDeskRep.RESLNGINT[03];
      message('Начало периода не может быть больше окончания периода'
       +chr(13)+'Приравняли окончание периода к началу');

    }
  }
   #UserDeskRep.RESLNGINT[02]
  ,#UserDeskRep.RESLNGINT[04]:
  { if Date(1,UserDeskRep.RESLNGINT[01],UserDeskRep.RESLNGINT[03])
      >Date(1,UserDeskRep.RESLNGINT[02],UserDeskRep.RESLNGINT[04])
    { set UserDeskRep.RESLNGINT[01]:=UserDeskRep.RESLNGINT[02];
      set UserDeskRep.RESLNGINT[03]:=UserDeskRep.RESLNGINT[04];
      message('Окончание периода не может быть меньше начала периода'
       +chr(13)+'Приравняли начало периода к окончанию');
    }
  }
  end;

}
//--------------------------
cmCheckRecord:
  {
  }
//--------------------------
cmPositionChanged:
  { PositionChanged;
  }
//--------------------------
cmInsertRecord:
  { clearbuffer(#AllMemo);
    Insert current AllMemo;
    UserDeskRep.ResComp[1] :=AllMemo.Nrec;
    Insert Current UserDeskRep;
  }
//--------------------------
cmUpdateRecord:
  { if not isValid(tnAllMemo)
    { clearbuffer(#AllMemo);
      Insert current AllMemo;
      UserDeskRep.ResComp[1] :=AllMemo.Nrec;
    }
    Update Current UserDeskRep;
  }
//--------------------------
cmDeleteRecord:
  { if Message('Удалить настройку?',YesNo) =cmYes
    { if delete AllMemo where (( UserDeskRep.ResComp[1] ==AllMemo.Nrec ))=tsok {};
      piTuneIer.DeleteUserDeskRep(UserDeskRep.nRec);
    }
  }
End; // TableEvent  Table UserDeskRep;

//******************************************************************************
/////////////////////////// ОБРАБОТКА СОБЫТИЙ ИНТЕРФЕЙСА ///////////////////////
//******************************************************************************
HandleEvent
  //--------------------------
  cmInit:
  { timelog_init;
    //GetVipRef(piTuneIer, 'iTuneIer');
    sUserName:=UserName();
    //-------- настройки
    NPOEM_OWN_Raise_Protect   :=wGetTune('NPOEM_OWN.Raise.Protect');//Использовать ограничения по подразделениям
    if vZar_User.getfirst Zar_user=tsok {}
    isPodrShare:=GetPodrShare;


  }
  cmValue3:
  { //CloseWindowEx(wnGetNastr,cmValue3)
     UpdateTable;
     if IsValidAll(#AllMemo)
     {
       Update current AllMemo;
       ReReadRecord(#AllMemo); // почему то сразу не применяет
     }
     wPa++;
     if wPA>1000
     { Message('Закройте все интерфейсы и повторите попытку' );

     }
     RunAnyView('INTERFACE GP_STAFF::GP_KPI_Doc_RaiseSvodF('+String(UserDeskRep.Nrec,0,0)+','+string(wPA)+')',False);
  }
  cmDefault:
  { PutCommand(cmValue3)
  }
  cmEdit:
  { RunWindowModal(wnParam);
  }


  //--------------------------
  cmPick:
  {   Case CurField of
      #Flt_Raise:
      { MyPickRep2Marker('GP_KPI_RaiseEdit', cgFilter_Raise);
        if RunInterface(GP_KPI_RaiseEdit,cgiPickMult,0,0)<>cmCancel
        { MyMarker2PickRep('GP_KPI_RaiseEdit', cgFilter_Raise);
          ReScanPanel(#UserDeskRep);
        }
      }
      #Flt_Podr:
      { Marker_Tmp  :=InitMarker('', 8, 50, 10, True);
        MyPickRep2Marker('', cgFilter_Podr,0,MarKer_Tmp);
        if RunInterface('GP_GetPodaLN',12, Marker_Tmp, 1,0)<>cmCancel
        { MyMarker2PickRep('', cgFilter_Podr,MarKer_Tmp);
          ReScanPanel(#UserDeskRep);
        }
        DoneMarker(Marker_Tmp,'');
      }
      #Flt_Persons:
      { KauMarkerName := iGetKau.GetMarkerName(cgKau_Persons);
        MyPickRep2Marker(KauMarkerName, cgFilter_Pers);
        If (iGetKau.GetCodeKau(cgiPickMult,cgKau_Persons,Comp(0)) <> 0)
        { MyMarker2PickRep(KauMarkerName, cgFilter_Pers);
          ReScanPanel(#UserDeskRep);
        }
        DoneMarker(Marker_Tmp,'');
      }
      #Flt_Kateg:
      { Marker_Tmp  :=InitMarker('', 8, 50, 10, True);
        MyPickRep2Marker('', cgFilter_Kateg,0,Marker_Tmp);
        if  RunInterface(pickkat1,word(0), Marker_Tmp, vfMultipleSelection)<>cmCancel
        { MyMarker2PickRep('', cgFilter_Kateg,Marker_Tmp);
          ReScanPanel(#UserDeskRep);
        }
        DoneMarker(Marker_Tmp,'');
      }
      #Flt_Post:
      { MyPickRep2Marker('CatalogsMarker', cgFilter_Post);
        wc_nrec:=0;
        if ( RunInterface('PickCatalog2', integer(-22), wc_nrec, 100) <> cmCancel )
        { MyMarker2PickRep('CatalogsMarker', cgFilter_Post);
          ReScanPanel(#UserDeskRep);
        }
      }
      end;
  } //cmPick
  //--------------------------
  cmDelOnProtect:
  { Case CurField of
      #Flt_Raise:
      { MyDelPickRep(cgFilter_Raise);
      }
      #Flt_Post:
      { MyDelPickRep(cgFilter_Post);
      }
      #Flt_Podr:
      { MyDelPickRep(cgFilter_Podr);
      }
      #Flt_Persons:
      { MyDelPickRep(cgFilter_Pers);
      }
      #Flt_Kateg:
      { MyDelPickRep(cgFilter_Kateg);
      }
      end;
  }
  //--------------------------
  cmHotKeys:
  {   ProcessCommand(RunMenu('GP_KPI_RaiseSvod_Nastr_HotKey'));
  }

end;
end.

GP_KPI_RaiseSvod_Nastr_HotKey Menu
{
- 'Параметры'     , cmFilterSave, 'Фильтр на данные', hcProc_NagrKaf, 'Alt+B',kbAltB, scMenuCtx;
}
