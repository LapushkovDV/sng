/*************************************************************************************************\
* Наименование: Фондовые ведомости  - отчет по премиальным фондам                                                               *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#779          |20/09/17|Кириллов Э.П.            |НПО Энергомаш                    *
* Разработка  |#791          |20/09/17|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/
#include GP_KPI_RaiseEdit.Vih
#include GP_KPI_Doc_FondPrint.Vih
#doc
 Отчет по премиальным фондам
#end
Interface GP_KPI_Doc_FondPrint 'Отчет по премиальным фондам' , EscClose;
Show at (,,60,10);
//----------------------------------
Table Struct tmp_prn_fond
( Sortkey:string
 ,dms :array[1..10]  of string
 ,dmd :array[1..100] of double
)
with index
( tmp_prn_fond01= Sortkey +dms[1]+dms[2]
 ,tmp_prn_fond02= dms[1]+dms[2]
);

Table struct tmp_prn_fond_podr
( Podr_kod:string
)
with index
( tmp_prn_Add01= Podr_kod
);

Table struct tmp_prn_fond_group
( name:string
)
with index
( tmp_prn_group01= name
);

//---------------------------------
Table Struct tmp_prn_fond_shap
( sRazdel:string
 ,cGP_KPI_RAISE:comp
 ,Npp   :word
 ,sTitle :string
 ,Column:word
 ,wType:word
 ,cGP_KPI_FIELDS:comp
 ,FLD:word
 ,FLD_Nach:word
 ,Proc:word
)
with index
( tmp_prn_fond_shap01 = Npp
 ,tmp_prn_fond_shap02 = cGP_KPI_RAISE+sTitle
 ,tmp_prn_fond_shap03 = cGP_KPI_RAISE+wType+NPP
 ,tmp_prn_fond_shap04 = cGP_KPI_RAISE+wType+FLD

);

//---------------------------------
Table Struct tmp_prn_fond_Razdel
( sRazdel:string
 ,SortKey:string
 ,cGP_KPI_RAISE:comp
 ,FLD:word
 ,FLD_Nach:word
 ,Need_Plan:word
)
with index
( tmp_prn_Razdel01 = sRazdel
 ,tmp_prn_Razdel02 = cGP_KPI_RAISE
 ,tmp_prn_Razdel03 = SortKey
);
//---------------------------------
var
  wTypeRep  :word;
  wYear_Flt :word;
  wMonth_flt:word;
  wOption :word;
  //---------------
  NPP_Max:word;
  NPP_FLD_NACH:word;
  NPP_FLD_Plan_Proc:word;
  //-------------------

  #include Excel_Var.Vpp
  //-------------------
//-----------------------------------------
// Фильтры
//-----------------------------------------
   wFilter:word;
   Marker_Count :longint;
   isFilterRun  :boolean;
   wc_nrec : comp;//  - var_name, тип должен совпадать с типом маркера
   KauMarkerName:string;
   Marker_Tmp :longint;

   #mrkfld_(KPI_Raise)



Create view
var
  pKatpodr:comp;
  pFond :comp;
  pGP_KPI_GROUPPERS:comp;
  pGP_KPI_RAISe    :comp;
  //------------------------
  pDoc :comp;
  wTypeFld:word;//0 Премии, pDoc=GP_KPI_RAISE.Nrec
as select GP_Kpi_Fields.Nrec
From GP_Kpi_Fields
, GP_KPI_Fond
, GP_KPI_RAISe
, GP_KPI_FOND GP_KPI_FOND_R
, KatPodr
, GP_KPI_GroupPers
//---------------------------------
, tmp_kpi_sum(tmp_kpi_sum01)
, tmp_prn_fond     (tmp_prn_fond01)
, tmp_prn_fond_shap(tmp_prn_fond_shap01)
, tmp_prn_fond_Razdel
, tmp_prn_fond_Razdel tmp_prn_fond_Razdel_F
, tmp_prn_fond_podr // Для добавления групп
, tmp_prn_fond_Group// Для добавления групп
//------------------
, GP_KPI_RAISE GP_KPI_RAISE_Flt
where ((
    wTypeFld  == GP_KPI_Fields.wType
and pDoc      == GP_KPI_Fields.cDoc
and pKatPodr               == KatPodr.Nrec
and pGP_KPI_GROUPPERS == GP_KPI_GROUPPERS.Nrec
and pFond             == GP_KPI_FOND.Nrec
and pGP_KPI_RAISe     == GP_KPI_RAISe.Nrec
and GP_KPI_RAISe.Nrec == GP_KPI_FOND_R.cKPI_RAISe
//-------------------------
and wc_nrec == GP_KPI_RAISE_Flt.Nrec

));
Parameters wTypeRep
#doc
  1 - Отчет по премиальным фондам
#end
;
//----------------------------------
  #include Excel_fun.Vpp
//----------------------------------


//---------------------------------
Procedure SaveParam;
{ SaveMyDsk(wOption,'GP_KPI_Doc_FondPrint_wOption');
  SaveMyDsk(wMonth_Flt,'GP_KPI_Doc_FondPrint_wMonth_Flt');
  SaveMyDsk(wYear_Flt ,'GP_KPI_Doc_FondPrint_wYear_Flt');
  DoneMarker(Marker_KPI_Raise,'GP_KPI_Doc_FondPrint_KPI_Raise');
} //Procedure SaveParam;

//---------------------------------
Procedure ReadParam;
{ if not ReadMyDsk(wOption   ,'GP_KPI_Doc_FondPrint_wOption'   ,false) wOption:=1;;
  if not ReadMyDsk(wMonth_Flt,'GP_KPI_Doc_FondPrint_wMonth_Flt',false) wMonth_Flt:=MonthRas;
  if not ReadMyDsk(wYear_Flt ,'GP_KPI_Doc_FondPrint_wYear_Flt' ,false) wYear_Flt :=YearRas;
  Marker_KPI_Raise:=InitMarker('GP_KPI_Doc_FondPrint_KPI_Raise', 8, 50, 10, True);
} //Procedure SaveParam;


//---------------------------------
Procedure Ins_tmp_prn_fond_shap(_Name:string='';_Proc:word=0);
{ NPP_Max++;
  Clearbuffer(#tmp_prn_fond_shap);
  if _Name='' _Name:=GP_KPI_FIELDS.Name;
  tmp_prn_fond_shap.cGP_KPI_RAISE  := GP_KPI_RAISE.Nrec;
  tmp_prn_fond_shap.sRazdel        := GP_KPI_RAISE.Name;
  tmp_prn_fond_shap.NPP            := NPP_Max;
  tmp_prn_fond_shap.sTitle         := _Name;
  tmp_prn_fond_shap.Column         := 0;
  tmp_prn_fond_shap.wType          := GP_KPI_FIELDS.wType;
  tmp_prn_fond_shap.cGP_KPI_FIELDS := GP_KPI_FIELDS.Nrec;
  tmp_prn_fond_shap.FLD            := GP_KPI_FIELDS.NPP;
  tmp_prn_fond_shap.FLD_Nach       := NPP_FLD_NACH;
  tmp_prn_fond_shap.Proc           := _Proc;
  insert current tmp_prn_fond_shap;
  timelog('GP_KPI_Doc_FondPrint->Ins_tmp_prn_fond_shap: NPP='
    +string(tmp_prn_fond_shap.NPP)
    +','+tmp_prn_fond_shap.sRazdel+
    +','+tmp_prn_fond_shap.sTitle
    +','+tmp_prn_fond_shap.Proc
    );

} //Procedure Ins_tmp_prn_fond_shap;


//---------------------------------
//
//---------------------------------
Function Ins_Shap(_pGP_KPI_RAISe:comp):boolean;
var _Need_Plan:word;
{ Result:=false;
  pGP_KPI_RAISe:=_pGP_KPI_RAISe;

  if getfirst GP_KPI_RAISe<>tsok then exit;
  if getfirst tmp_prn_fond_shap where (( pGP_KPI_RAISe == tmp_prn_fond_shap.cGP_KPI_RAISe )) =tsok then exit;
  if GetFirst GP_KPI_FOND_R=tsok
  { wTypeFld:=1;
    pDoc    :=GP_KPI_FOND_R.Nrec;
    _Loop GP_KPI_FIELDS
    { if IsBitCTW(GP_KPI_FIELDS.Option,1) // c ручным вводом
      // а ниже эту колонку пропустим
      if pos('Экономия с предыдущего месяца',GP_KPI_FIELDS.Name)>0
      or pos('Экономия фонда с начала периода',GP_KPI_FIELDS.Name)>0
      { Ins_tmp_prn_fond_shap;
      }
    }//_Loop GP_KPI_FIELDS

  } //if GetFirst GP_KPI_FOND_R=tsok

  pDoc :=_pGP_KPI_RAISe;
  wTypeFld:=0;//0 Премии, pDoc=GP_KPI_RAISE.Nrec
  NPP_FLD_NACH:=0;
  NPP_FLD_Plan_Proc:=0;
  _Need_Plan:=0;
  _Loop GP_KPI_FIELDS
  { if GP_KPI_FIELDS.Name='Начислено, формула'
    or GP_KPI_FIELDS.Name='Начислено - формула'
    or GP_KPI_FIELDS.Name='Начислено, итого'
    or GP_KPI_FIELDS.Name='Начисленно, всего' // нужно исправить в настройках
    {   NPP_FLD_NACH:=GP_KPI_FIELDS.NPP;
    }
    else
    if IsBitCTW(GP_KPI_FIELDS.Option,2) // итоги
    { Ins_tmp_prn_fond_shap('Фактический фонд, руб');
    }
    else
    if Pos('Плановый процент'   ,GP_KPI_FIELDS.Name)>0
    or Pos('Нормативный процент',GP_KPI_FIELDS.Name)>0
    { if NPP_FLD_Plan_Proc=0 // если уже была отдельная колонка с "сумма для формирования" то уже не нужно
      { Ins_tmp_prn_fond_shap('Плановый фонд, руб', 1);
        NPP_FLD_Plan_Proc:=GP_KPI_FIELDS.NPP;
        _Need_Plan:=1;
      }
    }
    else
    if Pos('Сумма для формирования',GP_KPI_FIELDS.Name)>0
    { if NPP_FLD_Plan_Proc=0
      { Ins_tmp_prn_fond_shap('Плановый фонд, руб', 0);
      }
      else
      { if getfirst tmp_prn_fond_shap where ((
             _pGP_KPI_RAISe    == tmp_prn_fond_shap.cGP_KPI_RAISe
         and 0                 == tmp_prn_fond_shap.wType
         and NPP_FLD_Plan_Proc == tmp_prn_fond_shap.FLD
          ))=tsok
        {  update current tmp_prn_fond_shap set
                     tmp_prn_fond_shap.Proc:=0
                    ,tmp_prn_fond_shap.FLD:=GP_KPI_FIELDS.NPP;
          timelog('GP_KPI_Doc_FondPrint->обновили шапку: NPP='
           +string(tmp_prn_fond_shap.NPP)
          +', FLD='+string(tmp_prn_fond_shap.NPP)
          +', Раздел=' +tmp_prn_fond_shap.sRazdel+
          +', Title='  +tmp_prn_fond_shap.sTitle
          +', Процент='+tmp_prn_fond_shap.Proc
          ) ;
         _Need_Plan:=0;
        }
        else
        { timelog('GP_KPI_Doc_FondPrint->не обновили шапку: NPP_FLD_Plan_Proc='+string(NPP_FLD_Plan_Proc));

        }
      } //if getfirst tmp_prn_fond_shap where ((
    } //if Pos('Сумма для формирования  ',GP_KPI_FIELDS.Name)>0
  }//_Loop GP_KPI_FIELDS
  if NPP_FLD_NACH>0
  { update tmp_prn_fond_shap where (( pGP_KPI_RAISe == tmp_prn_fond_shap.cGP_KPI_RAISe ))
      set tmp_prn_fond_shap.FLD_NACH:=NPP_FLD_NACH;
    if getfirst tmp_prn_fond_Razdel_F where ((
      GP_KPI_RAISE.Nrec ==  tmp_prn_fond_Razdel_F.cGP_KPI_RAISE
    ))<>tsok
    { insert into tmp_prn_fond_Razdel_F  set
        tmp_prn_fond_Razdel_F.cGP_KPI_RAISE  := GP_KPI_RAISE.Nrec
       ,tmp_prn_fond_Razdel_F.sRazdel        := GP_KPI_RAISE.CODE+' '+GP_KPI_RAISE.Name
       ,tmp_prn_fond_Razdel_F.Fld            := NPP_FLD_Plan_Proc
       ,tmp_prn_fond_Razdel_F.Fld_Nach       := NPP_FLD_NACH
       ,tmp_prn_fond_Razdel_F.Need_Plan      := _Need_Plan
      ;
    }
    else
    { update current tmp_prn_fond_Razdel_F set
        tmp_prn_fond_Razdel_F.Fld            := NPP_FLD_Plan_Proc
       ,tmp_prn_fond_Razdel_F.Fld_Nach       := NPP_FLD_NACH
       ,tmp_prn_fond_Razdel_F.Need_Plan      := _Need_Plan
       ;
    }
    timelog(' FLD PLAN_PROC='+string(tmp_prn_fond_Razdel_F.Fld)+' NACH=,'+string(tmp_prn_fond_Razdel_F.Fld_Nach))
  }
  if GetFirst GP_KPI_FOND_R<>tsok exit;
  wTypeFld:=1;
  pDoc    :=GP_KPI_FOND_R.Nrec;
  _Loop GP_KPI_FIELDS
  { if IsBitCTW(GP_KPI_FIELDS.Option,1) // c ручным вводом
    if  pos('Экономия с предыдущего месяца',GP_KPI_FIELDS.Name)=0
    and pos('Экономия фонда с начала периода',GP_KPI_FIELDS.Name)=0
    { Ins_tmp_prn_fond_shap;
    }
  }//_Loop GP_KPI_FIELDS
  NPP_Max++;
  tmp_prn_fond_shap.cGP_KPI_RAISE  := GP_KPI_RAISE.Nrec;
  tmp_prn_fond_shap.sRazdel        := GP_KPI_RAISE.Name;
  tmp_prn_fond_shap.NPP            := NPP_Max;
  tmp_prn_fond_shap.cGP_KPI_FIELDS :=0;
  tmp_prn_fond_shap.wType          :=2;
  tmp_prn_fond_shap.sTitle:='Остаток';
  insert current tmp_prn_fond_shap;
} //Function Ins_Shap(_pGP_KPI_RAISe:comp):boolean;

//----------------------------------
// Вставка строки
//----------------------------------
Procedure Ins_tmp_prn_fond;
{   var _sPodr:string='';
    var _sGrPers:string='';
    pKatPodr:=tmp_kpi_sum.cRec[1];
    if getfirst Katpodr<>tsok then _sPodr:='!?'+string(pKatPodr,0,0)
                              else _sPodr:=KatPodr.Kod;
    pGP_KPI_GROUPPERS:=tmp_kpi_sum.cRec[3];
    if getfirst GP_KPI_GROUPPERS<>tsok then _sGrPers:='!?'+string(pGP_KPI_GROUPPERS,0,0)
                                       else _sGrPers:=GP_KPI_GROUPPERS.Name;
    if getfirst tmp_prn_fond where (( _sPodr == tmp_prn_fond.dms[1]
                   and _sGrPers == tmp_prn_fond.dms[2] ))<>tsok
    { clearbuffer(#tmp_prn_fond);
      tmp_prn_fond.dms[1]:=_sPodr;
      tmp_prn_fond.dms[2]:=_sGrPers;
      tmp_prn_fond.Sortkey:=substr(tmp_prn_fond.dms[1],1,100)+'=='+substr(tmp_prn_fond.dms[2],1,100);
      insert current tmp_prn_fond;
      if getfirst  tmp_prn_fond_podr where (( _sPodr == tmp_prn_fond_podr.Podr_kod)) <>tsok
      { insert into tmp_prn_fond_podr set tmp_prn_fond_podr.Podr_kod:=_sPodr;

      }
      if getfirst  tmp_prn_fond_group where (( _sGrPers == tmp_prn_fond_group.Name)) <>tsok
      { insert into tmp_prn_fond_group set tmp_prn_fond_group.Name:=_sGrPers;

      }

    }
    if Timelog_Status>0
    { timelog(' Ins_tmp_prn_fond _sPodr='+_sPodr+', _sGrPers='+_sGrPers );
    }
} //Procedure Ins_tmp_prn_fond;


//----------------------------------
// Добавим недостающие группы
//----------------------------------
Procedure AddRowForGroupPers;
{ if not IsBitCTW(wOption,1) exit;
  _Loop tmp_prn_fond_podr
  {
    _Loop tmp_prn_fond_GROUP
    {
      if getfirst tmp_prn_fond where (( tmp_prn_fond_podr.Podr_kod == tmp_prn_fond.dms[1]
                   and tmp_prn_fond_GROUP.Name == tmp_prn_fond.dms[2] ))<>tsok
      { clearbuffer(#tmp_prn_fond);
        tmp_prn_fond.dms[1]:=tmp_prn_fond_podr.Podr_kod;
        tmp_prn_fond.dms[2]:=tmp_prn_fond_GROUP.Name;
        tmp_prn_fond.Sortkey:=substr(tmp_prn_fond.dms[1],1,100)+'=='+substr(tmp_prn_fond.dms[2],1,100);
        insert current tmp_prn_fond;
      }
    } //_Loop GP_KPI_GROUPPERS
  } //_Loop tmp_prn_fond_podr

} //Procedure AddRowForGroupPers;

//----------------------------------
// Сбор данных
//----------------------------------
Function SborData:boolean;
var
  _pGP_KPI_RAISE:comp;
{ Result:=False;
  timelog('GP_KPI_Doc_FondPrint->SborData START');

  NPP_Max:=0;
  var _Sum:double=0;
  //-----------------------
  // сформируем шапку
  timelog('========== Шапка ========');

  SQL Select Distinct
   GP_KPI_RAISE.Name as sRazdel
  ,GP_KPI_RAISE.CODE+' '+GP_KPI_RAISE.Name as SortKey
  ,GP_KPI_RAISE.NREC as cGP_KPI_RAISE
  ,0 as FLD
  ,0 as FLD_NPP
  From GP_KPI_DOC
    inner join GP_KPI_DOC_SP on GP_KPI_DOC_SP.cGP_KPI_DOC = GP_KPI_DOC.Nrec
         and #comp(0)<GP_KPI_DOC_SP.cGP_KPI_Raise
    inner join GP_KPI_Raise on GP_KPI_Raise.Nrec = GP_KPI_DOC_SP.cGP_KPI_Raise
    where GP_KPI_DOC.wMonth =:(wMonth_Flt) and GP_KPI_DOC.wYear=:(wYear_Flt)
      and GP_KPI_DOC.wType=101
    Group by GP_KPI_RAISE.Name, GP_KPI_RAISE.CODE+' '+GP_KPI_RAISE.Name, GP_KPI_RAISE.NREC
  into tmp_prn_fond_Razdel;

  _Loop tmp_prn_fond_Razdel ordered by index tmp_prn_Razdel03
  { if IsBitCtw(wOption,3)
     if not FoundMarker(Marker_KPI_RAISE,tmp_prn_fond_Razdel.cGP_KPI_RAISE) continue;

    Ins_Shap(tmp_prn_fond_Razdel.cGP_KPI_RAISE);
  }
  // сформируем шапку
  //-----------------------

  //-----------------------
  // подобъем итоги по премии в разрезе фонда
  timelog('========== Итоги по премиям ========');

  _Try
  {
    MTRetrieve(#tmp_kpi_sum,mfFilters + mfClear);//+mfClearFilters
    delete all tmp_kpi_sum;
    SQL select
     '' as sortkey
    ,GP_KPI_DOC.cKatPodr cRec_1
    ,GP_KPI_DOC_SP.cGP_KPI_Raise  cRec_2
    ,GP_KPI_GROUPPERS_SP.cGroupPers cRec_3
    ,#Comp(0)  cRec_4 //GP_KPI_FOND.Nrec
    ,#Comp(0)  cRec_5
    #GP_KPI_DOC_SP_SUM(01)
    #GP_KPI_DOC_SP_SUM(02)
    #GP_KPI_DOC_SP_SUM(03)
    #GP_KPI_DOC_SP_SUM(04)
    #GP_KPI_DOC_SP_SUM(05)
    #GP_KPI_DOC_SP_SUM(06)
    #GP_KPI_DOC_SP_SUM(07)
    #GP_KPI_DOC_SP_SUM(08)
    #GP_KPI_DOC_SP_SUM(09)
    #GP_KPI_DOC_SP_SUM(10)
    #GP_KPI_DOC_SP_SUM(11)
    #GP_KPI_DOC_SP_SUM(12)
    #GP_KPI_DOC_SP_SUM(13)
    #GP_KPI_DOC_SP_SUM(14)
    #GP_KPI_DOC_SP_SUM(15)
    #GP_KPI_DOC_SP_SUM(16)
    #GP_KPI_DOC_SP_SUM(17)
    #GP_KPI_DOC_SP_SUM(18)
    #GP_KPI_DOC_SP_SUM(19)
    #GP_KPI_DOC_SP_SUM(20)
    From GP_KPI_DOC
    inner join GP_KPI_DOC_SP on GP_KPI_DOC_SP.cGP_KPI_DOC = GP_KPI_DOC.Nrec
         and #comp(0)<GP_KPI_DOC_SP.cGP_KPI_Raise
    inner join GP_KPI_GROUPPERS_SP on GP_KPI_GROUPPERS_SP.cKlKatego = GP_KPI_DOC_SP.cKlKatego
    //inner join GP_KPI_Fond on GP_KPI_Fond.cGroupPers =  GP_KPI_GROUPPERS_SP.cGroupPers
    //                      and GP_KPI_Fond.cKpi_Raise =  GP_KPI_DOC_SP.cGP_KPI_Raise
    where GP_KPI_DOC.wMonth =:(wMonth_Flt) and GP_KPI_DOC.wYear=:(wYear_Flt)
      and GP_KPI_DOC.wType=101
    Group by
     GP_KPI_DOC.cKatPodr
    ,GP_KPI_DOC_SP.cGP_KPI_Raise
    ,GP_KPI_GROUPPERS_SP.cGroupPers
    into tmp_kpi_sum;
  }
  _Except
  else
  { timelog('Возникло исключение при запуске запроса 001 '+ExploreException);
  }
  _finally
  {
  }
  timelog('GP_KPI_Doc_FondPrint->SborData 001');
  ReReadRecord(#tmp_kpi_sum);
  if Getfirst tmp_kpi_sum<>tsok
  { insert current tmp_kpi_sum;
  }
  _pGP_KPI_RAISE:=-999;
  //---------------------
  _Loop tmp_kpi_sum
  { //timelog('   001 '+tmp_kpi_sum.sortname);
    if not NextVisual then exit;
    if IsBitCtw(wOption,3)  if not FoundMarker(Marker_KPI_RAISE,tmp_kpi_sum.cRec[2]) continue;

    if tmp_kpi_sum.cRec[2]<>_pGP_KPI_RAISE
    { Ins_Shap(tmp_kpi_sum.cRec[2]);
      _pGP_KPI_RAISE:=tmp_kpi_sum.cRec[2];
    }
    Ins_tmp_prn_fond;
    _Sum:=0;
    _Loop tmp_prn_fond_shap where
    ((   tmp_kpi_sum.cRec[2] == tmp_prn_fond_shap.cGP_KPI_Raise
    and  0 == tmp_prn_fond_shap.wType
    and  0 << tmp_prn_fond_shap.NPP
    and 100>>=tmp_prn_fond_shap.NPP
    ))
    { if tmp_prn_fond_shap.Fld>0
      { if tmp_prn_fond_shap.Proc>0
        { continue;
        }
        _Sum:=tmp_kpi_sum.dmSu[tmp_prn_fond_shap.Fld];
        tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]:=tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]+_Sum;
        if Timelog_status>0
        timelog(' Поле '+string(tmp_prn_fond_shap.Fld)+', нач. '+string(tmp_prn_fond_shap.Fld_NACH)
         +', колонка '+string(tmp_prn_fond_shap.NPP)
         +', сумма '+string(_Sum,0,2)+',  накопили '+string(tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP],0,2)
        );

      } //if tmp_prn_fond_shap.Fld>0
    } //_Loop tmp_prn_fond_shap where (( tmp_kpi_sum.cRec[2] == tmp_prn_fond_shap.cGP_KPI_Raise ))
    update current tmp_prn_fond;
  } //_Loop tmp_kpi_sum

  //------------------------------------
  // Плановый фонд
  timelog('========== Плановый фонд ========');
  ReReadRecord(#tmp_prn_fond_Razdel);
  _Loop tmp_prn_fond_Razdel
  { if tmp_prn_fond_Razdel.FLD_Nach=0 then continue;
    if tmp_prn_fond_Razdel.FLD=0 then continue;
    if tmp_prn_fond_Razdel.Need_Plan=0 then continue;
    timelog(' -- '+tmp_prn_fond_Razdel.sRazdel);
    if tmp_prn_fond_Razdel.cGP_KPI_RAISE=0 then continue;
    MTRetrieve(#tmp_kpi_sum,mfFilters + mfClear+mfClearFilters);
    delete all tmp_kpi_sum;
    _pGP_KPI_RAISE:=tmp_prn_fond_Razdel.cGP_KPI_RAISE;
    NPP_FLD_NACH     :=tmp_prn_fond_Razdel.FLD_NACH;
    NPP_FLD_Plan_Proc:=tmp_prn_fond_Razdel.FLD;
    _Try
    {
      SQL select
       '' as sortkey
      ,GP_KPI_DOC.cKatPodr cRec_1
      ,GP_KPI_DOC_SP.cGP_KPI_Raise  cRec_2
      ,GP_KPI_GROUPPERS_SP.cGroupPers cRec_3
      ,0 cRec_4 //GP_KPI_FOND.Nrec
      ,#Comp(0)  cRec_5
      ,SUM(round( Cast((CASE  :(NPP_FLD_Plan_Proc)
         WHEN 01 THEN GP_KPI_Doc_SP.FARRVALUE[01] WHEN 02 THEN GP_KPI_Doc_SP.FARRVALUE[02]
         WHEN 03 THEN GP_KPI_Doc_SP.FARRVALUE[03] WHEN 04 THEN GP_KPI_Doc_SP.FARRVALUE[04]
         WHEN 05 THEN GP_KPI_Doc_SP.FARRVALUE[05] WHEN 06 THEN GP_KPI_Doc_SP.FARRVALUE[06]
         WHEN 07 THEN GP_KPI_Doc_SP.FARRVALUE[07] WHEN 08 THEN GP_KPI_Doc_SP.FARRVALUE[08]
         WHEN 09 THEN GP_KPI_Doc_SP.FARRVALUE[09] WHEN 10 THEN GP_KPI_Doc_SP.FARRVALUE[10]
         WHEN 11 THEN GP_KPI_Doc_SP.FARRVALUE[11] WHEN 12 THEN GP_KPI_Doc_SP.FARRVALUE[12]
         WHEN 13 THEN GP_KPI_Doc_SP.FARRVALUE[13] WHEN 14 THEN GP_KPI_Doc_SP.FARRVALUE[14]
         WHEN 15 THEN GP_KPI_Doc_SP.FARRVALUE[15] WHEN 16 THEN GP_KPI_Doc_SP.FARRVALUE[16]
         WHEN 17 THEN GP_KPI_Doc_SP.FARRVALUE[17] WHEN 18 THEN GP_KPI_Doc_SP.FARRVALUE[18]
         WHEN 19 THEN GP_KPI_Doc_SP.FARRVALUE[19] WHEN 20 THEN GP_KPI_Doc_SP.FARRVALUE[20]
         END )  as double) *
         Cast((CASE  :(NPP_FLD_Nach)
         WHEN 01 THEN GP_KPI_Doc_SP.FARRVALUE[01] WHEN 02 THEN GP_KPI_Doc_SP.FARRVALUE[02]
         WHEN 03 THEN GP_KPI_Doc_SP.FARRVALUE[03] WHEN 04 THEN GP_KPI_Doc_SP.FARRVALUE[04]
         WHEN 05 THEN GP_KPI_Doc_SP.FARRVALUE[05] WHEN 06 THEN GP_KPI_Doc_SP.FARRVALUE[06]
         WHEN 07 THEN GP_KPI_Doc_SP.FARRVALUE[07] WHEN 08 THEN GP_KPI_Doc_SP.FARRVALUE[08]
         WHEN 09 THEN GP_KPI_Doc_SP.FARRVALUE[09] WHEN 10 THEN GP_KPI_Doc_SP.FARRVALUE[10]
         WHEN 11 THEN GP_KPI_Doc_SP.FARRVALUE[11] WHEN 12 THEN GP_KPI_Doc_SP.FARRVALUE[12]
         WHEN 13 THEN GP_KPI_Doc_SP.FARRVALUE[13] WHEN 14 THEN GP_KPI_Doc_SP.FARRVALUE[14]
         WHEN 15 THEN GP_KPI_Doc_SP.FARRVALUE[15] WHEN 16 THEN GP_KPI_Doc_SP.FARRVALUE[16]
         WHEN 17 THEN GP_KPI_Doc_SP.FARRVALUE[17] WHEN 18 THEN GP_KPI_Doc_SP.FARRVALUE[18]
         WHEN 19 THEN GP_KPI_Doc_SP.FARRVALUE[19] WHEN 20 THEN GP_KPI_Doc_SP.FARRVALUE[20]
         END )  as double) /100.00 ,2 )     ) as dmsu01
      ,0.00 as dmsu02,0.00 as dmsu03,0.00 as dmsu04,0.00 as dmsu05
      ,0.00 as dmsu06,0.00 as dmsu07,0.00 as dmsu08,0.00 as dmsu09,0.00 as dmsu10
      ,0.00 as dmsu11,0.00 as dmsu12,0.00 as dmsu13,0.00 as dmsu14,0.00 as dmsu15
      ,0.00 as dmsu16,0.00 as dmsu17,0.00 as dmsu18,0.00 as dmsu19,0.00 as dmsu20
      From GP_KPI_DOC
      inner join GP_KPI_DOC_SP on GP_KPI_DOC_SP.cGP_KPI_DOC = GP_KPI_DOC.Nrec
           and #comp(0)<GP_KPI_DOC_SP.cGP_KPI_Raise
           and GP_KPI_DOC_SP.cGP_KPI_Raise=:(_pGP_KPI_RAISE)
      inner join GP_KPI_GROUPPERS_SP on GP_KPI_GROUPPERS_SP.cKlKatego = GP_KPI_DOC_SP.cKlKatego
      //inner join GP_KPI_Fond on GP_KPI_Fond.cGroupPers =  GP_KPI_GROUPPERS_SP.cGroupPers
      //                      and GP_KPI_Fond.cKpi_Raise =  GP_KPI_DOC_SP.cGP_KPI_Raise
      where GP_KPI_DOC.wMonth =:(wMonth_Flt) and GP_KPI_DOC.wYear=:(wYear_Flt)
        and GP_KPI_DOC.wType=101
      Group by
       GP_KPI_DOC.cKatPodr
      ,GP_KPI_DOC_SP.cGP_KPI_Raise
      ,GP_KPI_GROUPPERS_SP.cGroupPers
      into tmp_kpi_sum;
    }
    _Except
    else
    { timelog('Возникло исключение при запуске запроса 001 '+ExploreException);
    }
    _finally
    {
    }
    // здесь вообще не нужно
    // Ins_Shap(tmp_kpi_sum.cRec[2]);

    _pGP_KPI_RAISE:=-999;
    //---------------------
    _Loop tmp_kpi_sum
    { //timelog('   001 '+tmp_kpi_sum.sortname);

      if not NextVisual then exit;
      if getfirst tmp_prn_fond_shap where (( tmp_kpi_sum.cRec[2] == tmp_prn_fond_shap.cGP_KPI_Raise
        and 'Плановый фонд, руб' == tmp_prn_fond_shap.sTitle ))=tsok
      { Ins_tmp_prn_fond;
        update current tmp_prn_fond set
         tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]:=
           tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]+tmp_kpi_sum.dmSu[1];
      }
    } //_Loop tmp_kpi_sum
  } //_Loop tmp_prn_fond_Razdel
  // Плановый фонд
  //------------------------------------

  //-------------------------------------
  //Остаток
  timelog('========== Остаток ========');
  _Try
  {
    MTRetrieve(#tmp_kpi_sum,mfFilters + mfClear+mfClearFilters);
    delete all tmp_kpi_sum;
    SQL select
     ''  as sortkey
    ,GP_KPI_DOC.cKatPodr cRec_1
    ,GP_KPI_Fond.cKPI_Raise  cRec_2
    ,GP_KPI_Fond.cGroupPers cRec_3
    ,#Comp(0)  cRec_4 //GP_KPI_FOND.Nrec
    ,#Comp(0)  cRec_5
    ,Sum(GP_KPI_DOCSUMFOND.Summa) as dmsu_01
    ,Sum(GP_KPI_DOCSUMFOND.Rasp ) as dmsu_02
    ,0.00 as dmsu03,0.00 as dmsu04,0.00 as dmsu05
    ,0.00 as dmsu06,0.00 as dmsu07,0.00 as dmsu08,0.00 as dmsu09,0.00 as dmsu10
    ,0.00 as dmsu11,0.00 as dmsu12,0.00 as dmsu13,0.00 as dmsu14,0.00 as dmsu15
    ,0.00 as dmsu16,0.00 as dmsu17,0.00 as dmsu18,0.00 as dmsu19,0.00 as dmsu20
    From GP_KPI_DOC
    inner join GP_KPI_DOCSUMFOND on GP_KPI_DOCSUMFOND.cDoc = GP_KPI_DOC.Nrec
                                and GP_KPI_DOCSUMFOND.wType=GP_KPI_Doc.wType
    inner join GP_KPI_Fond on GP_KPI_Fond.Nrec =  GP_KPI_DocSumFond.cGP_KPI_Fond
    where GP_KPI_DOC.wMonth =:(wMonth_Flt) and GP_KPI_DOC.wYear=:(wYear_Flt)
      and GP_KPI_DOC.wType=101
    Group by
     GP_KPI_DOC.cKatPodr
    ,GP_KPI_Fond.cKPI_Raise
    ,GP_KPI_Fond.cGroupPers
    into tmp_kpi_sum;
  }
  _Except
  else
  { timelog('Возникло исключение при запуске запроса 001 '+ExploreException);
  }
  _finally
  {
  }
  _pGP_KPI_RAISE:=-999;
  //---------------------
  _Loop tmp_kpi_sum
  { //timelog('   002 '+tmp_kpi_sum.sortname);
    if not NextVisual then exit;
    if IsBitCtw(wOption,3)  if not FoundMarker(Marker_KPI_RAISE,tmp_kpi_sum.cRec[2]) continue;

    if tmp_kpi_sum.cRec[2]<>_pGP_KPI_RAISE
    { Ins_Shap(tmp_kpi_sum.cRec[2]);
      _pGP_KPI_RAISE:=tmp_kpi_sum.cRec[2];
    }
    if getfirst tmp_prn_fond_shap where (( tmp_kpi_sum.cRec[2] == tmp_prn_fond_shap.cGP_KPI_Raise
      and 'Остаток' == tmp_prn_fond_shap.sTitle ))=tsok
    { Ins_tmp_prn_fond;
      _Sum:=tmp_kpi_sum.dmSu[1]-tmp_kpi_sum.dmSu[2];
      update current tmp_prn_fond set  tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]:=tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]+_Sum;
    }
  } //_Loop tmp_kpi_sum

  //Остаток
  //-------------------------------------

  //-------------------------------------
  //Фонды
  timelog('====== фонды =====');
  _Try
  {
    MTRetrieve(#tmp_kpi_sum,mfFilters + mfClear+mfClearFilters);
    delete all tmp_kpi_sum;
    SQL select
     '' as sortkey
    ,GP_KPI_DOC_SP.cKatPodr cRec_1
    ,GP_KPI_Fond.cKPI_Raise  cRec_2
    ,GP_KPI_Fond.cGroupPers cRec_3
    ,#Comp(0) cRec_4
    ,#Comp(0)  cRec_5
    #GP_KPI_DOC_SP_SUM(01)
    #GP_KPI_DOC_SP_SUM(02)
    #GP_KPI_DOC_SP_SUM(03)
    #GP_KPI_DOC_SP_SUM(04)
    #GP_KPI_DOC_SP_SUM(05)
    #GP_KPI_DOC_SP_SUM(06)
    #GP_KPI_DOC_SP_SUM(07)
    #GP_KPI_DOC_SP_SUM(08)
    #GP_KPI_DOC_SP_SUM(09)
    #GP_KPI_DOC_SP_SUM(10)
    #GP_KPI_DOC_SP_SUM(11)
    #GP_KPI_DOC_SP_SUM(12)
    #GP_KPI_DOC_SP_SUM(13)
    #GP_KPI_DOC_SP_SUM(14)
    #GP_KPI_DOC_SP_SUM(15)
    #GP_KPI_DOC_SP_SUM(16)
    #GP_KPI_DOC_SP_SUM(17)
    #GP_KPI_DOC_SP_SUM(18)
    #GP_KPI_DOC_SP_SUM(19)
    #GP_KPI_DOC_SP_SUM(20)
    From GP_KPI_DOC
    inner join GP_KPI_DOC_SP on GP_KPI_DOC_SP.cGP_KPI_DOC = GP_KPI_DOC.Nrec
    inner join GP_KPI_Fond on GP_KPI_Fond.Nrec =  GP_KPI_DOC.CGP_KPI_FOND
    inner join GP_Status on GP_Status.Nrec = GP_KPI_DOC.cStatus and (GP_Status.CODE<>'01')
    where GP_KPI_DOC.wMonth =:(wMonth_Flt) and GP_KPI_DOC.wYear=:(wYear_Flt)
      and GP_KPI_DOC.wType=2
    Group by
     GP_KPI_DOC_SP.cKatPodr
    ,GP_KPI_Fond.cKPI_Raise
    ,GP_KPI_Fond.cGroupPers
    into tmp_kpi_sum;

  }
  _Except
  else
  { timelog('Возникло исключение при запуске запроса 001 '+ExploreException);
  }
  _finally
  {
  }
  _pGP_KPI_RAISE:=-999;
  //---------------------
  _Loop tmp_kpi_sum
  { //timelog('   002 '+tmp_kpi_sum.sortname);
    if not NextVisual then exit;
    if IsBitCtw(wOption,3)  if not FoundMarker(Marker_KPI_RAISE,tmp_kpi_sum.cRec[2]) continue;

    if tmp_kpi_sum.cRec[2]<>_pGP_KPI_RAISE
    { Ins_Shap(tmp_kpi_sum.cRec[2]);
      _pGP_KPI_RAISE:=tmp_kpi_sum.cRec[2];
    }
    Ins_tmp_prn_fond;
    _Sum:=0;
    _Loop tmp_prn_fond_shap where (( tmp_kpi_sum.cRec[2] == tmp_prn_fond_shap.cGP_KPI_Raise
     and 1 == tmp_prn_fond_shap.wType
     and 0 << tmp_prn_fond_shap.Npp
     and 100>>=tmp_prn_fond_shap.Npp
     ))
    { if tmp_prn_fond_shap.Fld>0
      { _Sum:=tmp_kpi_sum.dmSu[tmp_prn_fond_shap.Fld];
        tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]:=
             tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP]+_Sum;
        if Timelog_status>0
        { timelog('Премия '+tmp_prn_fond_shap.sRazdel
              +', поле ' +tmp_prn_fond_shap.sTitle
              +', NPP='  +string(tmp_prn_fond_shap.NPP)
              +', добавляем '+string(_Sum,0,2)
              +', итого '+string(tmp_prn_fond.dmd[tmp_prn_fond_shap.NPP],0,2)
             );
        }
      } //if tmp_prn_fond_shap.Fld>0
    } //_Loop tmp_prn_fond_shap where (( tmp_kpi_sum.cRec[2] == tmp_prn_fond_shap.cGP_KPI_Raise ))
    update current tmp_prn_fond;
  } //_Loop tmp_kpi_sum


  //Фонды
  //-------------------------------------

  //-------------------------------------
  AddRowForGroupPers;
  //-------------------------------------
  Result:=True;
  timelog('GP_KPI_Doc_FondPrint->SborData Finish');
} //Function SborData:boolean;

//=======================================
//Скрываем колонки в XLS
//=======================================
Function HideShowColumnXLS(hideColumn:longint; _width:word=0):boolean;
{
  Result:=xlSetColumnWidth(_width, 1,hideColumn, 1,hideColumn);
}

//---------------------
// Печать подписей
//---------------------
Procedure PrintPodpisXLS(_Post,_Fio:string;_Col_Post,_Col_Podpis,_Col_Fio:word);
{ wexrow++;
  wexcol:=_Col_Post;
  MyPutExcel(_Post,10,0,-1,-1); //
  if _Col_Post>_Col_Podpis-2 exit;
  xlMergeCells(wexrow,_Col_Post, wexrow,_Col_Podpis-2); //Объединяем ячейки
  if _Post=''
  MyxlFrameCells(xlBorderB, xlThin, 0, 0, wexrow,_Col_Post, wexrow,_Col_Podpis-2); //Обрамление
  if _Col_Podpis>_Col_Fio-2 exit;
  MyxlFrameCells(xlBorderB, xlThin, 0, 0, wexrow,_Col_Podpis, wexrow,_Col_Fio-2); //Обрамление
  xlMergeCells(wexrow,_Col_Podpis, wexrow,_Col_Fio-2);
  MyPutExcel(_Fio,10,0,-1,-1); //
  xlMergeCells(wexrow,_Col_Fio, wexrow,_Col_Fio+2);
  if _Fio=''
   MyxlFrameCells(xlBorderB, xlThin, 0, 0, wexrow,_Col_Fio, wexrow,_Col_Fio+2); //Обрамление
  wexrow++;
  wexcol:=_Col_Podpis;
  MyPutExcel('подпись',8,0,-1,-1); //
  xlMergeCells(wexrow,_Col_Podpis, wexrow,_Col_Fio-2);
  xlAlignCellsEx(xlCenter,xlTop,wexrow, _Col_Podpis, wexrow,_Col_Fio-2)
} //Procedure PrintPodpisXLS(_Post,_Fio:string;_Col_Post,Col_Podpis,Col_Fio:word);


//----------------------------------
// Печать данных
//----------------------------------
Function PrintDoc01:boolean;
var maxColCount:word;
    werr:word;
    dmit:array [1..100] of double;
{ Result:=False;
  timelog('GP_KPI_Doc_FondPrint->PrintDoc01 START');
  for(wexcol:=1;wexcol<=100;wexcol++)
  { dmit[wexcol]:=0;
  }
  maxColCount:=0;
  wexrow:=0;
  werr:=ExcelInit('GP_KPI_DOC_Fond.xlsm',true);
  wexrow:=1;
  matrixkl:=false;
  MyPutExcel('Отчет по премиальным фондам',14,0,-1,-1); //
  xlMergeCells(wexrow,1, wexrow,4);
  wexcol:=5;
  MyPutExcel(LPadCh(wMonth_Flt,'0',2)+'/'+string(wYear_Flt),14,0,-1,-1); //
  //---------------------------
  wexrow:=3;
  wexcol:=1;
  HideShowColumnXLS(wexcol,10);//
  MyPutExcel('Подразделения',10,0,-1,-1); //
  HideShowColumnXLS(wexcol,10);//
  MyPutExcel('Группа персонала',10,0,-1,-1); //
  var _sRazdel:string;
  _sRazdel:='?????????';
  var _wCol_prev:word=0;

  var _wCol:word=0;
  for(_wcol:=1; _wcol<=2;_wcol++)
  { xlMergeCells(wexrow,_wCol,wexrow+1,_wcol); //Объединяем ячейки
  }
  _wCol:=wexcol-1;
  _Loop fullcache tmp_prn_fond_shap
  { _wCol++;
    //update current tmp_prn_fond_shap set tmp_prn_fond_shap.Column:=_wCol;
    HideShowColumnXLS(_wCol,12);//фио
    if _sRazdel<>tmp_prn_fond_shap.sRazdel
    { if _wCol_prev<>0
      { xlMergeCells(wexrow,_wCol_prev, wexrow,_wcol-1); //Объединяем ячейки
      }
      _wCol_prev:=_wCol;
      wexcol:=_wCol;
      MyPutExcel(tmp_prn_fond_shap.sRazdel,10,0,-1,-1); //
      _sRazdel:=tmp_prn_fond_shap.sRazdel;
    }
  } //_Loop fullcache tmp_prn_fond_shap
  if _wCol_prev<>0
  { xlMergeCells(wexrow, _wCol_prev,wexrow,_wcol); //Объединяем ячейки
  }
  maxColCount:=wexcol-1;
  Timelog(' maxColCount= '+string(maxColCount));
  //--------------------------
  wexrow++;
  wexcol:=3;
  _Loop fullcache tmp_prn_fond_shap
  { MyPutExcel(tmp_prn_fond_shap.sTitle,10,0,-1,-1); //
  } //_Loop fullcache tmp_prn_fond_shap
  maxColCount:=wexcol-1;
  //--------------------------
  xlSetFontStyle(xlbold, wexrow-2,1, wexrow,maxColCount); //Bold
  //--------------------------
  HeaderStrCount:=wexrow;
  MyXlCreaMatrix(1000, maxColCount);
  matrixkl:=true;
  matrixsdvig:=wexrow;
  _Loop tmp_prn_fond
  { if not NextVisual break;
    wexrow++;
    wexcol:=1;
    MyPutExcel(chr(39)+tmp_prn_fond.dms[1],10,0,-1,-1); //
    MyPutExcel(chr(39)+tmp_prn_fond.dms[2],10,0,-1,-1); //
    for(_wcol:=1; _wcol<=maxColCount-2;_wcol++)
    { dmit[_wcol]:=dmit[_wcol]+tmp_prn_fond.dmd[_wCol];
      MyPutExcel(String(Round(tmp_prn_fond.dmd[_wCol],2),0,2),10,0,-1,-1); //
    }

  } //_Loop tmp_prn_fond

  //---- Итоги
  wexrow++;
  wexcol:=1;
  MyPutExcel(chr(39)+'Итого',10,0,-1,-1); //
  MyPutExcel('',10,0,-1,-1); //
  for(_wcol:=1; _wcol<=maxColCount-2;_wcol++)
  {
    if IsbitCTW(wOption,2)
    if dmit[_wcol]=0
    { HideShowColumnXLS(wexcol,0);//
    }
    MyPutExcel(String(Round(dmit[_wcol],2),0,2),10,0,-1,-1); //
  }
  xlSetFontStyle(xlbold, wexrow,1, wexrow,maxColCount); //Bold
  //--------------- Выведем данные
  MyxlWriteMatrix(wexrow);
  xlFreeMatrix;
  matrixkl:=false;
  //-------------- Финальное форматирование
  if wpoint='' wpoint:=',';
  var _wnumformat:string='# ##0'+wpoint+'00';
  xlSetNumberFormat(_wnumformat,HeaderStrCount+1,3,wexrow,maxColCount);
  //-------------------------
  MyxlFrameCells(xlBorderL or xlBorderR or xlBorderT or xlBorderB or xlInsideV or xlInsideH, xlThin
           , 0, 0, HeaderStrCount-1 ,1,wexrow,maxColCount); //Обрамление
  xlWrapText(HeaderStrCount-1, 1, wexrow, maxColCount);
  xlRunMacro('AfterForm') ;
  MyXlEnd;
  Result:=True;
  timelog('GP_KPI_Doc_FondPrint->PrintDoc01 Finish');
} //Function PrintDoc01:boolean;

//----------------------------------
// Формирование отчета
//----------------------------------
Function FormDoc:boolean;
{ timelog('GP_KPI_Doc_FondPrint->FormDoc START');
  Result:=False;
  MTRetrieve(#tmp_prn_fond,mfFilters + mfClear+mfClearFilters);
  MTRetrieve(#tmp_prn_fond_Shap,mfFilters + mfClear+mfClearFilters);
  MTRetrieve(#tmp_prn_fond_Razdel,mfFilters + mfClear+mfClearFilters);

  delete all tmp_prn_fond;
  delete all tmp_prn_fond_shap;
  delete all tmp_prn_fond_Razdel;

  MTRetrieve(#tmp_prn_fond_Razdel,mfFilters + mfClear+mfClearFilters);
  delete all tmp_prn_fond_Razdel;
  MTRetrieve(#tmp_prn_fond_podr,mfFilters + mfClear+mfClearFilters);
  delete all tmp_prn_fond_podr;
  MTRetrieve(#tmp_prn_fond_Group,mfFilters + mfClear+mfClearFilters);
  delete all tmp_prn_fond_Group;

  if Not SborData exit;
  if not iNextVisual('Ждите, идет формирование отчета') exit;
  case wTypeRep of
  1: PrintDoc01;
  end;
  Result:=True;
  timelog('GP_KPI_Doc_FondPrint->FormDoc Finish');
} //Function FormDoc:boolean;


  //---------------------------------------
  // Установка наименований фильтров
  //---------------------------------------
  Procedure SetFilterNM(_Field:longint=0);
  { if _Field=0 or _Field=#Filtr_KPI_Raise
    { #mrkfiltr_(GP_KPI_Raise_Flt,KPI_Raise,Nrec,wc_nrec,GP_KPI_Raise_Flt.Name)
    }
    ReScanPanel(#GP_KPI_Raise_Flt);
  } //Procedure SetFilterNM(_Field:longint)




//-------------------------------------
Screen scrParam 'Параметры формирования' (,,sci1Esc);
Table GP_KPI_Raise_Flt;
Fields
  wTypeRep  : [List 1 'Отчет по премиальным фондам'],Protect;
  wYear_Flt : NoProtect;
  wMonth_flt: NoProtect;
  wOption   : NoProtect;
  FILTR_KPI_RAISE : Protect,PickButton;
Buttons
  cmOk,default,,'Сформировать отчет', hcOplTrudhlp, sci1Esc;
  cmCancel,,,'Выход', hcOplTrudhlp, sci1Esc;
<<

 `Тип отчета` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Год`        .@@@@@@
 `Месяц`      .@@@@@@
  `Опции`
  [.] Добавлять недостающие строки по группам категорий`
  [.] Скрыть колонки с 0 суммами`
  [.] Только заданные премии` .@@@@@@@@@@@@@@@@@@@@@@@@@

   <.~С~формировать.>        <.   ~О~тмена   .>
>>
end; //scrParam 'Параметры формирования' (,,sci1Esc), Cyan;
//--------------------------------------------
// Обработчик событий интерфейса
//--------------------------------------------
HandleEvent
cmInit:
{ TimeLog_Init;
  wMonth_flt:=MonthRas;
  wYear_Flt :=YearRas;
  wOption:=1; // Добавлять строки по группам по умолчанию
  ReadParam;
  SetFilterNm(0);
}
cmDone:
{ SaveParam;
}
cmOk:
{  StartNewVisual(vtNumericVisual,vfTimer + vfBreak + vfConfirm,'Подготовка данных для отчета',0);
   if not FormDoc then message('Ошибки при формировании');
   StopVisual('',0);
   CloseInterFace(cmDone);
}
cmPick:
{  case CurField of
      #Filtr_KPI_Raise:
      { KauMarkerName := 'GP_KPI_RaiseEdit';
        StoreMarker(Marker_KPI_Raise,KauMarkerName);
        if RunInterface(GP_KPI_RaiseEdit,cgiPickMult,0,101)<>cmCancel
        { Marker_Tmp  :=InitMarker(KauMarkerName, 8, 50, 10, True);
          CopyMarker(Marker_KPI_Raise,Marker_Tmp);
          DoneMarker(Marker_Tmp,'');
          SetFilterNm(#Filtr_KPI_Raise);
        }
      }
   end;
}
//----------------------
cmDelOnProtect:
{ Case Curfield of
      #Filtr_KPI_Raise:
      { ClearMarker(Marker_KPI_RAISE);
        SetFilterNm(#Filtr_KPI_RAISE);
      }
  end;
}
end;

end.
