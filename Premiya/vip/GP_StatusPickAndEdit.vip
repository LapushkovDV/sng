/*************************************************************************************************\
* Наименование: Статусы документов                                                                *
* Контур/Модуль: *                                                                                *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер задачи  |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |24/08/17|Кузьмин П.Ю.             |НПО Энергомаш                    *
\*************************************************************************************************/

#include Marker.vih
#include GP_UserAccessService.vih

#include GP_Status.vih

interface GP_StatusPickAndEdit 'Статусы документов', Cyan;
show(20,5,90,25);

var cCurTypeDoc,cStatus:comp;
    hMarker:tptr;
    Mode:word;
    pMarker:IMarker(Marker) new;
    Status:GP_Status;
    sTypeDoc:string;
create view
as select GP_Status.Nrec
from
  GP_Status
, GP_TypeDocs
where((
    cCurTypeDoc== GP_Status.cTypeDoc
and sTypeDoc   == GP_TypeDocs.Name
));

parameters cCurTypeDoc,Mode,cStatus,hMarker,sTypeDoc;

browse brStatus (,,sci14Esc);
table GP_Status;
recMarker=pMarker;
fields
  GP_Status.Code 'Код':[5], Protect,NoAutoSize;
  GP_Status.Name 'Наименование статуса':[40], Protect;
end;

window WinEdit 'Редактирование статусов' Blue;
show(20,5,90,25);

browse brEditStatus (,,sci178Esc);
table GP_Status;
fields
  GP_Status.Code 'Код':[5], NoProtect,NoAutoSize;
  GP_Status.Name 'Наименование статуса':[40], NoProtect,
    {font={BackColor=if(GP_Status.Name='',ColorNeed,0)}};
end;

TableEvent table GP_Status;
cmSetDefault:{
  GP_Status.Code:=Status.GetNextCode;

  SelectField(#GP_Status.Name);
}
cmCheckField:{
  case CurField of
    #GP_Status.Name:{
      if (Trim(GP_Status.Name)='') {
        message('Пожалуйста, укажите наименование статуса или удалите запись.',error);
        abort;
      }
    }
  end;
}
cmInsertRecord:{
  insert current GP_Status;
}
cmUpdateRecord:{
  update current GP_Status;
}
cmDeleteRecord:{
  if (not Status.DelRec(GP_Status.NRec))
    abort;
}
end;

HandleEvent
cmDone:{
  if (not UpDateTable) abort;
}
end;
end;//WinEdit

HandleEvent
cmInit:{
  if (cCurTypeDoc=0)
  { if sTypeDoc<>''
    { if getfirst GP_TypeDocs=tsok
      { cCurTypeDoc:=GP_TypeDocs.Nrec
      }
    }
  }
  else
  {

  }


  if (cCurTypeDoc<>0)
    Status.TypeDoc:=cCurTypeDoc
  else {
    Status:=New(GP_Status,InitForTypeDoc('Оценка по показателям премирования'));
    if (Status=NullRef) {
      abort;
      exit;
    }
    cCurTypeDoc:=Status.TypeDoc;
  }

  if ((Mode and cgiPickMult)=cgiPickMult) {
    if (hMarker=0) {
      message('Не задан маркер для множественного выбора.',error);
      abort;
      exit;
    }
    pMarker.ImportFrom(hMarker);
     SetHelpAndStatusContext(brStatus, -1, sci1EscIns, hcKeepCurrent);
  } else {
    PutCommand(cmValue1);

    if ((Mode and cgiPick)=cgiPick)
      SetHelpAndStatusContext(brStatus, -1, sci1Esc, hcKeepCurrent);
  }

  if (cStatus<>0)
    if ((getfirst GP_Status where(cStatus=GP_Status.NRec))=tsok) {};

  if ((Mode and cgiMultiEdit)=cgiMultiEdit)
    PutCommand(cmEdit);
}
cmValue1:{
  pMarker.Disable:=true;
}
cmDefault:{
  if ((Mode and cgiPick)=cgiPick) {
    if ((Mode and cgiPickMult)=cgiPickMult) {
      if (pMarker.Count=0)
        pMarker.Mark;

      pMarker.ExportTo(hMarker);
    }

    cStatus:=GP_Status.NRec;
    CloseInterface(cmDefault);
  }
  else
    PutCommand(cmEdit);
}
cmEdit:{
  RunWindow(WinEdit);

  if ((Mode and cgiMultiEdit)=cgiMultiEdit)
    CloseInterface(cmDefault);
}
end;
end.
