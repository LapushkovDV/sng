/*************************************************************************************************\
* Наименование: Группы персонала                                                                  *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |20/09/17|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/
#include GP_Protector.Vih
#include GP_UserAccessService.vih

#include GP_KPI_GroupPersEdit.Vih
#doc
Группы персонала
#end
Interface GP_KPI_GroupPersEdit 'Группы персонала' , EscClose;
Show At (,,70,20) ;
var
  wIntMode:word; //тип запуска
  cRec    :Comp   ; // ссылка на группу
  isOpenSearch:boolean; //признак запуска быстрого выбора
  isProtect :boolean; //защищенный выбор
  DataProtector : IGP_Protector2;//защита полей от модификации
  UserAccessService:GP_UserAccessService NoAuto;
  RoleGroupName    :string;

Create View
as select GP_KPI_GroupPers.Nrec
From
  GP_KPI_GroupPers
, GP_KPI_GroupPers_SP
, GP_KPI_GroupPers_SP GP_KPI_GroupPers_SP_F
, KlKatego
where ((
    GP_KPI_GroupPers.Nrec == GP_KPI_GroupPers_SP.cGroupPers
and GP_KPI_GroupPers_SP.cKlKatego == GP_KPI_GroupPers_SP_F.cKlKatego
and GP_KPI_GroupPers_SP.cKlKatego == KlKatego.Nrec
));
Parameters
  wIntMode
#doc
#end
, cRec
#doc
, возвращаемый параметр
#end
;

procedure SetEditMode(Value: boolean);
{
  DataProtector.SetProtected(not Value);

  if Value
    cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpBlueWindow);
  else
    cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpCyanWindow);
  isProtect:=not Value;
} //Procedure SetEditMode(_isEdit:boolean);

Browse brGroupPers '' (,,sci178Esc);
show at (,,,10);
Table GP_KPI_GroupPers;
Fields
  GP_KPI_GroupPers.Code        'Код' :[20],NoProtect,NoPickButton,NoDel;
  GP_KPI_GroupPers.Name        'Наименование' :[40],NoProtect,NoPickButton,NoDel;
  GP_KPI_GroupPers.Description 'Описание'     :[40],NoProtect,NoPickButton,NoDel;
end;//Browse brGroupPers

Screen ScrGroupComm01;
show at (,11,,11) Fixed_y;
<<
 Привязка "Категорий персонала" к "Группам работников"
>>
end;

Browse brGroupPersSP '' (,,sci1378Esc) ;
show at (,12,,) ;
Table GP_KPI_GroupPers_SP;
Fields
  KlKatego.KOD        'Код' :[20],Protect,PickButton,NoDel;
  KlKatego.NAIKAT     'Наименование' :[40],Protect,PickButton,NoDel;
end;//Browse brGroupPersSP


//******************************************************************************
// HandleEvent таблиц
//******************************************************************************
TableEvent table GP_KPI_GroupPers;
cmSetDefault:
{ ClearBuffer(#GP_KPI_GroupPers);
}
cmInsertRecord:
{ Insert Current GP_KPI_GroupPers;
}
cmUpdateRecord:
{ Update Current GP_KPI_GroupPers;
}
cmDeleteRecord:
{ if message('Удалить запись?',YesNo)<>cmYes
  { abort; exit;
  }
  delete GP_KPI_GroupPers_Sp where (( GP_KPI_GroupPers.Nrec == GP_KPI_GroupPers_SP.cGroupPers ));
  delete Current GP_KPI_GroupPers;
}
end;

TableEvent table GP_KPI_GroupPers_SP ;
cmSetDefault:
{ ClearBuffer(#GP_KPI_GroupPers_Sp);
  GP_KPI_GroupPers_Sp.cGroupPers:=GP_KPI_GroupPers.Nrec
}
cmInsertRecord:
{ Insert Current GP_KPI_GroupPers_SP;
}
cmUpdateRecord:
{ Update Current GP_KPI_GroupPers_SP;
}
cmDeleteRecord:
{ if message('Удалить запись?',YesNo)<>cmYes
  { abort; exit;
  }
  delete Current GP_KPI_GroupPers_SP;
}
end;

//******************************************************************************
// HandleEvent самого интерфейса
//******************************************************************************
  HandleEvent
    cmInit:
    { LoadVipRef(DataProtector, 'GP_Protector');
      DataProtector.LinkToExt(cfsGetCurrentContainerSelf, '', true);
      DataProtector.ProtectedStatusCtx := sci1Esc;
      DataProtector.AutoPalette := true;
      //===========================
      RoleGroupName:='Мотивация персонала';

      UserAccessService:=New(GP_UserAccessService,InitForRoleGroup(RoleGroupName));
      if (UserAccessService=NullRef) {
        abort;
        exit;
      }

      if (not UserAccessService.IsAdmin)
      { if wIntMode=0
        { message('Вы не обладаете ролью Администратор.'#13'Редактирование запрещено.');
        }
        wIntMode:=wIntMode or cgiNotEdit
      }
      if wIntMode<>0
      { SetEditMode(false)
      }
      else
      { SetEditMode(True)
      }
    }
    cmDefault:
    { if (wIntMode and cgiPick)>0
      { set cRec:=GP_KPI_GroupPers.Nrec;
        CloseInterface(cmDefault)
      }

    }
    cmDone:
    { if DataProtector<>NullRef
      { FreeVipInterface(DataProtector);

      }

    }
    cmOpenSearch :
    {
      isOpenSearch:= true;
      ProcessCommand(cmPick);
      isOpenSearch:= false;
    }
    cmPick:
    { case CurField of
       #KlKatego.KOD
      ,#KlKatego.NAIKAT:
      {
              var ItemTable: comp;
        var Marker: TPtr;
        Marker := InitMarker('', 8, 1, 1);// Маркер для полей
        RunInterface('PickKat1', 0, Marker, vfCanSelect); // выбор родителя для записи

        if GetMarkerCount(Marker) > 0
        {
          GetMarker(Marker, 0, ItemTable);
          if GetFirst KlKatego where ((ItemTable == KlKatego.nRec)) = tsOk
            if (ItemTable <> GP_KPI_GroupPers_SP.cKlKatego)
            { if getfirst GP_KPI_GroupPers_SP_F where (( ItemTable == GP_KPI_GroupPers_SP_F.cKlKatego ))=tsok
              { message('Категория уже привязана к другой группе персонала')

              }
              else
              { set GP_KPI_GroupPers_SP.cKlKatego := ItemTable;
                set GP_KPI_GroupPers_SP.Code      := KlKatego.Kod;
                SetModified(true);
              }
            }
        }
        DoneMarker(Marker, '');// Маркер для полей

      }
      end;
    }
  end;
end.
