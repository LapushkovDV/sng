/*************************************************************************************************\
* Наименование: КПИ типы ведомостей                                                               *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |20/09/17|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/
#include marker.vih // описание объекта и объявление интерфейса
                    // marker c реализацией по умолчанию

#include GP_Protector.Vih
#include GP_UserAccessService.vih
#include GP_KPI_RaiseEdit.Vih

#include GP_KPI_TypeVedEdit.Vih
#doc
КПИ типы ведомостей
маркер GP_KPI_RaiseEdit
#end
Interface GP_KPI_TypeVedEdit 'Типы ведомостей' , EscClose;
Show At (,,70,20);
var
  wTypeDoc:word;//0 - премии, 1 = фонды, 2 исполнительская дисциплина
  wIntMode:word; //тип запуска
  cRec    :Comp   ; // ссылка на группу
  isOpenSearch:boolean; //признак запуска быстрого выбора
  isProtect :boolean; //защищенный выбор
  DataProtector : IGP_Protector2;//защита полей от модификации
  UserAccessService:GP_UserAccessService NoAuto;
  RoleGroupName    :string;
  pMarker:IMarker(Marker) new;
  Markers:Longint;
  pTmp:comp;
Create View
as select GP_KPI_TypeVed.Nrec
From
  GP_KPI_TypeVed(GP_KPI_TypeVed04)
//--------- поля
, GP_KPI_Fields(GP_KPI_Fields02)
, GP_KPI_Fields GP_KPI_Fields_F
, GP_KPI_Alg GP_KPI_Alg_Fld
, GP_KPI_Alg GP_KPI_Alg_Fld_Chk
, KatKau
, Catalogs CatSys
, X$Files

where ((
   wTypeDoc == GP_KPI_TypeVed.wType
//------------
and wTypeDoc                     == GP_KPI_Fields.wType
and GP_KPI_TypeVed.Nrec          == GP_KPI_Fields.cDoc
and wTypeDoc                     == GP_KPI_Fields_F.wType
and GP_KPI_TypeVed.Nrec          == GP_KPI_Fields_F.cDoc
and GP_KPI_Fields.Npp            == GP_KPI_Fields_F.Npp

and GP_KPI_Fields.cGP_KPI_Alg     == GP_KPI_Alg_Fld.Nrec
and GP_KPI_Fields.cGP_KPI_Alg_CHK == GP_KPI_Alg_Fld_Chk.Nrec
and GP_KPI_Fields.KodGroup        == KATKAU.KODGROUP
and GP_KPI_Fields.KodGroup        == CatSys.SysCode
and GP_KPI_Fields.KodGroup        == x$Files.xf$code

))
;
Parameters
 wTypeDoc
#doc
 0 - премии, 1 = фонды, 2 исполнительская дисциплина
#end
,  wIntMode
#doc
тип запуска
#end
, cRec
#doc
, возвращаемый параметр
#end
;


QuickChoice qcByCode
{
  AcceptField = GP_KPI_TypeVed.Nrec;
  ViewField = GP_KPI_TypeVed.Code;
  ViewField = GP_KPI_TypeVed.Name;
  // только текстовый поля!
  SearchField = GP_KPI_TypeVed.Code;
  OnOpen : {
  }
  OnClose : {
    cRec := GP_KPI_TypeVed.Nrec;
  }
}
QuickChoice qcByName
{
  AcceptField = GP_KPI_TypeVed.Nrec;
  ViewField = GP_KPI_TypeVed.Name;
  ViewField = GP_KPI_TypeVed.Code;
  // только текстовый поля!
  SearchField = GP_KPI_TypeVed.Name;
  OnOpen : {
  }
  OnClose : {
    cRec := GP_KPI_TypeVed.Nrec;
  }
}


procedure SetEditMode(Value: boolean);
{
  DataProtector.SetProtected(not Value);

  if Value
    cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpBlueWindow);
  else
    cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpCyanWindow);
  isProtect:=not Value;
} //Procedure SetEditMode(_isEdit:boolean);

//===============================================
// Получить наименование ссылочных полей
//===============================================
Function GetFldTypeName:string;
{ Result:='';
  case GP_KPI_Fields.wTypeFld  of //'Тип поля' : [5]
  //  0 'строка'
  //       ,1 'число'
  //       ,2 'дата'
  //       ,3 'время'
  4,7:// 'аналитика' ,7 'Переключатель'
  { Result:=if(isValid(#KatKau),KatKau.Name,'')
  }
  5:// 'кадр.справочники'
  { Result:=if(isValid(#CatSys),CatSys.Name,'');
  }
  6:// 'таблица'
  { Result:=if(isValid(#x$Files),x$Files.xf$Name,'');
  }
  end;

} //Function GetFldTypeName:string;

window wnEdit0 'Редактирование типа ведомости';
Show at (,,120,3);
screen scrEdit0;
Table GP_KPI_TypeVed;
Fields
  GP_KPI_TypeVed.Code        ('Код')          :NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Name        ('Наименование') :NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Description ('Описание')     :NoProtect,NoPickButton,NoDel;
<<
 Код     .@@@@@@@@@ Наименование .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Описание.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;//screen scrEdit0;
end;//window wnEdit0

window wnEdit2 'Редактирование фонда';
Show at (,,120,3);
screen scrEdit2;
Table GP_KPI_TypeVed;
Fields
  GP_KPI_TypeVed.Code        ('Код')          :NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Name        ('Наименование') :NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Description ('Описание')     :NoProtect,NoPickButton,NoDel;
<<
 Код     .@@@@@@@@@ Наименование .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Описание.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;//screen scrEdit2;
end;//window wnEdit2


window wnEdit3 'Редактирование типа ведомости';
Show at (,,120,20);
screen scrEdit3;
Show at (,,,3);
Table GP_KPI_TypeVed;
Fields
  GP_KPI_TypeVed.Code        ('Код')          :NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Name        ('Наименование') :NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Description ('Описание')     :NoProtect,NoPickButton,NoDel;
<<
 Код     .@@@@@@@@@ Наименование .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Описание.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;//screen scrEdit3;
Screen ScrEdit3T (,,Sci178Esc);
Show at (,4,,5) Fixed_y;
<<
 Список полей для отображения в фонде
>>
end;//Screen ScrRaiseEdit04
Screen ScrEdit3F (,,Sci178Esc);
Show at (,6,10,) fixed_x ;
Buttons
  cmValue1,,,'Вверх',,;
  cmValue2,,,'Вниз' ,,;

<<


 <.Вверх.>

 <.Вниз .>
>>
end;

Browse brFields3;
Show at (11,6,,) ;
Table GP_KPI_Fields;
Fields
 GP_KPI_Fields.NPP '№ п/п' :[3],NoProtect;
 GP_KPI_Fields.Name 'Наименование' :[30],NoProtect;
 GP_KPI_Alg_Fld.Name 'Алгоритм' (,,Sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields.Description 'Описание':[30],NoProtect;
 [CanEdit]  (GP_KPI_Fields.Option and 1)         'Редакт.'   :[10],[List 0 'Нет','Да'],Protect;
 [Itog]     ((GP_KPI_Fields.Option and 2) shr 1) 'результат' :[10],[List 0 'Нет','Да'],Protect;
 [Visib]    ((GP_KPI_Fields.Option and 4) shr 2) 'Скрыть'    :[10],[List 0 'Нет','Да'],Protect;
 [Agregate] ((GP_KPI_Fields.Option and 8) shr 3) 'Агрегат'   :[10],[List 0 'Нет','Да'],Protect;
 // здесь бы еще добавить по умолчанию
 GP_KPI_Fields.wTypeFld 'Тип поля' : [10]
   ,#GP_KPI_Fields_Type, Protect;
 [FldTypeName] GetFldTypeName 'Тип ссылки' (,,sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields.Len  'Ширина' : [10],NoProtect;
 GP_KPI_Fields.Razr 'Дроб.часть' : [10],NoProtect;
 GP_KPI_Alg_Fld_Chk.Name 'Алг.контроля' ('возврат не пустого значения ошибка' ,,Sci1378Esc) :[20],Protect,PickButton;

end;//Browse brFields;
  HandleEvent
    //----------------------
    cmValue1://'Вверх'
    { var _Npp:longint;
      if GP_KPI_Fields.Npp<=1
      { Message('Запись не может быть перемещена вверх');
        exit;
      }
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp-1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }
    }
    cmValue2://'Вниз'
    { var _Npp:longint;
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp+1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }

    }
  end;
end;//window wnEdit3



//****************************************************
Browse brTypeVed '' (,,sci1478Esc);
Table GP_KPI_TypeVed;
recMarker=pMarker;
Fields
  GP_KPI_TypeVed.Code        'Код'          :[20],NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Name        'Наименование' :[40],NoProtect,NoPickButton,NoDel;
  GP_KPI_TypeVed.Description 'Описание'     :[40],NoProtect,NoPickButton,NoDel;
end;//Browse brGroupPers



//******************************************************************************
// HandleEvent таблиц
//******************************************************************************
TableEvent table GP_KPI_TypeVed;
cmSetDefault:
{ ClearBuffer(#GP_KPI_TypeVed);
}
cmInsertRecord:
{ Insert Current GP_KPI_TypeVed;
}
cmUpdateRecord:
{ Update Current GP_KPI_TypeVed;
}
cmDeleteRecord:
{ if message('Удаление может изменить существующие документы'
   +chr(13)+'Продолжить?',YesNo)<>cmYes
  { abort; exit;
  }
  delete GP_KPI_Fields_F where
     ((  wTypeDoc                == GP_KPI_Fields_F.wType
    and GP_KPI_TypeVed.Nrec == GP_KPI_Fields_F.cDoc
    )) ;
  delete Current GP_KPI_TypeVed;
}
end;

//------------------------------
TableEvent table GP_KPI_Fields;
cmSetDefault:
{ if not isvalid(#GP_KPI_TypeVed) then Abort;
   ClearBuffer(#GP_KPI_Fields);
  if (getlast GP_KPI_Fields_F where
     ((  wTypeDoc                == GP_KPI_Fields_F.wType
    and GP_KPI_TypeVed.Nrec == GP_KPI_Fields_F.cDoc
    )) Ordered by index GP_KPI_Fields02) = tsok
  { GP_KPI_Fields.Npp:=GP_KPI_Fields_F.Npp+1;
  }
  else
  { GP_KPI_Fields.Npp:=1;
  }
  GP_KPI_Fields.wType:=wTypeDoc;
  GP_KPI_Fields.cDoc :=GP_KPI_TypeVed.Nrec;

}
cmInsertRecord:
{ Insert Current GP_KPI_Fields;
}
cmUpdateRecord:
{ Update Current GP_KPI_Fields;
}
cmDeleteRecord:
{ if message('Удаление может изменить существующие документы'
   +chr(13)+'Продолжить?',YesNo )=cmYes
  //здесь нужно добавить еще проверку
  { delete Current GP_KPI_Fields;
  }
}

end;



//******************************************************************************
// HandleEvent самого интерфейса
//******************************************************************************
  HandleEvent
    cmInit:
    { LoadVipRef(DataProtector, 'GP_Protector');
      DataProtector.LinkToExt(cfsGetCurrentContainerSelf, '', true);
      DataProtector.ProtectedStatusCtx := sci1Esc;
      DataProtector.AutoPalette := true;
      if (wIntMode and cgiPickMult)=cgiPickMult
      { DataProtector.ProtectedStatusCtx := sci1EscIns;
        pMarker.AutoSave := True;
        pMarker.LoadAuto := True;
        pMarker.StoreName := 'GP_KPI_TypeVedEdit'+string(wTypeDoc);
        pMarker.Caption   := (' Отмечено [%d] ');
      }
      else  pMarker.Disable:=true;
      //===========================
      RoleGroupName:='Мотивация персонала';

      UserAccessService:=New(GP_UserAccessService,InitForRoleGroup(RoleGroupName));
      if (UserAccessService=NullRef) {
        abort;
        exit;
      }

      if (not UserAccessService.IsAdmin)
      { if wIntMode=0
        { message('Вы не обладаете ролью Администратор.'#13'Редактирование запрещено.');
        }
        wIntMode:=wIntMode or cgiNotEdit;
      }
      if wIntMode<>0
      { SetEditMode(false)
      }
      else
      { SetEditMode(True)
      }
    }
    cmDefault:
    {
      if (wIntMode and cgiPickMult)=cgiPickMult
      { if PMarker.Count=0
          pMarker.Mark;
        pMarker.ExportToName(pMarker.StoreName);
      }
      else
      if (wIntMode and cgiPick)>0
      { set cRec:=GP_KPI_TypeVed.Nrec;
        CloseInterface(cmDefault)
      }
      else
      { PutCommand(cmEdit);

      }
    }
    cmEdit:
    { case wTypeDoc of
      0: RunWindowModal(wnEdit0); // премии
      //1: RunWindowModal(wnEdit1);
      2: RunWindowModal(wnEdit2); // фонды
      3: RunWindowModal(wnEdit3); // ведомости исполн. дисц.
      end;
    }
    cmDone:
    { if DataProtector<>NullRef
      { FreeVipInterface(DataProtector);

      }
    }
    //----------------------
    cmCheckField:
    { case CurField of
      #CanEdit: // (GP_KPI_Fields.Option and 1) 'Редакт.'  :[3],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,1);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,1);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Itog   : //    (GP_KPI_Fields.Option and 2) div 2 'результат':[5],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { var isNeed:boolean=true;
          if getfirst GP_KPI_Fields_F where ((
                       GP_KPI_Fields.wType  == GP_KPI_Fields_F.wType
                    and ( IsBitCTW(GP_KPI_Fields_F.Option,2)
                      and GP_KPI_Fields.Nrec<>GP_KPI_Fields_F.Nrec
                        )
           ))=tsok
          { if message('Уже есть запись с признаком "Итог"'
             +chr(13)+'поле:'+string(GP_KPI_Fields_F.Npp)+' ,'+GP_KPI_Fields_F.Name
             +chr(13)+'Установить для текущего поля?' , YesNo)=cmYes
            { BitOffW(GP_KPI_Fields.Option,2);
              update current GP_KPI_Fields_F;

            }
            else isNeed:=false;

          }
          if isNeed BitOnW(GP_KPI_Fields.Option,2);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,2);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;

      }
      #Visib   : // [Visib]   ((GP_KPI_Fields.Option and 4) shr 2)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,3);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,3);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Agregate   : // ((GP_KPI_Fields.Option and 8) shr 3)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,4);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,4);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #GP_KPI_Fields.Npp:
      { if GP_KPI_Fields.Npp=0
        { Message('Номер поля 0 не допустим!');
          set GP_KPI_Fields.Npp:=Word(OldFieldValue);
        }
        if GP_KPI_Doc_Max_FLD_SP<GP_KPI_Fields.Npp
        { Message('Номер поля больше '+string(GP_KPI_Doc_Max_FLD_SP)+' не допустим!');
          set GP_KPI_Fields.Npp:=Word(OldFieldValue);
        }

      }
      end;
      //принудительно вызовем вставку
      Case CurTable of
      #GP_KPI_TypeVed:
      { SetModified(True);
        UpdateTable;

      }
      end;
    }
    cmPick:
    { case CurField of
      #GP_KPI_Alg_Fld.Name:// 'Алгоритм' :[20],NoProtect;
      {
        pTmp:=GP_KPI_Fields.cGP_KPI_Alg;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Fields.cGP_KPI_Alg := pTmp;
          UpdateTable;
        }
      }
      #GP_KPI_Alg_Fld_Chk.Name:// 'Алгоритм' :[20],NoProtect;
      {
        pTmp:=GP_KPI_Fields.cGP_KPI_Alg_Chk;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Fields.cGP_KPI_Alg_Chk := pTmp;
        }
      }
      #FldTypeName:// 'Тип ссылки' (,,sci1378Esc) :[10],Protect,PickButton;
      {  case GP_KPI_Fields.wTypeFld  of //'Тип поля' : [5]
         //  0 'строка'
         //       ,1 'число'
         //       ,2 'дата'
         //       ,3 'время'
         4,7:// 'аналитика'
         { //Result:=if(isValid(#KatKau),KatKau.Name,'')
           //var _rType:word; _rType:=0;
           //var _coTable:word; _coTable:=0;
           var _rObject:word; _rObject:= GP_KPI_Fields.KodGroup;
           //if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           if RunInterface(GetKauTable,cgiPick,(4 or 8 or 16 or 32),_rObject,0) <> cmCancel
           { set GP_KPI_Fields.KodGroup:=_rObject;
             SetModified(true);
           }

         }
         5:// 'кадр.справочники'
         { var _CurCat:comp; _CurCat:=0;
           if isValid(#CatSys) _CurCat:=CatSys.Nrec;
           if RunInterface(PickCatalog2, Integer(-1), _CurCat, Comp(0))<>cmCancel
           { if getfirst CatSys where (( _CurCat == CatSys.Nrec )) =tsok
             { var _SysCode:Longint;
               _SysCode:=CatSys.SysCode;
               if _SysCode=0
               { message('Допустимы к выбору только системные записи');
               }
               else
               { set GP_KPI_Fields.KodGroup:=_SysCode;
                 SetModified(true);
               }
             }
           }

         }
         6:// 'таблица'
         { var _rType:word; _rType:=cgKatKau_System;
           var _coTable:word; _coTable:= GP_KPI_Fields.KodGroup;
           var _rObject:word; _rObject:= GP_KPI_Fields.KodGroup;
           if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           { set GP_KPI_Fields.KodGroup:=_coTable;//_rObject;
             SetModified(true)
           }
         }
         end;
      }
      end;
    }
  end;
end.
