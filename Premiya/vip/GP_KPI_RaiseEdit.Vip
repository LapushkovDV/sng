/*************************************************************************************************\
* Наименование: КПИ типы премий                                                                   *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |20/09/17|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/
#include marker.vih // описание объекта и объявление интерфейса
                    // marker c реализацией по умолчанию

#include GP_Protector.Vih
#include GP_UserAccessService.vih
#include GP_KPI_TypeVedEdit.vih
#include GP_PickTypeDocs.Vih

#include GP_KPI_RaiseEdit.Vih
#doc
КПИ типы премий
#end
//------------------------------------
Interface GP_KPI_RaiseEdit 'Типы премий' , EscClose;
//------------------------------------
Show At (,,110,20);
//------------------------------------
// декларация сложного фильтра
//------------------------------------
function isFilterAnCorrect(ww_nrec:comp): boolean; forward;
//------------------------------------
var
//------------------------------------
  wIntMode:word; //тип запуска
  cRec    :Comp   ; // ссылка на группу
  wTypeDoc:word   ; // тип документа
  isOpenSearch:boolean; //признак запуска быстрого выбора
  isProtect,isProtect2 :boolean; //защищенный выбор
  DataProtector : IGP_Protector2;//защита полей от модификации
  UserAccessService:GP_UserAccessService NoAuto;
  pMarker:IMarker(Marker) new;

  RoleGroupName    :string;
  MarkerTmp        :Longint;
  pTmp             :comp;
  DTB,DTE          :date;//для фильтра по сроку действия
//-----------------------------------------
// Фильтры
//-----------------------------------------
   wFilter:word;
   Marker_Count :longint;
   isFilterRun  :boolean;
   wc_nrec : comp;//  - var_name, тип должен совпадать с типом маркера
   KauMarkerName:string;
   Marker_Tmp :longint;

   #mrkfld_(TypeDocs)
   #mrkfld_(CatRaise)

Create View
var
 pTypeDocs:comp;//для фильтра по типу ведомости
 pCatRaise:comp;//для фильтра по типу доплаты
as select GP_KPI_Raise.Nrec
From
  GP_KPI_Raise(GP_KPI_Raise02)
, GP_KPI_Raise GP_KPI_Raise_F//для поисков
, Catalogs CatRaise
, GP_KPI_NormPercent
, GP_KPI_GroupPers
, GP_KPI_Alg GP_KPI_Alg_Summa
, GP_KPI_Alg GP_KPI_Alg_CRP
, GP_KPI_Alg GP_KPI_Alg_koefKorr
//-----------------
, GP_TypeDocs
//--------- поля
, GP_KPI_Fields(GP_KPI_Fields02)
, GP_KPI_Fields GP_KPI_Fields_F
, GP_KPI_Alg GP_KPI_Alg_Fld
, GP_KPI_Alg GP_KPI_Alg_Fld_Chk
, KatKau
, Catalogs CatSys
, X$Files
//--------- поля по типу документа
 ,GP_KPI_Fields GP_KPI_Fields_TD(GP_KPI_Fields02)
, GP_KPI_Alg GP_KPI_Alg_Fld_TD
, KatKau KatKau_TD
, Catalogs CatSys_TD
, X$Files  X$Files_TD

//------- фильтры
 , GP_TypeDocs    TypeDocs_Flt
 , Catalogs       CatRaise_Flt
where
((  GP_KPI_Raise.cDoplata         == CatRaise.Nrec
//------------------------------
and GP_KPI_Raise.Nrec             == GP_KPI_NormPercent.cGP_KPI_Raise
and GP_KPI_NormPercent.cGroupPers == GP_KPI_GroupPers.Nrec
//------------------------------
and GP_KPI_Raise.cGp_TypeDocs     == GP_TypeDocs.Nrec
//-------
and GP_KPI_Raise.cAlg_Summa       == GP_KPI_Alg_Summa.Nrec
and GP_KPI_Raise.cAlg_CRP         == GP_KPI_Alg_CRP.Nrec
and GP_KPI_Raise.cAlg_KoefKorr    == GP_KPI_Alg_koefKorr.Nrec
//------------  поля
and 0                             == GP_KPI_Fields.wType
and GP_KPI_Raise.Nrec             == GP_KPI_Fields.cDoc
and 0                             == GP_KPI_Fields_F.wType
and GP_KPI_Raise.Nrec             == GP_KPI_Fields_F.cDoc
and GP_KPI_Fields.Npp             == GP_KPI_Fields_F.Npp
and GP_KPI_Fields.cGP_KPI_Alg     == GP_KPI_Alg_Fld.Nrec
and GP_KPI_Fields.cGP_KPI_Alg_CHK == GP_KPI_Alg_Fld_Chk.Nrec
and GP_KPI_Fields.KodGroup        == KATKAU.KODGROUP
and GP_KPI_Fields.KodGroup        == CatSys.SysCode
and GP_KPI_Fields.KodGroup        == x$Files.xf$code
//------------------------------
and wc_nrec                       == GP_KPI_Raise_F.Nrec
//------------  поля по типу документа
and GP_TypeDocs.wType             == GP_KPI_Fields_TD.wType
and GP_TypeDocs.Nrec              == GP_KPI_Fields_TD.cDoc
and GP_KPI_Fields_TD.cGP_KPI_Alg  == GP_KPI_Alg_Fld_TD.Nrec
and GP_KPI_Fields_TD.KodGroup     == KATKAU_TD.KODGROUP
and GP_KPI_Fields_TD.KodGroup     == CatSys_TD.SysCode
and GP_KPI_Fields_TD.KodGroup     == x$Files_TD.xf$code
//------- фильтры
and wc_nrec == TypeDocs_Flt.Nrec
and wc_nrec == CatRaise_Flt.Nrec

))
Bounds byPeriod  DTE>>= GP_KPI_Raise.DBegin(NoIndex)
     and (DTB=ZeroDate or GP_KPI_Raise.DEnd>=DTB or GP_KPI_Raise.DEnd=ZeroDate )
  ordered by TableOrder
Bounds byTypeDocs pTypeDocs == GP_KPI_Raise.cGp_TypeDocs(noindex) ordered by TableOrder
Bounds byCatRaise pCatRaise == GP_KPI_Raise.cDoplata(noindex) ordered by TableOrder
condition FilterAn = // использование сложного фильтра
  (isFilterAnCorrect(GP_KPI_Raise.Nrec))

;
Parameters
  wIntMode
#doc
#end
, cRec
#doc
, возвращаемый параметр
#end
, wTypeDoc
#doc
 тип документа для фильтра 0 - не фильтровать
#end
;


QuickChoice qcByCode
{
  AcceptField = GP_KPI_Raise.Nrec;
  ViewField = GP_KPI_Raise.Code;
  ViewField = GP_KPI_Raise.Name;
  ViewField = GP_KPI_Raise.DBegin;
  // только текстовый поля!
  SearchField = GP_KPI_Raise.Code;
  OnOpen : {
  }
  OnClose : {
    cRec := GP_KPI_Raise.Nrec;
  }
}
QuickChoice qcByName
{
  AcceptField = GP_KPI_Raise.Nrec;
  ViewField = GP_KPI_Raise.Name;
  ViewField = GP_KPI_Raise.Code;
  ViewField = GP_KPI_Raise.Dbegin;
  // только текстовый поля!
  SearchField = GP_KPI_Raise.Name;
  OnOpen : {
  }
  OnClose : {
    cRec := GP_KPI_Raise.Nrec;
  }
}

//******************************************************************************
// Функции
//******************************************************************************
  //------------------------------------
  // Наименование интерфейса
  //------------------------------------
  Function GetInterfaceName:string;
  { Result:=#(__InterfaceName__);
  }
  //------------------------------------
  // сохранить параметры
  //------------------------------------
  Procedure SaveParam;
  { SaveMyDsk(wFilter  ,GetInterfaceName+'_wFilter');
    SaveMyDsk(DTB      ,GetInterfaceName+'_DTB');
    SaveMyDsk(DTE      ,GetInterfaceName+'_DTE');
    //-----------------------
    DoneMarker(Marker_TypeDocs_A, '' );
    DoneMarker(Marker_CatRaise_A, '' );
    //-----------------------
    DoneMarker(Marker_TypeDocs, GetInterfaceName+'_TypeDocs' );
    DoneMarker(Marker_CatRaise, GetInterfaceName+'_CatRaise' );
  } //Procedure SaveParam;

  //------------------------------------
  // восстановить параметры
  //------------------------------------
  Procedure ReadParam;
  { if not ReadMyDsk(wFilter,GetInterfaceName+'_wFilter',false) wFilter:=0;
    if not ReadMyDsk(DTB    ,GetInterfaceName+'_DTB'    ,false) DTB:=ZeroDate;
    if not ReadMyDsk(DTE    ,GetInterfaceName+'_DTE'    ,false) DTE:=ZeroDate;

    Marker_TypeDocs  :=InitMarker(GetInterfaceName+'_TypeDocs' , 8, 50, 10, True);
    Marker_CatRaise  :=InitMarker(GetInterfaceName+'_CatRaise' , 8, 50, 10, True);

    Marker_TypeDocs_A :=InitMarker('' , 8, 50, 10, True);
    Marker_CatRaise_A :=InitMarker('' , 8, 50, 10, True);

  } //  Procedure ReadParam;

  //------------------------------------
  // декларация сложного фильтра
  //------------------------------------
  function isFilterAnCorrect(ww_nrec:comp): boolean; cacheable;
  { #__UNUSED__(ww_nrec)
    Result:=true;
    if IsBitCTW(wFilter,2)
    { if Count_TypeDocs>1
      { If not FoundMarker(Marker_TypeDocs_A,GP_KPI_Raise.cGp_TypeDocs)
        { Result:=false;
          Exit;
        }
      }
    }
    if IsBitCTW(wFilter,3)
    { if Count_CatRaise>1
      { If not FoundMarker(Marker_CatRaise_A,GP_KPI_Raise.cDoplata)
        { Result:=false;
          Exit;
        }
      }
    }

  }//function isFilterAnCorrect(ww_nrec:comp): boolean;

    //-------------------------------------------
  // скопировать фильтры в данные для отборв
  //-------------------------------------------
  Procedure CopyToA;
  { CopyMarker(Marker_TypeDocs_A ,Marker_TypeDocs);
    CopyMarker(Marker_CatRaise_A ,Marker_CatRaise);
  } //Procedure CopyToA;

  //-------------------------------------------
  // восстановить данные для задания фильтрации
  // из данных для отбора
  //-------------------------------------------
  Procedure RestFromA;
  { CopyMarker(Marker_TypeDocs ,Marker_TypeDocs_A );
    CopyMarker(Marker_CatRaise ,Marker_CatRaise_A);
  } //Procedure RestFromA;

  //-------------------------------------------
  #doc
    Установить ограничения
  #end
  Function SetFilterBounds(_IsArch:word) : boolean;
  { #__UNUSED__(_IsArch)
    Result:=false;
    isFilterRun:=True;
    if ConditionActiveInLeave(tcFilterAn, #GP_KPI_Raise)
    { PopConditionForLeave(tcFilterAn, #GP_KPI_Raise);
    }
    If BoundActive(tbByPeriod  ) SubBounds(tbByPeriod  );
    If BoundActive(tbByTypeDocs) SubBounds(tbByTypeDocs);
    If BoundActive(tbByCatRaise) SubBounds(tbByCatRaise);
    //-----------------------
    CopyToA;
    //-----------------------
    ClearFuncCache; // очистим кэш функций
    var need_FilterAn:boolean=false;
    if IsBitCTW(wFilter,1)
    {  AddBounds(tbByPeriod);
    }
    if IsBitCTW(wFilter,2)
    {  Count_TypeDocs:=GetMarkerCount(Marker_TypeDocs);
       GetMarker(Marker_TypeDocs,0,pTypeDocs);

       if Count_TypeDocs=1
       { AddBounds(tbByTypeDocs);
       }
       else need_FilterAn:=true;
    }
    if IsBitCTW(wFilter,3)
    {  Count_CatRaise:=GetMarkerCount(Marker_CatRaise);
       GetMarker(Marker_CatRaise,0,pCatRaise);
       if Count_CatRaise=1
       {
         AddBounds(tbByCatRaise);
       }
       else need_FilterAn:=true;
    }

    // использование сложного фильтра
    if need_FilterAn
    { PushConditionForLeave(tcFilterAn, #GP_KPI_Raise);
    }
    ReReadRecord(#GP_KPI_Raise);
    Result:=true;
    isFilterRun:=False;

  } //Function SetFilterBounds : boolean;

  //---------------------------------------
  // Установка наименований фильтров
  //---------------------------------------
  Procedure SetFilterNM(_Field:longint=0);
  { if _Field=0 or _Field=#Filtr_TypeDocs
    { #mrkfiltr_(TypeDocs_Flt,TypeDocs,Nrec,wc_nrec,TypeDocs_Flt.Name)
    }
    if _Field=0 or _Field=#Filtr_CatRaise
    { #mrkfiltr_(CatRaise_Flt,CatRaise,Nrec,wc_nrec,CatRaise_Flt.Name)
    }
    ReScanPanel(#TypeDocs_Flt);
  } //Procedure SetFilterNM(_Field:longint)


  //---------------------------------------
  // Установка режима редактирования
  //---------------------------------------
procedure SetEditMode(Value: boolean);
{
  DataProtector.SetProtected(not Value);

  if Value
    cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpBlueWindow);
  else
  { cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpCyanWindow);
    cfsSetProp('cb_SCRFILTER_wFilter',cfpProtect,False);
    cfsSetProp('cb_SCRFILTER_DTB'    ,cfpProtect,False);
    cfsSetProp('cb_SCRFILTER_DTE'    ,cfpProtect,False);
    cfsSetProp('cb_SCRFILTER_Filtr_TypeDocs'      ,cfpButtonType,inPickButton);
    cfsSetProp('cb_SCRFILTER_Filtr_CatRaise'      ,cfpButtonType,inPickButton);
  }
  isProtect:=not Value;

} //Procedure SetEditMode(_isEdit:boolean);

//===============================================
// Получить тип периода
//===============================================
Function GetTypePeriod:string;
{ Result:=Case(GP_KPI_Raise.TypePeriod;
     1:'месяц',2:'квартал',3:'год',4:'полугодие',5:'Разовая';'-');
}

//===============================================
// Сформировать буфер для GP_KPI_NormPercent
//===============================================
Procedure MakeBufferGP_KPI_NormPercent(_NeedIns:boolean);
{
  if isProtect then exit;
  ClearBuffer(#GP_KPI_NormPercent);
  GP_KPI_NormPercent.Nrec:=GetNextNrec(#GP_KPI_NormPercent,0);
  GP_KPI_NormPercent.cGP_KPI_Raise :=GP_KPI_Raise.Nrec;
  if _NeedIns
   insert current GP_KPI_NormPercent;
} //Procedure MakeBufferGP_KPI_NormPercent(_NeedIns:boolean);

//===============================================
// Сформировать буфер для GP_KPI_Fields
//===============================================
Procedure MakeBufferGP_KPI_Fields(_NeedIns:boolean);
{
  Clearbuffer(#GP_KPI_Fields);
  GP_KPI_Fields.Nrec:=GetNextNrec(#GP_KPI_Fields,0);
  if (getlast GP_KPI_Fields_F where
     ((  0                == GP_KPI_Fields_F.wType
    and GP_KPI_Raise.Nrec == GP_KPI_Fields_F.cDoc
    )) Ordered by index GP_KPI_Fields02) = tsok
  { GP_KPI_Fields.Npp:=GP_KPI_Fields_F.Npp+1;
  }
  else
  { GP_KPI_Fields.Npp:=1;
  }
  GP_KPI_Fields.wType:=0;
  GP_KPI_Fields.cDoc :=GP_KPI_Raise.Nrec;

  if _NeedIns
   insert current GP_KPI_NormPercent;
} //Procedure MakeBufferGP_KPI_NormPercent(_NeedIns:boolean);

//===============================================
// Получить наименование ссылочных полей
//===============================================
Function GetFldTypeName:string;
{ Result:='';
  case GP_KPI_Fields.wTypeFld  of //'Тип поля' : [5]
  //  0 'строка'
  //       ,1 'число'
  //       ,2 'дата'
  //       ,3 'время'
  4,7:// 'аналитика', переключатель
  { Result:=if(isValid(#KatKau),KatKau.Name,'')
  }
  5:// 'кадр.справочники'
  { Result:=if(isValid(#CatSys),CatSys.Name,'');
  }
  6:// 'таблицв'
  { Result:=if(isValid(#x$Files),x$Files.xf$Name,'');
  }
  end;

} //Function GetFldTypeName:string;

//===============================================
// Получить наименование ссылочных полей
//===============================================
Function GetFldTypeName_TD:string;
{ Result:='';
  case GP_KPI_Fields_TD.wTypeFld  of //'Тип поля' : [5]
  //  0 'строка'
  //       ,1 'число'
  //       ,2 'дата'
  //       ,3 'время'
  4,7:// 'аналитика', переключатель
  { Result:=if(isValid(#KatKau_TD),KatKau_TD.Name,'')
  }
  5:// 'кадр.справочники'
  { Result:=if(isValid(#CatSys_TD),CatSys_TD.Name,'');
  }
  6:// 'таблицв'
  { Result:=if(isValid(#x$Files_TD),x$Files_TD.xf$Name,'');
  }
  end;

} //Function GetFldTypeName:string;


Window wnFilter 'Установите фильтры'  Cyan, EscClose;
  Show at (,,50,9);
Screen scrFilter 'Фильтры' ('Фильтры',,sci13Esc);
Table TypeDocs_Flt;
Fields
  wFilter :NoProtect;
  DTB : NoProtect;
  DTE : NoProtect;
  Filtr_TypeDocs : PickButton,Protect;
  Filtr_CatRaise : PickButton,Protect;
Buttons
  cmOk    ,,, 'продолжить выполнение', hcAllBOk, scGalDial;
  cmCancel,,, 'Отмена', hcAllBCancel, scGalDial;
<<
  `Фильтр по`
 [.] Периоду`       с .@@@@@@@@@@ по .@@@@@@@@@@
 [.] Типу ведомости`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
 [.] Типу доплаты  `.@@@@@@@@@@@@@@@@@@@@@@@@@@@

 <. Продолжить .>  <.   Отмена   .>
>>
end; //Screen scrFilter (,,sci13Esс);
HandleEvent
cmInit:
{ isProtect2:=isProtect;
  if isProtect
  { SetEditMode(True)
  }

}
cmDone:
{ if isProtect2
    SetEditMode(false);
}
cmOk:
{ CloseWindowEx(wnFilter,cmDefault)

}
end;// HandleEvent
end; //Windows wnFilter 'Установите фильтры' , Cyan, EscClose;


//****************************************************
window wnFieldsTypeDoc 'Настройка итоговых полей по типу документа';
Show at (20,7,120,25);
//---------------------------------------------
Screen ScrRaiseEdit04_TD (,,Sci178Esc);
Show at (,,,2) Fixed_y;
Fields
  GP_TypeDocs.Name         (,,sci1378Esc): Protect,NoPickButton,NoDel,Skip;

<<
 Список полей для отображения в ведомости премирования в итоговой спецификация
 Тип документа .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;//Screen ScrRaiseEdit04

//---------------------------------------------
Screen ScrRaiseEdit05_TD (,,Sci178Esc);
Show at (,3,10,) fixed_x ;
Buttons
  cmValue1,,,'Вверх',,;
  cmValue2,,,'Вниз' ,,;

<<
 <.Вверх.>

 <.Вниз .>
>>
end; //Screen ScrRaiseEdit05
//---------------------------------------------
Browse brFields_TD;
Show at (11,3,,) ;
Table GP_KPI_Fields_TD;
fixedLeft  (GP_KPI_Fields_TD.NPP,GP_KPI_Fields_TD.Name);
Fields
 GP_KPI_Fields_TD.NPP '№ п/п' :[3],NoProtect;
 GP_KPI_Fields_TD.Name 'Наименование' :[30],NoProtect;
 GP_KPI_Alg_Fld_TD.Name 'Алгоритм' (,,Sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields_TD.Description 'Описание':[30],NoProtect;
 // неправильно, а что делать
 GP_KPI_Fields_TD.Npp_It 'Период' ('Период расчета')  :[10]
    ,[List 0 '-'
          ,1 'Месяц'
          ,2 'Квартал'
          ,3 'Год'
          ,4 'Полугодие'
          ],NoProtect;
 [CanEdit_TD]  (GP_KPI_Fields_TD.Option and 1)         'Редакт.'   :[10],[List 0 'Нет','Да'],Protect;
 [Itog_TD]     ((GP_KPI_Fields_TD.Option and  2) shr 1) 'результат' :[10],[List 0 'Нет','Да'],Protect;
 [Visib_TD]    ((GP_KPI_Fields_TD.Option and  4) shr 2) 'Скрыть'    :[10],[List 0 'Нет','Да'],Protect;
 [Agregate_TD] ((GP_KPI_Fields_TD.Option and  8) shr 3) 'Агрегат'   :[10],[List 0 'Нет','Да'],Protect;
 // [Fond_Ruc_TD] ((GP_KPI_Fields_TD.Option and 16) shr 4) 'Ф.Руков'   :[10],[List 0 'Нет','Да'],Protect;
 // здесь бы еще добавить по умолчанию - пока реализовано алгоритмом
 GP_KPI_Fields_TD.wTypeFld 'Тип поля' : [10]
   ,#GP_KPI_Fields_Type, Protect;
 [FldTypeName_TD] GetFldTypeName_TD() 'Тип ссылки' (,,sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields_TD.Len  'Ширина' : [10],NoProtect;
 GP_KPI_Fields_TD.Razr 'Дроб.часть' : [10],NoProtect;
 GP_KPI_Fields_TD.Razdel 'Раздел' ('Раздел для печати'): [10],
     [List 0 'Расчет'
          ,1 'отработанное время'
          ,2 'Начислено'
          ,3 'Не включать'
          ],NoProtect;
 GP_KPI_Fields_TD.Sub    'пп.раздела' ('Раздел для печати'): [10],NoProtect;

end;//Browse brFields;
  HandleEvent
    //----------------------
    cmValue1://'Вверх'
    { var _Npp:longint;
      if GP_KPI_Fields.Npp<=1
      { Message('Запись не может быть перемещена вверх');
        exit;
      }
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp-1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }
    }
    cmValue2://'Вниз'
    { var _Npp:longint;
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp+1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }

    }
  end;
end;//window wnFieldsTypeDoc 'Настройка итоговых полей по типу документа';


//****************************************************
Window wnRaiseEdit 'Редактирование параметров премии' ;
Show at (5,3,120,28);
//---------------------------------------------
Screen ScrRaiseEdit (,,Sci178Esc);
Show at (,,,5) Fixed_y;
Table GP_KPI_Raise;
Fields
 GP_KPI_Raise.code: NoProtect;
 GP_KPI_Raise.Name: NoProtect, {Font={BackColor=if(GP_KPI_Raise.Name='',ColorNeed,0)}};
 GP_KPI_Raise.Dbegin   ('Дата начала периода действия') :NoProtect,NoPickButton,NoDel
     ,{Font={BackColor=if(GP_KPI_Raise.Name='',ColorNeed,0)}};
 GP_KPI_Raise.DEnd     ('Дата окончания периода действия') :NoProtect,NoPickButton,NoDel;
 CatRaise.Name         ('Привязка к справочнику доплат',,sci1378Esc) : Protect,PickButton,NoDel
     ,{Font={BackColor=if(GP_KPI_Raise.cDoplata=0,ColorNeed,0)}};
 GP_KPI_Raise.TypePeriod:[List 0 '-',1 'месяц',2 'квартал',3 'год',4  'полугодие',5 'Разовая'],Protect,NoDel
     ,{Font={BackColor=if(GP_KPI_Raise.TypePeriod=0,ColorNeed,0)}};
 GP_KPI_Raise.Description  :NoProtect,NoPickButton,NoDel;
<<
 `Код` .@@@@@@@ `Наименование`   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Действует с`  .@@@@@@@@@@@ `по`.@@@@@@@@@@@ `Тип доплаты`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Периодичность`.@@@@@@@@@@@
 `Описание`     .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;//Screen ScrRaiseEdit

//---------------------------------------------
Screen ScrRaiseEdit02 (,,Sci178Esc);
Show at (,6,,6) Fixed_y;
<<
`Список нормативных коэффициентов по группам работников.`
>>
end;

//---------------------------------------------
Browse brNormPercent;
Show at (,7,,10);
Table GP_KPI_NormPercent;
Fields
  GP_KPI_GroupPers.Code 'Код' ('Группа работников') :[5]  , PickButton,NoDel;
  GP_KPI_GroupPers.Name 'Группа работников'         :[40] , PickButton,NoDel;
  GP_KPI_NormPercent.Percent 'Нормативный %'        :[9.2], NoProtect,NoPickButton;
end;//Browse brNormPercent

//---------------------------------------------
Screen ScrRaiseEdit03 (,,Sci178Esc);
Show at (,11,,15) Fixed_y;
Fields
  GP_KPI_AlG_Summa.Name    (,,sci1378Esc): Protect,PickButton;
  GP_KPI_AlG_CRP.Name      (,,sci1378Esc): Protect,PickButton;
  GP_KPI_AlG_KoefKorr.Name (,,sci1378Esc): Protect,PickButton;
  GP_TypeDocs.Name         (,,sci1378Esc): Protect,PickButton, {Font={BackColor=if(GP_KPI_Raise.cGp_TypeDocs=0,ColorNeed,0)}} ;
Buttons
  cmValue30    ,,, 'продолжить выполнение', hcAllBOk, scGalDial;

<<
 `Алгоритм суммы базы (%EM_SumBase% )` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Алгоритм ЦРП        (%EM_CRP%     )` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Алгоритм Коэф. Корр (%EM_KoefKorr%)` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Документ расчета премии`             .@@@@@@@@@@@@@@@@@@@@@@@@@@@@ <.Итоговые Поля.>
>>
end;//Screen ScrRaiseEdit03

//---------------------------------------------
Screen ScrRaiseEdit04 (,,Sci178Esc);
Show at (,16,,16) Fixed_y;
<<
 Список полей для отображения в ведомости премирования(спецификация)
>>
end;//Screen ScrRaiseEdit04

//---------------------------------------------
Screen ScrRaiseEdit05 (,,Sci178Esc);
Show at (,17,10,) fixed_x ;
Buttons
  cmValue1,,,'Вверх',,;
  cmValue2,,,'Вниз' ,,;

<<
 <.Вверх.>

 <.Вниз .>
>>
end; //Screen ScrRaiseEdit05
//---------------------------------------------
Browse brFields;
Show at (11,17,,) ;
Table GP_KPI_Fields;
fixedLeft  (GP_KPI_Fields.NPP,GP_KPI_Fields.Name);
Fields
 GP_KPI_Fields.NPP '№ п/п' :[3],NoProtect;
 GP_KPI_Fields.Name 'Наименование' :[30],NoProtect;
 GP_KPI_Alg_Fld.Name 'Алгоритм' (,,Sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields.Description 'Описание':[30],NoProtect;
 [CanEdit]  (GP_KPI_Fields.Option and 1)         'Редакт.'   :[10],[List 0 'Нет','Да'],Protect;
 [Itog]     ((GP_KPI_Fields.Option and  2) shr 1) 'результат' :[10],[List 0 'Нет','Да'],Protect;
 [Visib]    ((GP_KPI_Fields.Option and  4) shr 2) 'Скрыть'    :[10],[List 0 'Нет','Да'],Protect;
 [Agregate] ((GP_KPI_Fields.Option and  8) shr 3) 'Агрегат'   :[10],[List 0 'Нет','Да'],Protect;
 [Fond]     ((GP_KPI_Fields.Option and 16) shr 4) 'Фонд' ('Уменьшает остаток фонда' )  :[10],[List 0 'Нет','Да'],Protect;
 [ClearNext]((GP_KPI_Fields.Option and 32) shr 5) 'Сброс' ('сбросить признак изменения следующего поля' )  :[10],[List 0 'Нет','Да'],Protect;
 [Proc2ZP]  ((GP_KPI_Fields.Option and 64) shr 6) '% в ЗП' ('Передавать в поле "процент" в операции - начисления - расчет ' )  :[7],[List 0 'Нет','Да'],Protect;
 //потом может заменим на отдельное поле
 GP_KPI_Fields.Npp_It 'п/п в итогах' ('Поля с одинаковым смыслов должны иметь одинаковый номер')  :[10],NoProtect;
 // здесь бы еще добавить по умолчанию - пока реализовано алгоритмом
 GP_KPI_Fields.wTypeFld 'Тип поля' : [10]
   ,#GP_KPI_Fields_Type, Protect;
 [FldTypeName] GetFldTypeName() 'Тип ссылки' (,,sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields.Len  'Ширина' : [10],NoProtect;
 GP_KPI_Fields.Razr 'Дроб.часть' : [10],NoProtect;
 GP_KPI_Alg_Fld_Chk.Name 'Алг.контроля' ('возврат не пустого значения ошибка' ,,Sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields.Razdel 'Раздел' ('Раздел для печати'): [10],[List 0 'Расчет',1 'отработанное время',2 'Начислено',3 'Не включать' ],NoProtect;
 GP_KPI_Fields.Sub    'пп.раздела' ('Раздел для печати'): [10],NoProtect;
//-------------------------
 GP_KPI_Fields.Rep_FLD_N[1] 'Отчет 01' ('Колонка в "FastReport итоговый" - Ведомость премирования работников цеха/отдела')
          :[List
 00 'Нет'
// Раздел 1
,01 '1.01 Начислено ОЗ, руб.'
,02 '1.02 Фактический % премии сотрудников за качество и дисциплину труда'
,03 '1.03 Размер премии сотрудников за качество и дисциплину труда, руб.'
,04 '1.04 Коэффициент выполнения показателей премирования'
,05 '1.05 % премии за результаты работы подразделения и результаты работы работника'
,06 '1.06 Коэффициент оценки личной результативности работника'
,07 '1.07 Размер премии за результаты работы подразделения и результаты работы работника,руб.'
,08 '1.08 % премии из фонда руководителя'
,09 '1.09 Размер премии из фонда руководителя,руб.'
,10 '1.10 Из фонда руководителя,руб.'
,11 '1.11 Коэффициент выполнения показателей премирования для О.П.'
,12 '1.12 Фактический % премирования за выполнение показателей для О.П.'
,13 '1.13 Размер премии за выполнение показателей для О.П.'
// Раздел 2
,101 '2.01 Начислено ОЗ, руб.'
,102 '2.02 % премии, план'
,103 '2.03 Плановый размер премии.'
,104 '2.04 коэф. производства'
,105 '2.05 коэф. качества'
,106 '2.06 коэф. технологической и трудовой дисциплины'
,107 '2.07 Из фонда руководителя'
,108 '2.08 % премии, факт'

//ИТОГО премия,руб.
], Protect;
//-------------------------
 GP_KPI_Fields.Rep_FLD_N[2] 'Отчет 02' ('Колонка в "Excel - итоги+ план.%" - Ведомость премирования работников цеха/отдела')
          :[List
 00 'Нет'
// Раздел 1
,01 '1.01 Начислено ОЗ, руб.'
,02 '1.02 Плановый % премии сотрудников за качество и дисциплину труда'
,03 '1.03 Фактический % премии сотрудников за качество и дисциплину труда'
,04 '1.04 Размер премии сотрудников за качество и дисциплину труда, руб.'
,05 '1.05 Коэффициент выполнения показателей премирования'
,06 '1.06 % премии за результаты работы подразделения и результаты работы работника'
,07 '1.07 Коэффициент оценки личной результативности работника'
,08 '1.08 Размер премии за результаты работы подразделения и результаты работы работника,руб.'
,09 '1.09 План. % премии из фонда руководителя'
,10 '1.10 % премии из фонда руководителя'
,11 '1.11 Размер премии из фонда руководителя,руб.'
,12 '1.12 Из фонда руководителя,руб.'
,13 '1.13 Коэффициент выполнения показателей премирования для О.П.'
,14 '1.14 Фактический % премирования за выполнение показателей для О.П.'
,15 '1.15 Размер премии за выполнение показателей для О.П.'
// Раздел 2
,101 '2.01 Начислено ОЗ, руб.'
,102 '2.01 % премии, план'
,103 '2.02 Плановый размер премии.'
,104 '2.03 коэф. производства'
,105 '2.04 коэф. качества'
,106 '2.05 коэф. технологической и трудовой дисциплины'
,107 '2.06 Из фонда руководителя'
,108 '2.07 % премии, факт'

//ИТОГО премия,руб.
], Protect;
end;//Browse brFields;
//-----------------------------------
  HandleEvent
    //----------------------
    cmValue1://'Вверх'
    { var _Npp:longint;
      if GP_KPI_Fields.Npp<=1
      { Message('Запись не может быть перемещена вверх');
        exit;
      }
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp-1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }
    }
    cmValue2://'Вниз'
    { var _Npp:longint;
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp+1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }

    }

    cmValue30: // Настроить итоговые поля по типу документа
    { if  not isvalid(#GP_TypeDocs)
      { Message('Сначала задайте тип документа');
      }
      else
      { RunWindowModal(wnFieldsTypeDoc);
      }
    }
  end;
end;//Window wnRaiseEdit


//****************************************************
Browse brRaise '' (,,sci1478Esc);
Table GP_KPI_Raise;
recMarker=pMarker;
Fields
  GP_KPI_Raise.Name        'Наименование' :[40],Protect,NoPickButton,NoDel;
  GP_KPI_Raise.Code        'Код' :[20],Protect,NoPickButton,NoDel;
  GP_KPI_Raise.Dbegin      'Дата'#13'Начала' ('Дата начала периода действия') :[10],Protect,NoPickButton,NoDel;
  GP_KPI_Raise.DEnd        'Дата'#13'Окончания' ('Дата окончания периода действия') :[10],Protect,NoPickButton,NoDel;
  GP_TypeDocs.Name         'Тип документа'  :[30],Protect,NoPickButton,NoDel;
  [TypePeriod] GetTypePeriod() 'Периодичность'#13'выплаты' :[15],Protect,NoDel;
  GP_KPI_Raise.Description 'Описание'     :[40],Protect,NoPickButton,NoDel;
end;//Browse brGroupPers



//******************************************************************************
// HandleEvent таблиц
//******************************************************************************
TableEvent table GP_KPI_Raise  ;
cmSetDefault:
{ if isProtect abort;
  if isFilterRun abort;
  ClearBuffer(#GP_KPI_Raise);
  if Count_TypeDocs>0
    GP_KPI_Raise.cGp_TypeDocs:=pTypeDocs;
  if Count_CatRaise>0
    GP_KPI_Raise.cDoplata:=pCatRaise;
  if IsBitCTW(wFilter,1)
  { GP_KPI_Raise.DBegin:=DTB;
    GP_KPI_Raise.DEnd:=DTE;
  }
  set GP_KPI_Raise.cGp_TypeDocs:=GP_KPI_Raise.cGp_TypeDocs;
  isProtect:=False;
  RunWindowModal(wnRaiseEdit);
}
cmInsertRecord:
{
  Insert Current GP_KPI_Raise;
}
cmUpdateRecord:
{ Update Current GP_KPI_Raise;
}
cmDeleteRecord:
{ if message('Удаление может изменить существующие документы'
   +chr(13)+'Продолжить?',YesNo)<>cmYes
  { abort; exit;
  }

  delete Current GP_KPI_Raise;
}
end; //TableEvent table GP_KPI_Raise

//------------------------------
TableEvent table GP_KPI_NormPercent;
cmSetDefault:
{ //var _Nrec:comp=0;
  //_Nrec:=GP_KPI_Raise.Nrec;
  //if _Nrec=0 then Abort;
  //if isProtect then abort;
  MakeBufferGP_KPI_NormPercent(false);
}
cmInsertRecord:
{ Insert Current GP_KPI_NormPercent;
}
cmUpdateRecord:
{ Update Current GP_KPI_NormPercent;
}
cmDeleteRecord:
{
  if message('Удаление может изменить существующие документы'
   +chr(13)+'Продолжить?',YesNo )=cmYes
  //здесь нужно добавить еще проверку
    delete Current GP_KPI_NormPercent;
}
end;


//------------------------------
TableEvent table GP_KPI_Fields ;
cmSetDefault:
{ //if isProtect then exit;
  MakeBufferGP_KPI_Fields(false);

}
cmInsertRecord:
{ Insert Current GP_KPI_Fields;
}
cmUpdateRecord:
{ Update Current GP_KPI_Fields;
}
cmDeleteRecord:
{ if message('Удаление может изменить существующие документы'
   +chr(13)+'Продолжить?',YesNo )=cmYes
  //здесь нужно добавить еще проверку
  { delete Current GP_KPI_Fields;
  }
}
end;

//------------------------------
TableEvent table GP_KPI_Fields_TD;
cmSetDefault:
{ if not isvalid(#GP_TypeDocs) then Abort;
  if isFilterRun abort;
  ClearBuffer(#GP_KPI_Fields_TD);
  if (getlast GP_KPI_Fields_F where
     (( GP_TypeDocs.wType   == GP_KPI_Fields_F.wType
    and GP_TypeDocs.Nrec == GP_KPI_Fields_F.cDoc
    )) Ordered by index GP_KPI_Fields02) = tsok
  { GP_KPI_Fields_TD.Npp:=GP_KPI_Fields_F.Npp+1;
  }
  else
  { GP_KPI_Fields_TD.Npp:=1;
  }
  GP_KPI_Fields.wType   :=GP_TypeDocs.wType;
  GP_KPI_Fields_TD.cDoc :=GP_TypeDocs.Nrec;

}
cmInsertRecord:
{ Insert Current GP_KPI_Fields_TD;
}
cmUpdateRecord:
{ Update Current GP_KPI_Fields_TD;
}
cmDeleteRecord:
{ if message('Удаление может изменить существующие документы'
   +chr(13)+'Продолжить?',YesNo )=cmYes
  //здесь нужно добавить еще проверку
  { delete Current GP_KPI_Fields_TD;
  }
}
end;


//******************************************************************************
// HandleEvent самого интерфейса
//******************************************************************************
  HandleEvent
    cmInit:
    {
      isFilterRun:=false;
      LoadVipRef(DataProtector, 'GP_Protector');

      DataProtector.LinkToExt(cfsGetCurrentContainerSelf, '', true);
      DataProtector.ProtectedStatusCtx := sci1Esc;
      DataProtector.AutoPalette := true;
      if (wIntMode and cgiPickMult)=cgiPickMult
      { DataProtector.ProtectedStatusCtx := sci1EscIns;
        pMarker.AutoSave := True;
        pMarker.LoadAuto := True;
        pMarker.StoreName := 'GP_KPI_RaiseEdit';
        pMarker.Caption   := (' Отмечено [%d] ');
        pMarker.ImportFromName(pMarker.StoreName);
      }
      else  pMarker.Disable:=true;
      //===========================
      RoleGroupName:='Мотивация персонала';

      UserAccessService:=New(GP_UserAccessService,InitForRoleGroup(RoleGroupName));
      if (UserAccessService=NullRef) {
        abort;
        exit;
      }
      //--------------------
      if (not UserAccessService.IsAdmin)
      { if wIntMode=0
        { message('Вы не обладаете ролью Администратор.'#13'Редактирование запрещено.');
        }
        wIntMode:=wIntMode or cgiNotEdit
      }
      if wIntMode<>0
      { SetEditMode(false)
      }
      else
      { SetEditMode(True)
      }
      //----------------------------
      ReadParam;
      //----------------------------
      // включим принудительно фильтр по по типам документов
      if wTypeDoc>0
      { if getfirst  TypeDocs_Flt where (( wTypeDoc == TypeDocs_Flt.wType  ))=tsok
        { pTypeDocs:=TypeDocs_Flt.Nrec;
          ClearMarker(Marker_TypeDocs);
          InsertMarker(Marker_TypeDocs,pTypeDocs);
          BitOnW(wFilter,2);
        }
      } //if wTypeDoc>0


      SetFilterBounds(0);
      SetFilterNM;
    } //cmInit

    //----------------------
    cmDefault:
    { if (wIntMode and cgiPick)>0
      {
        if (wIntMode and cgiPickMult)=cgiPickMult
        { if PMarker.Count=0
          { pMarker.Mark;
          }
          pMarker.ExportToName(pMarker.StoreName);
        }
        else
        { set cRec:=GP_KPI_Raise.Nrec;

        }

        CloseInterface(cmDefault)
      }
      else
      { PutCommand(cmEdit);
      }

    }
    cmEdit:
    { RunWindowModal(wnRaiseEdit);

    }
    //----------------------
    cmDone:
    { if DataProtector<>NullRef
      { FreeVipInterface(DataProtector);

      }
      SaveParam;
    }
    //----------------------
    cmCheckField:
    { case CurField of
      #CanEdit: // (GP_KPI_Fields.Option and 1) 'Редакт.'  :[3],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,1);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,1);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Itog   : //    (GP_KPI_Fields.Option and 2) div 2 'результат':[5],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { var isNeed:boolean=true;
          if getfirst GP_KPI_Fields_F where ((
                        0   == GP_KPI_Fields_F.wType
                    and GP_KPI_Fields.cDoc == GP_KPI_Fields_F.cDoc
                    and ( IsBitCTW(GP_KPI_Fields_F.Option,2)
                       and GP_KPI_Fields.Nrec<>GP_KPI_Fields_F.Nrec
                       )
           ))=tsok
          { if message('Уже есть запись с признаком "Итог"'
             +chr(13)+'поле:'+string(GP_KPI_Fields_F.Npp)+' ,'+GP_KPI_Fields_F.Name
             +chr(13)+'Установить для текущего поля?' , YesNo)=cmYes
            { BitOffW(GP_KPI_Fields.Option,2);
              update current GP_KPI_Fields_F;
            }
            else isNeed:=false;
          }
          if isNeed BitOnW(GP_KPI_Fields.Option,2);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,2);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Visib   : // [Visib]   ((GP_KPI_Fields.Option and 4) shr 2)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,3);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,3);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Agregate   : // ((GP_KPI_Fields.Option and 8) shr 3)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,4);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,4);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Fond:// ((GP_KPI_Fields.Option and 16) shr 4) 'Ф.Руков'
      { var ww_str:string=GetViewerData();
        if ww_str='Да' //В премии из фонда руководителя 2 записи для разноски.
        { BitOnW(GP_KPI_Fields.Option,5);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,5);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #ClearNext:// ((GP_KPI_Fields.Option and 32) shr 5) 'Ф.Руков'
      { var ww_str:string=GetViewerData();
        if ww_str='Да' //В премии из фонда руководителя 2 записи для разноски.
        { BitOnW(GP_KPI_Fields.Option,6);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,6);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Proc2ZP://((GP_KPI_Fields.Option and 64) shr 6) '% в ЗП' ('Передавать в поле "процент" в операции - начисления - расчет ' )  :[7],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да' //
        { BitOnW(GP_KPI_Fields.Option,7);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,7);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }

      //--------------------------------------
      // Для итоговых полей
      //--------------------------------------
      #CanEdit_TD: // (GP_KPI_Fields.Option and 1) 'Редакт.'  :[3],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields_TD.Option,1);
        }
        else
        { BitOffW(GP_KPI_Fields_TD.Option,1);
        }
        set GP_KPI_Fields_TD.Option:=GP_KPI_Fields_TD.Option;
      }
      #Itog_TD   : //    (GP_KPI_Fields.Option and 2) div 2 'результат':[5],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { var isNeed:boolean=true;
          if getfirst GP_KPI_Fields_F where ((
                        GP_KPI_Fields_TD.wType  == GP_KPI_Fields_F.wType
                    and GP_KPI_Fields_TD.cDoc == GP_KPI_Fields_F.cDoc
                    and ( IsBitCTW(GP_KPI_Fields_F.Option,2)
                       and GP_KPI_Fields_TD.Nrec<>GP_KPI_Fields_F.Nrec
                       )
           ))=tsok
          { if message('Уже есть запись с признаком "Итог"'
             +chr(13)+'поле:'+string(GP_KPI_Fields_F.Npp)+' ,'+GP_KPI_Fields_F.Name
             +chr(13)+'Установить для текущего поля?' , YesNo)=cmYes
            { BitOffW(GP_KPI_Fields_TD.Option,2);
              update current GP_KPI_Fields_F;
            }
            else isNeed:=false;
          }
          if isNeed BitOnW(GP_KPI_Fields_TD.Option,2);
        }
        else
        { BitOffW(GP_KPI_Fields_TD.Option,2);
        }
        set GP_KPI_Fields_TD.Option:=GP_KPI_Fields_TD.Option;
      }
      #Visib_TD   : // [Visib]   ((GP_KPI_Fields.Option and 4) shr 2)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields_TD.Option,3);
        }
        else
        { BitOffW(GP_KPI_Fields_TD.Option,3);
        }
        set GP_KPI_Fields_TD.Option:=GP_KPI_Fields_TD.Option;
      }
      #Agregate_TD   : // ((GP_KPI_Fields.Option and 8) shr 3)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields_TD.Option,4);
        }
        else
        { BitOffW(GP_KPI_Fields_TD.Option,4);
        }
        set GP_KPI_Fields_TD.Option:=GP_KPI_Fields_TD.Option;
      }
      /*
      #Fond_Ruc_TD:// ((GP_KPI_Fields.Option and 16) shr 4) 'Ф.Руков'
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { var isNeed:boolean=true;
          if getfirst GP_KPI_Fields_F where ((
                        GP_KPI_Fields_TD.wType == GP_KPI_Fields_F.wType
                    and GP_KPI_Fields_TD.cDoc == GP_KPI_Fields_F.cDoc
                    and ( IsBitCTW(GP_KPI_Fields_F.Option,4)
                      and GP_KPI_Fields_TD.Nrec<>GP_KPI_Fields_F.Nrec
                        )
           ))=tsok
          { if message('Уже есть запись с признаком "Ф.Руков"'
             +chr(13)+'поле:'+string(GP_KPI_Fields_F.Npp)+' ,'+GP_KPI_Fields_F.Name
             +chr(13)+'Установить для текущего поля?' , YesNo)=cmYes
            { BitOffW(GP_KPI_Fields_TD.Option,2);
              update current GP_KPI_Fields_F;
            }
            else isNeed:=false;
          }
          if isNeed BitOnW(GP_KPI_Fields_TD.Option,4);
        }
        else
        { BitOffW(GP_KPI_Fields_TD.Option,2);
        }
        set GP_KPI_Fields_TD.Option:=GP_KPI_Fields_TD.Option;
      }
      */
      #GP_KPI_Fields.Npp_It://
      { if GP_KPI_Fields.Npp_It>0
        { if GP_KPI_Fields.Npp_It>GP_KPI_Doc_Max_FLD_SP
          { Message('Номер поля в итогах не может быть больше '+string(GP_KPI_Doc_Max_FLD_SP)+'!');
            set GP_KPI_Fields.Npp_It:=GP_KPI_Doc_Max_FLD_SP;
          }
          if getfirst GP_KPI_Fields_F where ((
                        0   == GP_KPI_Fields_F.wType
                    and GP_KPI_Fields.cDoc == GP_KPI_Fields_F.cDoc
                    and GP_KPI_Fields.Npp_It == GP_KPI_Fields_F.Npp_It(noindex)
           ))=tsok
          { set GP_KPI_Fields.Npp_It:=0;
            Message('Уже есть запись с входимостью в итоговую закладку "'+string(GP_KPI_Fields.Npp_It)+'"'
             +chr(13)+'поле:'+string(GP_KPI_Fields_F.Npp)+' ,'+GP_KPI_Fields_F.Name
             )
          }
        } //if GP_KPI_Fields.Npp_It>0
      }
      #GP_KPI_Fields.Npp:
      { if GP_KPI_Fields.Npp=0
        { Message('Номер поля 0 не допустим!');
          set GP_KPI_Fields.Npp:=Word(OldFieldValue);
        }
        if GP_KPI_Doc_Max_FLD_SP<GP_KPI_Fields.Npp
        { Message('Номер поля больше '+string(GP_KPI_Doc_Max_FLD_SP)+' не допустим!');
          set GP_KPI_Fields.Npp:=Word(OldFieldValue);
        }

      }
      end;
      //принудительно вызовем вставку
      Case CurTable of
      #GP_KPI_Raise:
      { set GP_KPI_Raise.cGP_TypeDocs:=GP_KPI_Raise.cGP_TypeDocs;
      }
      #GP_KPI_Fields://
      { set GP_KPI_Fields.Npp:=GP_KPI_Fields.npp;
      }
      end;
    }
    //----------------------
    cmPick:
    { if IsProtect
      { Abort;
        Exit;

      }
      case CurField of
      #GP_KPI_GroupPers.Code,//'Код' ('Группа работников') : PickButton,NoDel;
      #GP_KPI_GroupPers.Name:// 'Группа работников'         : PickButton,NoDel;
      { pTmp:=GP_KPI_NormPercent.cGroupPers;
        if RunInterface(GP_KPI_GroupPersEdit,cgiPick,pTmp)<>cmCancel
        { set GP_KPI_NormPercent.cGroupPers:=pTmp;
        }

      }
      #GP_KPI_AlG_Summa.Name:
      { pTmp:=GP_KPI_Raise.cAlg_Summa;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Raise.cAlg_Summa := pTmp;
        }

      }
      #GP_KPI_AlG_CRP.Name :
      {
        pTmp:=GP_KPI_Raise.cAlg_CRP;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Raise.cAlg_CRP := pTmp;
        }
      }
      #GP_KPI_AlG_KoefKorr.Name:
      {
        pTmp:=GP_KPI_Raise.cAlg_KoefKorr;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Raise.cAlg_KoefKorr := pTmp;
        }

      }
      #CatRaise.Name:
      { var cTmp: comp;
        cTmp:=GP_KPI_Raise.cDoplata;
        if ( RunInterface('PickCatalog2', integer(-17), cTmp, 0) <> cmCancel )
        { set GP_KPI_Raise.cDoplata:=cTmp;
          if GetFirst CatRaise=tsok {}
          if GP_KPI_Raise.Name=''
          { set GP_KPI_Raise.Name:=CatRaise.Name;
          }
          if GP_KPI_Raise.Code=''
          { set GP_KPI_Raise.Code:=CatRaise.Code;
          }
        }
      }
      #GP_TypeDocs.Name://     :
      { pTmp:=GP_KPI_Raise.cGp_TypeDocs;
        //if RunInterface(GP_KPI_TypeVedEdit,cgiPick,pTmp)<>cmCancel
        var sTmp:string;
        var wTmp:word=100;
        sTmp:=Gp_TypeDocs.Name;
        if (RunInterface(GP_PickTypeDocs,cgiPick, sTmp,pTmp,wTmp) = cmDefault)
        { set GP_KPI_Raise.cGp_TypeDocs:=pTmp;
        }

      }
      #GP_KPI_Alg_Fld.Name:// 'Алгоритм' :[20],NoProtect;
      {
        pTmp:=GP_KPI_Fields.cGP_KPI_Alg;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Fields.cGP_KPI_Alg := pTmp;
        }
      }
      #GP_KPI_Alg_Fld_Chk.Name:// 'Алгоритм' :[20],NoProtect;
      {
        pTmp:=GP_KPI_Fields.cGP_KPI_Alg_Chk;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Fields.cGP_KPI_Alg_Chk := pTmp;
        }
      }
      #GP_KPI_Alg_Fld_TD.Name:// 'Алгоритм' :[20],NoProtect;
      {
        pTmp:=GP_KPI_Fields_TD.cGP_KPI_Alg;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Fields_TD.cGP_KPI_Alg := pTmp;
        }
      }
      #FldTypeName:// 'Тип ссылки' (,,sci1378Esc) :[10],Protect,PickButton;
      {  case GP_KPI_Fields.wTypeFld  of //'Тип поля' : [5]
         //  0 'строка'
         //       ,1 'число'
         //       ,2 'дата'
         //       ,3 'время'
         1: //Установим номер колонки в итогах, колонки с один.смыслом должны быть с одни номером
         {

         }
         4,7:// 'аналитика'
         { //Result:=if(isValid(#KatKau),KatKau.Name,'')
           //var _rType:word; _rType:=0;
           //var _coTable:word; _coTable:=0;
           var _rObject:word; _rObject:= GP_KPI_Fields.KodGroup;
           //if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           if RunInterface(GetKauTable,cgiPick,(4 or 8 or 16 or 32),_rObject,0) <> cmCancel
           { set GP_KPI_Fields.KodGroup:=_rObject;
             SetModified(true);
           }

         }
         5:// 'кадр.справочники'
         { var _CurCat:comp; _CurCat:=0;
           if isValid(#CatSys) _CurCat:=CatSys.Nrec;
           if RunInterface(PickCatalog2, Integer(-1), _CurCat, Comp(0))<>cmCancel
           { if getfirst CatSys where (( _CurCat == CatSys.Nrec )) =tsok
             { var _SysCode:Longint;
               _SysCode:=CatSys.SysCode;
               if _SysCode=0
               { message('Допустимы к выбору только системные записи');
               }
               else
               { set GP_KPI_Fields.KodGroup:=_SysCode;
                 SetModified(true);
               }
             }
           }

         }
         6:// 'таблицв'
         { var _rType:word; _rType:=cgKatKau_System;
           var _coTable:word; _coTable:= GP_KPI_Fields.KodGroup;
           var _rObject:word; _rObject:= GP_KPI_Fields.KodGroup;
           if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           { set GP_KPI_Fields.KodGroup:=_coTable;//_rObject;
             SetModified(true)
           }
         }
         end;
      }
      #FldTypeName_TD:// 'Тип ссылки' (,,sci1378Esc) :[10],Protect,PickButton;
      {  case GP_KPI_Fields_TD.wTypeFld  of //'Тип поля' : [5]
         //  0 'строка'
         //       ,1 'число'
         //       ,2 'дата'
         //       ,3 'время'
         1: //Установим номер колонки в итогах, колонки с один.смыслом должны быть с одни номером
         {

         }
         4,7:// 'аналитика'
         { //Result:=if(isValid(#KatKau),KatKau.Name,'')
           //var _rType:word; _rType:=0;
           //var _coTable:word; _coTable:=0;
           var _rObject:word; _rObject:= GP_KPI_Fields_TD.KodGroup;
           //if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           if RunInterface(GetKauTable,cgiPick,(4 or 8 or 16 or 32),_rObject,0) <> cmCancel
           { set GP_KPI_Fields_TD.KodGroup:=_rObject;
             SetModified(true);
           }

         }
         5:// 'кадр.справочники'
         { var _CurCat:comp; _CurCat:=0;
           if isValid(#CatSys_TD) _CurCat:=CatSys_TD.Nrec;
           if RunInterface(PickCatalog2, Integer(-1), _CurCat, Comp(0))<>cmCancel
           { if getfirst CatSys_TD where (( _CurCat == CatSys_TD.Nrec )) =tsok
             { var _SysCode:Longint;
               _SysCode:=CatSys_TD.SysCode;
               if _SysCode=0
               { message('Допустимы к выбору только системные записи');
               }
               else
               { set GP_KPI_Fields_TD.KodGroup:=_SysCode;
                 SetModified(true);
               }
             }
           }
         }
         6:// 'таблицв'
         { var _rType:word; _rType:=cgKatKau_System;
           var _coTable:word; _coTable:= GP_KPI_Fields.KodGroup;
           var _rObject:word; _rObject:= GP_KPI_Fields.KodGroup;
           if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           { set GP_KPI_Fields.KodGroup:=_coTable;//_rObject;
             SetModified(true)
           }
         }
         end;
      }
      //------------------------------
      #Filtr_TypeDocs:
      { KauMarkerName:='GP_PickTypeDocs';
        StoreMarker(Marker_TypeDocs,KauMarkerName);
        //if RunInterface(GP_KPI_TypeVedEdit,cgiPickMult,'',0,100)<>cmCancel
        if (RunInterface(GP_PickTypeDocs,cgiPickMult, '',pTmp,100) = cmDefault)
        { Marker_Tmp  :=InitMarker(KauMarkerName, 8, 50, 10, True);
          CopyMarker(Marker_TypeDocs,Marker_Tmp);
          DoneMarker(Marker_Tmp,'');
          SetFilterNm(#Filtr_TypeDocs);
          BitOnW(wFilter,2);
        }
      }
      //------------------------------
      #Filtr_CatRaise:
      { KauMarkerName:='CatalogsMarker';
        StoreMarker(Marker_CatRaise,KauMarkerName);
        wc_nrec:=0;
        if ( RunInterface('PickCatalog2', integer(-17), wc_nrec, 100) <> cmCancel )
        { Marker_Tmp  :=InitMarker(KauMarkerName, 8, 50, 10, True);
          CopyMarker(Marker_CatRaise,Marker_Tmp);
          DoneMarker(Marker_Tmp,'');
          SetFilterNm(#Filtr_CatRaise);
          BitOnW(wFilter,3);
        }
      }
      end;
    } //cmPick
    //----------------------
    cmDelOnProtect:
    { Case Curfield of
      //------------------------------
      #Filtr_TypeDocs:
      { ClearMarker(Marker_TypeDocs);
        BitOffW(wFilter,2);
        SetFilterNm(#Filtr_TypeDocs);
      }
      //------------------------------
      #Filtr_CatRaise:
      { ClearMarker(Marker_CatRaise);
        BitOffW(wFilter,3);
        SetFilterNm(#Filtr_CatRaise);
      }
      end;
    }
    cmValue3: //Копирование записи
    { if isProtect
      { Message('В этом режиме копирование запрещено');
        Exit

      }
      if Message('Скопировать запись?'
        +chr(13)+GP_KPI_Raise.Name
        ,YesNo )<>cmYes
      { Exit;

      }
      if getfirst GP_KPI_Raise_F where (( GP_KPI_Raise.Nrec == GP_KPI_Raise_F.Nrec ))<>tsok
      { Message('Ошибка поиска записи для копирования');
        Exit;

      }
      GP_KPI_Raise_F.Nrec:=0;
      GP_KPI_Raise_F.Dbegin:=date(1,MonthRas,YearRas);
      GP_KPI_Raise_F.Name:=GP_KPI_Raise_F.Name+'(копия)';
      if Insert Current GP_KPI_Raise_F<>tsok
      { Message('Ошибка создания копии записи!');
        Exit;
      }
      External _Loop GP_KPI_Fields
      { GP_KPI_Fields.Nrec:=0;
        GP_KPI_Fields.cDoc:=GP_KPI_Raise_F.Nrec;
        Insert Current GP_KPI_Fields;
      }
      External _Loop GP_KPI_NormPercent
      { GP_KPI_NormPercent.Nrec:=0;
        GP_KPI_NormPercent.cGP_KPI_Raise:=GP_KPI_Raise_F.Nrec;
        Insert Current GP_KPI_NormPercent;
      }
      ReReadRecord(#GP_KPI_Raise);
      if getfirst GP_KPI_Raise where (( GP_KPI_Raise_f.Nrec == GP_KPI_Raise.Nrec ))<>tsok
      ReScanPanel(#GP_KPI_Raise)
    }
    //--------------------------
    cmPickClass:// внешние классификаторы
    {
      if UpdateTable
      case CurTable of
      #GP_KPI_Raise: RunInterface('ExClassifier', coGP_KPI_Raise, GP_KPI_Raise.nRec);
      end;
    }
    //--------------------------
    cmFilterSave:
    { UpdateTable;
      if RunWindowModal(wnFilter)=cmDefault
      { SetFilterBounds(0);
      }
      else RestFromA
    }

    //--------------------------
    cmPickAttr:// внешние аттрибуты
    {
      if UpdateTable
      case CurTable of
      #GP_KPI_Raise: RunInterface('Attribute', coGP_KPI_Raise, GP_KPI_Raise.nRec);
      end;
    }
    //--------------------------
    cmHotKeys:
    {
      case CurTable of
      #GP_KPI_Raise:
      { ProcessCommand(RunMenu('GP_KPI_RaiseEdit_Main_HotKey'));
      }
      end;
    }

  end;
end.

GP_KPI_RaiseEdit_Main_HotKey Menu
{
- 'Копирование записи', cmValue3, 'Копирование записи',  ,'',,sci1Esc;
 -----------;
- 'Фильтр на данные'     , cmFilterSave, 'Фильтр на данные', hcProc_NagrKaf, 'Alt+B',kbAltB, scMenuCtx;
- 'Внешняя классификация', cmPickClass, 'Внешняя классификация', hcGkatalM1ExtClass, 'Alt+C', kbAltC, sci1Esc;
- 'Внешние атрибуты'     , cmPickAttr , 'Заполнение внешних атрибутов по данной позиции', hcGkatalM1Attr, 'Alt+A', kbAltA, sci1Esc;

}
