/*************************************************************************************************\
* Наименование: Выбор ставки ШР                                                                   *
* Контур/Модуль: Кадры                                                                            *
* Примечание: 175 - добавлен вывод ФИО, по по показу от 15.12.2017                                *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |              |06/03/17|Кузьмин П.Ю.             |НПО Энергомаш                    *
* Разработка  |#175          |17/12/17|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/

#include Marker.vih

interface GP_PickStaffStruct 'Выбор ставки ШР' Cyan, DoAccept;
show(10,5,180,30);
Function ChkCloseDept(pNRec:comp):boolean;forward;
var Mode:word;
    cStaffStruct,cDep,cPost:comp;
    PostName:string;
    hMarker:tptr;
    pMarker:IMarker(Marker) new;
    boActive:boolean;
create view
var
   cRootNode,cNode:comp;
   PeriodBegin :date;
as select DepCat.NRec
from
  Catalogs,
  Catalogs DepCat,
  Catalogs DepCat_Sub,
  Catalogs PostCat,
  StaffStruct ,
  Appointments,
  Persons
//  StaffStruct StaffStruct2
where((
    DepCat.NRec==StaffStruct.Department and StaffStruct.Post==PostCat.nRec
and DepCat.NRec == DepCat_Sub.cParent
and StaffStruct.Nrec == Appointments.StaffStr
and 0 << Appointments.Person (NoIndex)
and PeriodBegin>>=Appointments.AppointDate(NoIndex)
and (
         (Appointments.lPrizn<>2 and  (Appointments.DisMissDate=ZeroDate or Appointments.DisMissDate>=PeriodBegin ))
      or (Appointments.lPrizn=2  and  (Appointments.DATEEND=ZeroDate or Appointments.DATEEND>=PeriodBegin ))
    )
and Appointments.Person == Persons.Nrec
))
Bounds ByPeriodBegin root == StaffStruct.Nrec(noindex)
    and ( StaffStruct.Dclose=ZeroDate or StaffStruct.Dclose>=PeriodBegin ) ordered by TableOrder
bounds ByTreeNode = cNode == DepCat.cParent and ( ChkCloseDept(DepCat.Nrec) ) ordered by DepCat.Name
bounds ByMainLink = integer(0) == DepCat.lPr
                and  cRootNode == DepCat.MainLink
                and  ( ChkCloseDept(DepCat.Nrec) )   ordered by DepCat.Name;

parameters Mode,cStaffStruct,PostName,cDep,cPost,hMarker,PeriodBegin;

create view vSpr
var cStaffStr :comp ;
From StaffStruct
where
(( cStaffStr  == StaffStruct.nrec
))
;
//---
Procedure MySetTitle;
{ SetTitle('Выбор ставки ШР'+if(BoundActive(tbbyPeriodBegin),' на '+DateToStr(PeriodBegin,'DD/MM/YYYY'),'') );

}//Procedure MySetTitle;

Function ChkCloseDept(pNRec:comp):boolean;cacheable;
{ if pNrec=0
  {Result:=true; exit;}
  Result:=not boActive;
  if Result exit;
  if DepCat.DatOk=ZeroDate
  { Result:=true; exit;}
  if DepCat.DatOk>=PeriodBegin
  { Result:=true; exit;}
  if isValidAll(tnDepCat_Sub)
  { Result:=true; exit;}
  if isValidAll(tnStaffStruct)
  { Result:=true; exit;}
}

tree trDepartment (,,sci1Tree);
show(,,90,);
table DepCat;
fields
  DepCat.Name 'Наименование СЕ ШР':[60],Protect;
  DepCat.Code 'Код':[10],Protect;
  DepCat.DatN 'Дата','создания':[10],Protect,NoAutoSize;
  DepCat.DatOk 'Дата','ликвид.':[10],Protect,NoAutoSize;
end;
browse brDepartment (,,sci1Esc);
show(,,90,);
table DepCat;
fields
  DepCat.Name 'Наименование СЕ ШР':[60],Protect;
  DepCat.Code 'Код':[10],Protect;
  DepCat.DatN 'Дата','создания':[10],Protect,NoAutoSize;
  DepCat.DatOk 'Дата','ликвид.':[10],Protect,NoAutoSize;
end;

browse brStaffStruct(,,sci1Esc);
show(91,,,20);
table StaffStruct;
recMarker=pMarker;
fields
  {Font={Color=if(StaffStruct.Dclose=ZeroDate or StaffStruct.Dclose>=PeriodBegin
           ,ColorSysBlack,ColorSysGray) }};
  StaffStruct.SeqNmb '№', 'п/п' ('N п/п', ):[5], Protect,NoAutoSize;
  PostCat.Name 'Должность' ('Должность по штатному расписанию',, ): [30], Protect,NoDel;
  PostCat.Code 'Код', 'должности' ('Код должности по штатному расписанию'): [10], Protect,NoDel;
  StaffStruct.WorkStations  'Штат.', 'ед-ц' ('Количество штатных единиц'): [8.3], Protect,NoAutoSize;
  StaffStruct.dInput  'Дата', 'введения' ('Дата введения'): [10], Protect,NoAutoSize;
  StaffStruct.dClose 'Дата', 'закрытия' ('Дата закрытия'): [10], Protect,NoAutoSize;
end;
browse brPers(,,sci1Esc);
show(91,21,,);
table Appointments;
fields
  Persons.Fio 'ФИО' :[25],Protect,NoDel,NoPickButton;
  Appointments.AppointDate 'Назначен'   :[10],Protect,NoDel,NoPickButton;
  Appointments.DisMissDate  'Дата ухода' :[10],Protect,NoDel,NoPickButton;
end;
TableEvent table DepCat;
cmTreeNodeType:{
  if (TreeIsTerminal(trDepartment))
    TreeSetNodeType(trDepartment, ntfText);
}
cmTreeTop:{
  cNode:=cRootNode;
}
cmTreeUp:{
  cNode:=DepCat.cParent;
}
cmTreeDown:{
  cNode:=DepCat.NRec;
}
cmTreeNeedOwner:{
  if (DepCat.cParent<>cRootNode)
    TreeJumpToRecord(trDepartment,DepCat.cParent)
  else
    TreeJumpToRecord(trDepartment,0);
}
end;

HandleEvent
cmInit:{
  if (getfirst fastfirstrow Catalogs where((-11==Catalogs.SysCode))<>tsok) {
    message('Не найден каталог "Структурные единицы штатного расписания"!',error);
    abort;
    exit;
  }
  boActive:=true;
  if PeriodBegin=ZeroDate
  { PeriodBegin:=date(1,MonthRas,YearRas);
  }
  AddBounds(tbByPeriodBegin);
  MySetTitle;
  cRootNode:=Catalogs.NRec;
  cNode:=cRootNode;
  AddBounds(tbByTreeNode);

  if ((Mode and cgiPickMult)=cgiPickMult) {
    if (hMarker=0) {
      message('Не задан маркер для множественного выбора.',error);
      abort;
      exit;
    }
    pMarker.ImportFrom(hMarker);

    SetHelpAndStatusContext(brStaffStruct, -1, sci1EscIns, hcKeepCurrent);
  } else {
    PutCommand(cmValue1);

    if ((Mode and cgiPick)=cgiPick)
      SetHelpAndStatusContext(brStaffStruct, -1, sci1Esc, hcKeepCurrent);
  }

  if (cStaffStruct<>0)
  { set vSpr.cStaffStr:=cStaffStruct;
    if (vSpr.getfirst fastfirstrow StaffStruct=tsok)
      cDep:=vSpr.StaffStruct.Department;
  }
  if (cDep<>0)
    if (getfirst fastfirstrow Catalogs where((cDep==Catalogs.NRec))=tsok) {
      cNode:=Catalogs.cParent;
      TreeJumpToRecord(trDepartment,Catalogs.NRec);
    }

  if (cStaffStruct<>0)
    if (getfirst StaffStruct where(( cStaffStruct==StaffStruct.NRec))=tsok) {};
  ReScanPanel(#StaffStruct);
}
cmValue1:{
  pMarker.Disable:=true;
}
cmValue2:
{ if not BoundActive(tbByPeriodBegin)
  then
  { AddBounds(tbByPeriodBegin);
    boActive:=true;
  }
  else
  { boActive:=false;
    SubBounds(tbByPeriodBegin);
  }
  ClearFuncCache;
  ReReadRecord(#StaffStruct);
  ReReadRecord(#DepCat);
  MySetTitle;


}
cmDefault:{
  if ((Mode and cgiPickMult)=cgiPickMult) {
    if (pMarker.Count=0)
      pMarker.Mark;

    pMarker.ExportTo(hMarker);

    if (not IsValidAll(tnpMarker))
      _loop StaffStruct
        if (IsValidAll(tnpMarker))
          break;
  }

  cStaffStruct:=StaffStruct.NRec;
  PostName:=PostCat.Name;
  cDep:=StaffStruct.Department;
  cPost:=StaffStruct.Post;
}
cmHotKeys:{
  PutContextMenuCommand('GP_PickStaffStruct_HotKeys');
}
cmAccording:{ //переключение режима табл/дерево Alt-S
  if (BoundActive(tbByTreeNode)) {
    SubBounds(tbByTreeNode);
    AddBounds(tbByMainLink);
    SetFormat(brDepartment);
    ReReadRecord(tnDepCat);
  } else {
    var CurRec:comp;
    CurRec:=DepCat.NRec;
    SubBounds(tbByMainLink);
    AddBounds(tbByTreeNode);
    SetFormat(trDepartment);
    ReReadRecord(tnDepCat);
    TreeJumpToRecord(trDepartment,CurRec);
  }
}
end;
end.

GP_PickStaffStruct_HotKeys Menu
{
- '~П~ереключить режим просмотра', cmAccording, 'Переключение режима просмотра между таблицей и деревом', , 'Alt+S', kbAltS, sci1Esc,,,,bmpTree_brows;
- '~Отобразить/Скрыть закрытые ставки', cmValue2, 'Отобразить/Скрыть закрытые ставки', , 'Alt+1', kbAlt1, sci1Esc,,,,bmpTree_brows;}
