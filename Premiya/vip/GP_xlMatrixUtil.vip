/** Вид работы  |Номер задачи  |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#193          |21/08/17|Кузьмин П.Ю.             |НПО Энергомаш                    *
\*************************************************************************************************/

#include GP_xlMatrixUtil.vih
interface GP_xlMatrixUtil;

var MaxMatrixRow,MatrixColCount,
    ExcelFirstCol,ExcelFirstRow,
    MatrixRow:longint;

//Максимальное количество строк в матрице
property MaxMatrixRow:longint absolute MaxMatrixRow;
//Количество столбцов в матрице
property MatrixColCount:longint absolute MatrixColCount;
//Номер колонки на листе Excel с которой начинается вывод матрицы
property ExcelFirstCol:longint absolute ExcelFirstCol;
//Номер строки на листе Excel с которой начинается вывод матрицы
property ExcelFirstRow:longint absolute ExcelFirstRow;
//Номер последней колонки на листе Excel в которую выводиться матрица
property ExcelLastCol:longint read ExcelFirstCol+MatrixColCount-1;
//Номер текущей строки в матрице
property MatrixRow:longint read MatrixRow;
//Номер текущей строки на листе Excel
property ExcelRow:longint read ExcelFirstRow+MatrixRow-1;

constructor Init;
{
  result:=true;

  private::MaxMatrixRow:=1000;
  private::MatrixColCount:=1;
  private::ExcelFirstCol:=1;
  private::ExcelFirstRow:=1;
  private::MatrixRow:=0;
}

//Переход на новую строку в матрице (MatrixRow++)
function AddRow:boolean;
{
  result:=false;

  if (MatrixRow=MaxMatrixRow) {
    if (not WriteMatrix) exit;
  }

  if (MatrixRow=0) {
    if (not xlCreateMatrix(MaxMatrixRow,MatrixColCount)) exit;
    xlClearMatrix;
  }

  private::MatrixRow++;

  result:=true;
}

//Запись строкового значения в матрицу
procedure StWrite(Col:longint;Val:string);
{
  xlStWriteToMatrix(MatrixRow,Col,Val);
}

//Запись даты в матрицу
procedure DtWrite(Col:longint;Val:date);
{
  xlDtWriteToMatrix(MatrixRow,Col,Val);
}

//Запись числового значения в матрицу
procedure DoWrite(Col:longint;Val:double);
{
  xlDoWriteToMatrix(MatrixRow,Col,Val);
}

//Запись суммы в матрицу, если она не равна нулю
procedure WriteSum(Col:longint;Val:double);
{
  if (Val=0) exit;
  xlDoWriteToMatrix(MatrixRow,Col,Val);
}

//Запись матрицы в Excel
function WriteMatrix:boolean;
var IsNeedDefFormat:boolean;
{
  result:=xlWriteMatrixToExcel(ExcelFirstRow,ExcelFirstCol);
  xlFreeMatrix;

  //Вызывается после каждой записи матрицы в Excel, позволяет задать формат строк отчета
  IsNeedDefFormat:=true;
  OnWriteMatrix(ExcelFirstRow,ExcelRow,IsNeedDefFormat);

  //Стандартное форматирование
  if (IsNeedDefFormat)
    xlFrameCells(xlBorderL+xlBorderR+xlBorderT+xlBorderB+xlInsideH+xlInsideV,xlThin,xlContinuous,0,
                 ExcelFirstRow,ExcelFirstCol,ExcelRow,ExcelLastCol);

  ExcelFirstRow+=MatrixRow;
  private::MatrixRow:=0;
}

end.
