/*************************************************************************************************\
* Наименование: Фильтр абстрактный                                                                *
* Контур/Модуль: *                                                                                *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |              |09/03/17|Кузьмин П.Ю.             |НПО Энергомаш                    *
\*************************************************************************************************/

#include GP_UserFilter.vih

interface GP_UserFilter;

var NoField : longint;
    mFilter:tptr;
    FilterStr,SaveName:string;

implementation GP_IUserFilter.GetFilterStr abstract;

constructor Init;
{
  result:=false;
}

constructor UserFilter(NoField:longint;SaveName:string);
{
  private::NoField:=NoField;
  private::SaveName:=SaveName;
  mFilter:=0;

  result:=true;
}

property NoField:longint read NoField;
property FilterStr:string read FilterStr;

implementation GP_IUserFilter.Pick abstract;

procedure Del;
{
  ClearMarker(mFilter);
  private::FilterStr:=GetFilterStr;
}

procedure Load(IStore:GP_IUserFilterStore);
{
  if (mFilter<>0) DoneMarker(mFilter,'');
  mFilter:=IStore.LoadMarker(SaveName);
  private::FilterStr:=GetFilterStr;
}

procedure Save(IStore:GP_IUserFilterStore);
{
  IStore.SaveMarker(mFilter,SaveName);
}

destructor Done;
{
  if (mFilter<>0) DoneMarker(mFilter,'');
}

end.
