/*************************************************************************************************\
* Наименование: Сравнение настроенных премий и КИС                                                *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |03/12/17|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/


VipInterface GP_KPI_COMPARE Licensed(free);
#doc
Сравнение настроенных премий и КИС
#end

Interface GP_KPI_COMPARE 'Сравнение процентов премий', EscClose;
var
  Dbeg :date;
  Dend :date;
  logfilenm:string;
  logfilekl:boolean;
  nm_Path:string;
//---------------------------------------
Function ChkErr(_pNrec:comp) : boolean; forward;
//---------------------------------------

Table struct tmp_prem
(  Fio:string[50]
  ,StrTabn  :string[20]
  ,Pers_nrec:comp
  ,App_Nrec:comp
  ,App_StaffStr:comp
  ,Podr_kod :string[10]
  ,post     :string[100]
  ,kateg    :word
  ,Tar_name :string[100]
  ,DatIzm :date
  ,Prem01 :double
  ,Prem02 :double
  ,Prem03 :double
  ,Prem04 :double
  ,Prem05 :double
  ,Prem06 :double
  ,Prem07 :double
  ,Prem08 :double
  ,Prem09 :double
  ,Prem01o :double
  ,Prem02o :double
  ,Prem03o :double
  ,Prem04o :double
  ,Prem05o :double
  ,Prem06o :double
  ,Prem07o :double
  ,Prem08o :double
  ,Prem09o :double
)
with index
( tmp_prem01=Fio+Podr_kod+post
);
//---------------------------------------
create view
select Persons.nrec,tmp_prem.*
from Persons,tmp_prem(tmp_prem01)
 ,GP_KPI_PERS_RAISE
 ,StaffStruct
 ,GP_KPI_RAISE_STS, GP_KPI_RAISE_STS_SP
bounds byErr root == tmp_prem.Fio
 and (ChkErr(tmp_prem.App_nrec) )
 ordered by TableOrder
;

//------------------------------------------------
Function ChkErr(_pNrec:comp) : boolean; Cacheable;
{ #__UNUSED__(_pNrec)
  Result:=
      tmp_prem.Prem01 <>tmp_prem.Prem01o or tmp_prem.Prem02 <>tmp_prem.Prem02o or tmp_prem.Prem03 <>tmp_prem.Prem03o
   or tmp_prem.Prem04 <>tmp_prem.Prem04o or tmp_prem.Prem05 <>tmp_prem.Prem05o or tmp_prem.Prem06 <>tmp_prem.Prem06o
   or tmp_prem.Prem07 <>tmp_prem.Prem07o or tmp_prem.Prem08 <>tmp_prem.Prem08o or tmp_prem.Prem09 <>tmp_prem.Prem09o

}

//define DBeg #date(1,11,2017)
//define DEND #date(30,11,2017)
#declare Prem_Fld (nrec,Fld)
 ,Max( CASE WHEN GP_KPI_Pers_Raise.Nrec is Null
      THEN
        CASE WHEN GP_KPI_Raise_Sts_SP.Nrec is Null
        THEN
          CASE #comp(#(nrec))
          When GP_TarStavExt.cMonthlyBonusType[1] THEN GP_TarStavExt.MonthlyBonus[1]
          When GP_TarStavExt.cMonthlyBonusType[2] THEN GP_TarStavExt.MonthlyBonus[2]
          When GP_TarStavExt.cMonthlyBonusType[3] THEN GP_TarStavExt.MonthlyBonus[3]
          ELSE 0.00
          END
        ELSE
         CASE WHEN GP_KPI_Raise_Sts_SP.cDoplata=#comp(#(nrec))
           THEN CASE WHEN GP_KPI_Raise_Sts_SP.Summa>0
              THEN GP_KPI_Raise_Sts_SP.Summa ELSE GP_KPI_Raise_Sts_SP.Procent END
           ELSE 0.00
         END
        END//CASE WHEN GP_KPI_Raise_Sts_SP.Nrec is Null
      ELSE
         CASE WHEN GP_KPI_Pers_Raise.cDoplata=#comp(#(nrec))
           THEN CASE WHEN GP_KPI_Pers_Raise.Summa>0
             THEN GP_KPI_Pers_Raise.Summa ELSE GP_KPI_Pers_Raise.Procent END
           ELSE 0.00
         END
      END //CASE WHEN GP_KPI_Pers_Raise.Nrec is Null
  ) as #(FLD)

#end

Procedure Fill_Tmp_Table;
var
  _Dbeg :date;
  _Dend :date;

{
  _Dbeg :=DBeg;
  _Dend :=DEnd;

SQL
select SubString(Persons.Fio,1,50) as Fio
  ,SubString(Appointments.StrTabn,1,20) as StrTabn
  ,Persons.Nrec                   as Pers_mrec
  ,Appointments.Nrec              as App_nrec
  ,Appointments.StaffStr          as App_Staffstr
  ,SubString(Catpodr.Code,1,6)    as Podr_kod
  ,SubString(CatPost.Name,1,100)  as post
  ,KLKATEGO.Kod                   as kateg
  ,SubString(TARSTAV.NAITAR,1,40) as Tar_name
  ,TARSTAV.DatIzm                 as DatIzm
 #Prem_Fld(00010000000007DAh,Prem01) //│ Ежемесячная премия по Положению высшего звена
 #Prem_Fld(000A0000000394AFh,Prem02) //│ Ежемесячная премия по Положению среднего звена
 #Prem_Fld(00010000000007DBh,Prem03) //│ Квартальная премия по Положению высшего звена
 #Prem_Fld(000A000000039492h,Prem04) //│ Квартальная премия по Положению среднего звена
 #Prem_Fld(00010000000007D9h,Prem05) //│ Премия за выполнение показателей премирования цехов основного производства
 #Prem_Fld(00010000000007D5h,Prem06) //│ Премия за качество и дисциплину труда
 #Prem_Fld(00010000000007D7h,Prem07) //│ Премия за результаты работы
 #Prem_Fld(000A0000000394EFh,Prem08) //│ Премия за соблюдение норматива неопределенных простоев ===
 #Prem_Fld(00010000000007D8h,Prem09) //│ Премия из премиального фонда руководителя
 ,0.00 as Prem01O
 ,0.00 as Prem02O
 ,0.00 as Prem03O
 ,0.00 as Prem04O
 ,0.00 as Prem05O
 ,0.00 as Prem06O
 ,0.00 as Prem07O
 ,0.00 as Prem08O
 ,0.00 as Prem09O
From Persons
inner join Appointments on Appointments.Person = Persons.Nrec
  and Appointments.AppointDate <= :(_DEnd)
  and (Appointments.DisMissDate=#Date(0,0,0) or Appointments.DisMissDate>=:(_DBeg) )
  and Appointments.Person>#comp(0)
inner join Catalogs CatPodr on CatPodr.nrec = Appointments.Department
inner join Catalogs CatPost on CatPost.nrec = Appointments.Post
Left outer join klkatego on KlKatego.nrec = Appointments.EmpCategory
Left Outer join TARSTAV on TARSTAV.Nrec = Appointments.TARIFF
Left Outer join GP_TarStavExt on GP_TarStavExt.cTarStav = Appointments.TARIFF
left outer join GP_KPI_Pers_Raise on GP_KPI_Pers_Raise.cAppoint = Appointments.Nrec
  and   GP_KPI_Pers_Raise.FromDate<=:(_DEnd)
  and  ( GP_KPI_Pers_Raise.ToDate=#Date(0,0,0) or :(_Dbeg)<=GP_KPI_Pers_Raise.ToDate )
Left Outer join  GP_KPI_Raise_Sts_SP on GP_KPI_Raise_Sts_SP.cStaffStruct = Appointments.StaffStr
and   GP_KPI_Raise_STS_SP.DataN<=:(_DEnd)
and  ( GP_KPI_Raise_STS_SP.DatOk=#Date(0,0,0) or :(_DBEG)<=GP_KPI_Raise_STS_SP.DataN )
Group by SubString(Persons.Fio,1,50)
        ,SubString(Appointments.StrTabn,1,20)
        ,Persons.Nrec
        ,Appointments.Nrec
        ,Appointments.StaffStr
        ,SubString(Catpodr.Code,1,6)
        ,SubString(CatPost.Name,1,100)
        ,KlKatego.Kod
        ,TARSTAV.NAITAR
        ,TARSTAV.DatIzm
into TMP_PREM
;
  ReReadRecord(#TMP_PREM);

}//Procedure Fill_Tmp_Table;

#include Excel_Imp.Vpp
Function FormDoc:boolean;
var iFile:word;
    wnmfile:string;
{ Result:=False;
  logfilenm:=GetStringParameter('Files','OutputFilesDirectory',0)
                               +'!TimeLog.log';

  if BoundActive(tbbyErr)  SubBounds(tbbyErr);
  ReReadRecord(#TMP_PREM);
  ReScanPanel(#Persons);
  Delete all TMP_PREM;
  Delete all TMP_PREM;
  //------------------------------
  Fill_Tmp_Table;
  logfilekl:=true;
  //------------------------------
  var isAllOk:boolean=true;
  For(iFile:=1;iFile<=10;iFile++)
  { if not isAllOk break;
    wnmfile:='';
    case iFile of
    01: wnmfile:=nm_path+'Высшее звено.xlsx';
    02: wnmfile:=nm_path+'Среднее звено.xlsx';
    03: wnmfile:=nm_path+'Премия по НИК по приказу 80 от 20.02.2017.xlsx';
    04: wnmfile:=nm_path+'ОПР 236 цеха.xlsx';
    //05:  wnmfile:=nm_path+'Остальные (исправления).xlsx';
    06: wnmfile:=nm_path+'Остальные (исправления) с категориями.xlsx';
    else continue;
    end;
    MyLog('--------- wnmfile --'+wnmfile);
    if not ReadDataFromExcel(0,wnmfile,'Лист1',False,true)
    { message('Ошибка импорта из'+chr(13)+wnmfile);
      exit ;
    }
    var wexrow_:longint;
    wexrow_:=0;
    var wkl_err:boolean;
    wkl_err:=false;
    v_imp._loop tmp_excel
    { if not nextvisual then
      { isAllOk:=false;
        break;
      }
      wexrow_++ ;
      if wexrow_=1
      { continue;
      }
      var _sFio,_sPost:string;
      _sFio :=v_imp.tmp_excel.dmcell[05];
//Слесарь по ремонту оборудования тепловых сетей
//Слесарь по ремонту оборудования  тепловых сетей 5 разряда
      _sPost:=RePlace(RePlace(v_imp.tmp_excel.dmcell[06],'ДЕКРЕТ: ',''),'  ',' ');
      MyLog('_sFio='+_sFio+',_sPost='+_sPost+','+MyDouble(v_imp.tmp_excel.dmcell[07])+','+v_imp.tmp_excel.dmcell[07]);
      var boNext: boolean;
      var wTypeFind:word;
      if _sFio='' continue;
      wTypeFind:=2;
      if getfirst tmp_prem where (( _sFio== tmp_prem.fio
        and ( pos(locase(_sPost),Replace(locase(tmp_prem.Post),'  ',' '))>0   )
        ))<>tsok
      { wTypeFind:=1;
        if getfirst tmp_prem where (( _sFio== tmp_prem.fio
        ))<>tsok
        { clearbuffer(#tmp_prem);
          tmp_prem.Pers_nrec:=comp(v_imp.tmp_excel.dmcell[01]);
          tmp_prem.Fio      :=v_imp.tmp_excel.dmcell[05];
          tmp_prem.Podr_Kod :=v_imp.tmp_excel.dmcell[03];
          tmp_prem.StrTabn  :=v_imp.tmp_excel.dmcell[04];

          tmp_prem.Post     :=v_imp.tmp_excel.dmcell[06];
          insert current tmp_prem;
          wTypeFind:=0;
        }
      }
      boNext:=false;
      do {
        case iFile of
        01:// nm_path:='Высшее звено.xlsx';
        { tmp_prem.Prem01o:=MyDouble(v_imp.tmp_excel.dmcell[07]);
          tmp_prem.Prem03o:=MyDouble(v_imp.tmp_excel.dmcell[08]);
        }
        02:// nm_path:='Среднее звено.xlsx';
        { tmp_prem.Prem02o:=MyDouble(v_imp.tmp_excel.dmcell[07]);
          tmp_prem.Prem04o:=MyDouble(v_imp.tmp_excel.dmcell[08]);
        }
        03: //nm_path:='Премия по НИК по приказу 80 от 20.02.2017.xlsx';
        { //% за качество	% за результаты работы	% из фонда руководителя
          tmp_prem.Prem05o:=0;
          tmp_prem.Prem06o:=MyDouble(v_imp.tmp_excel.dmcell[07]);
          tmp_prem.Prem07o:=MyDouble(v_imp.tmp_excel.dmcell[08]);
          tmp_prem.Prem09o:=MyDouble(v_imp.tmp_excel.dmcell[09]);

        }
        04:// nm_path:='ОПР 236 цеха.xlsx';
        {

        }
        05: //nm_path:='Остальные.xlsx';
        { //% за качество	% за результаты работы	% из фонда руководителя	% за выполнение показателей
          tmp_prem.Prem06o:=MyDouble(v_imp.tmp_excel.dmcell[07]);
          tmp_prem.Prem07o:=MyDouble(v_imp.tmp_excel.dmcell[08]);
          tmp_prem.Prem09o:=MyDouble(v_imp.tmp_excel.dmcell[09]);
          tmp_prem.Prem05o:=MyDouble(v_imp.tmp_excel.dmcell[10]);
        }
        06: //nm_path:='Остальные.xlsx';
        { //% за качество	% за результаты работы	% из фонда руководителя	% за выполнение показателей
          tmp_prem.Prem06o:=MyDouble(v_imp.tmp_excel.dmcell[08]);
          tmp_prem.Prem07o:=MyDouble(v_imp.tmp_excel.dmcell[09]);
          tmp_prem.Prem09o:=MyDouble(v_imp.tmp_excel.dmcell[10]);
          tmp_prem.Prem05o:=MyDouble(v_imp.tmp_excel.dmcell[11]);
        }
        end;
        update current tmp_prem;
        MyLog(' tmp_prem.Prem06o='+string(tmp_prem.Prem06o));
        boNext:=false;
        case wTypeFind of
        2:
        {  boNext:=getnext tmp_prem where (( _sFio== tmp_prem.fio
              and ( pos(locase(_sPost),Replace(locase(tmp_prem.Post),'  ',' '))>0   )
            ))=tsok;
        }
        1:
        {  //boNext:=getnext tmp_prem where (( _sFio== tmp_prem.fio ))=tsok;
        }
        end;
      } while boNext;
    } //v_imp._loop tmp_excel
  } //For(iList:=1;iList<=10;iLsit++)
  //---------------------------------------
  ClearFuncCache;
  if Getfirst tmp_prem=tsok {}
  ReScanPanel(#tmp_prem);
  Result:=True;
} //Function FormDoc:boolean;

Procedure InsPersRaise(_cDoplata:comp;_Procent:double;_Summa:double);
{ if getfirst GP_KPI_PERS_RAISE where ((
            tmp_prem.Pers_nrec == GP_KPI_PERS_RAISE.cPersons
         and _cDoplata  == GP_KPI_PERS_RAISE.cDoplata (noindex)
         ))<>tsok
  { insert into GP_KPI_PERS_RAISE set
             GP_KPI_PERS_RAISE.CDOPLATA :=_cDoplata//            │Тип премии
            ,GP_KPI_PERS_RAISE.CPERSONS :=tmp_prem.Pers_nrec//            │Сотрудник
            ,GP_KPI_PERS_RAISE.CAPPOINT :=tmp_prem.App_nrec//            │Вакансия
            ,GP_KPI_PERS_RAISE.FROMDATE :=DBeg//            │C даты
            //,GP_KPI_PERS_RAISE.TODATE   :=//            │по дату
            ,GP_KPI_PERS_RAISE.PROCENT  :=_Procent//            │Процент
            ,GP_KPI_PERS_RAISE.SUMMA    :=_Summa//            │Сумма
            ;
  }
  else
  { update current GP_KPI_PERS_RAISE set
          GP_KPI_PERS_RAISE.PROCENT  :=_Procent//            │Процент
         ,GP_KPI_PERS_RAISE.SUMMA    :=_Summa//            │Сумма
    ;
  }
} //Procedure InsPersRaise(_cDoplata:comp;_Procent:double;_Summa:double);

Procedure InsRaiseSts(_cDoplata:comp;_Procent:double;_Summa:double);
{ if _Procent=0 and _Summa=0 then Exit;
  if getfirst GP_KPI_RAISE_STS where ((
     tmp_prem.App_StaffStr == GP_KPI_RAISE_STS.CSTAFFSTRUCT
  ))<>tsok
  { if getfirst StaffStruct where (( tmp_prem.App_StaffStr == StaffStruct.Nrec )) =tsok {}
    insert into GP_KPI_RAISE_STS set
      GP_KPI_RAISE_STS.CODE:=tmp_prem.podr_kod
     ,GP_KPI_RAISE_STS.CSTAFFSTRUCT := tmp_prem.App_StaffStr
     ,GP_KPI_RAISE_STS.DEPARTMENT   := STAFFSTRUCT.DEPARTMENT
     ,GP_KPI_RAISE_STS.POST         := STAFFSTRUCT.POST
     ,GP_KPI_RAISE_STS.CKATEGOTY    := STAFFSTRUCT.EmpCategory
     ,GP_KPI_RAISE_STS.NPP          := STAFFSTRUCT.SeqNmb
     ;
  }
  if getfirst GP_KPI_RAISE_STS_SP where ((
            tmp_prem.App_StaffStr == GP_KPI_RAISE_STS_SP.cStaffStruct
         and _cDoplata  == GP_KPI_RAISE_STS_SP.cDoplata
         ))<>tsok
  { insert into GP_KPI_RAISE_STS_SP set
             GP_KPI_RAISE_STS_SP.CDOPLATA :=_cDoplata//            │Тип премии
            ,GP_KPI_RAISE_STS_SP.CSTAFFSTRUCT :=GP_KPI_RAISE_STS.CSTAFFSTRUCT//            │Сотрудник
            ,GP_KPI_RAISE_STS_SP.Datan :=DBeg//            │C даты
            //,GP_KPI_PERS_RAISE.TODATE   :=//            │по дату
            ,GP_KPI_RAISE_STS_SP.PROCENT  :=_Procent//            │Процент
            ,GP_KPI_RAISE_STS_SP.SUMMA    :=_Summa//            │Сумма
            ;
  }
  else
  { update current GP_KPI_RAISE_STS_SP set
          GP_KPI_RAISE_STS_SP.PROCENT  :=_Procent//            │Процент
         ,GP_KPI_RAISE_STS_SP.SUMMA    :=_Summa//            │Сумма

  }
} //Procedure InsPersRaise(_cDoplata:comp;_Procent:double;_Summa:double);

Procedure MakeRaise;
{ if not BoundActive(tbbyErr) AddBounds(tbbyErr);
   StartNewVisual(vtNumericVisual, vfTimer, 'Ждите, идет формирование премий', 0);
   ReReadRecord(#tmp_prem);
   _Loop tmp_prem
   { if not NextVisual break;
     if not ChkErr(tmp_prem.App_nrec) continue;
     //Prem_Fld(00010000000007DAh,Prem01) //│ Ежемесячная премия по Положению высшего звена
     if tmp_prem.Prem01o>0 or tmp_prem.Prem03o>0
     or tmp_prem.Prem01o>0 or tmp_prem.Prem03o>0
     { if tmp_prem.Prem01<>tmp_prem.Prem01o
       { if tmp_prem.Prem01o>0
         { InsPersRaise(00010000000007DAh,0,tmp_prem.Prem01o)
         }
       }
       //Prem_Fld(000A0000000394AFh,Prem02) //│ Ежемесячная премия по Положению среднего звена
       if tmp_prem.Prem02<>tmp_prem.Prem02o
       { if tmp_prem.Prem02o>0
         { InsPersRaise(000A0000000394AFh,tmp_prem.Prem02o,0)
         }
       }
       //Prem_Fld(00010000000007DBh,Prem03) //│ Квартальная премия по Положению высшего звена
       if tmp_prem.Prem03<>tmp_prem.Prem03o
       { if tmp_prem.Prem03o>0
         { InsPersRaise(00010000000007DBh,0,tmp_prem.Prem03o)
         }
       }
       //Prem_Fld(000A000000039492h,Prem04) //│ Квартальная премия по Положению среднего звена
       if tmp_prem.Prem04<>tmp_prem.Prem04o
       { if tmp_prem.Prem04o>0
         { InsPersRaise(000A000000039492h,tmp_prem.Prem04o,0)
         }
       }
     }
     ELSE
     //GP_KPI_RAISE_STS/GP_KPI_RAISE_STS_SP
     //Prem_Fld(00010000000007D9h,Prem05) //│ Премия за выполнение показателей премирования цехов основного производства
     //Prem_Fld(00010000000007D5h,Prem06) //│ Премия за качество и дисциплину труда
     //Prem_Fld(00010000000007D7h,Prem07) //│ Премия за результаты работы
     //---Prem_Fld(000A0000000394EFh,Prem08) //│ Премия за соблюдение норматива неопределенных простоев ===
     //Prem_Fld(00010000000007D8h,Prem09) //│ Премия из премиального фонда руководителя
     if tmp_prem.Prem05<>tmp_prem.Prem05o
     or tmp_prem.Prem06<>tmp_prem.Prem06o
     or tmp_prem.Prem07<>tmp_prem.Prem07o
     or tmp_prem.Prem08<>tmp_prem.Prem08o
     or tmp_prem.Prem09<>tmp_prem.Prem09o
     // только если один из показателей не 0
     if tmp_prem.Prem05o>0 or tmp_prem.Prem06o>0
     or tmp_prem.Prem07o>0 or tmp_prem.Prem08o>0
     or tmp_prem.Prem09o>0
     {
       InsRaiseSts(00010000000007D9h,tmp_prem.Prem05o,0);
       InsRaiseSts(00010000000007D5h,tmp_prem.Prem06o,0);
       InsRaiseSts(00010000000007D7h,tmp_prem.Prem07o,0);
       InsRaiseSts(00010000000007D8h,tmp_prem.Prem09o,0);
     }
   } //_Loop tmp_prem
   if getfirst tmp_prem=tsok {}
   ReScanPanel(#tmp_prem);
   ReScanPanel(#Persons);
   StopVisual('',0);

} //Procedure MakeRaise;

//====================================================
Window wnGetPrem 'Результаты' (,,sci1ESC);
//====================================================
Screen scrRes;
Show at (,,,2);
Table Persons;

Fields
 [Err]  if(BoundActive(tbbyErr),'Только отклонения','') : Protect, NoDel;
Buttons
  cmValue1    ,,, 'Установить фильтр', hcAllBOk, scGalDial;
  cmValue2    ,,, 'Только ошибки', hcAllBOk, scGalDial;
//  cmCancel,,, 'Отмена', hcAllBCancel, scGalDial;
<<
 <.Сформировать разницу.>   <.Только ошибки/Все .> .@@@@@@@@@@@@@@@@@@@

>>
end;
Browse brRes (,,sci1ESC);
Show at (,3,,);
Table tmp_prem;
fixedLeft (tmp_prem.Fio,tmp_prem.Podr_kod,tmp_prem.post) ;
Fields
  {Font={Color=if(ChkErr(tmp_prem.App_nrec),ColorsysRed,ColorSysBlack)}};
  tmp_prem.Fio      'ФИО' :[30],Protect,NoDel;
  tmp_prem.Podr_kod 'Подр.'     :[10],Protect,NoDel;
  tmp_prem.post     'Должность':[20],Protect,NoDel;
  tmp_prem.StrTabn  'Таб.№':[10],Protect,NoDel;
  [Base] if(tmp_prem.App_Nrec>0,'Б','') 'Б' :[2];
  tmp_prem.kateg    'Категория':[7],Protect,NoDel;
  tmp_prem.Tar_name 'Наим.','тарифв':[20],Protect,NoDel;
  tmp_prem.DatIzm   'Дата тарифа':[12],Protect,NoDel;
  tmp_prem.Prem01  'Ежемесячная премия','по Положению','высшего звена':[12,2],Protect,NoDel;
  tmp_prem.Prem01o 'КИС':[12,2],Protect,NoDel;
  tmp_prem.Prem02  'Ежемесячная премия','по Положению','среднего звена':[12,2],Protect,NoDel;
  tmp_prem.Prem02o 'КИС':[12,2],Protect,NoDel;
  tmp_prem.Prem03  'Квартальная премия','по Положению','высшего звена':[12,2],Protect,NoDel;
  tmp_prem.Prem03o 'КИС':[12,2],Protect,NoDel;
  tmp_prem.Prem04  'Квартальная премия','по Положению','среднего звена':[12,2],Protect,NoDel;
  tmp_prem.Prem04o 'КИС':[12,2],Protect,NoDel;
  tmp_prem.Prem05  'Премия за выполнение ','показателей премирования',' цехов основного производства':[12,2],Protect,NoDel;
  tmp_prem.Prem05o 'КИС':[12,2],Protect,NoDel;
  tmp_prem.Prem06  'Премия за ','качество','и дисциплину труда':[12,2],Protect,NoDel;
  tmp_prem.Prem06o 'КИС':[12,2],Protect,NoDel;
  tmp_prem.Prem07  'Премия за ','результаты работы':[12,2],Protect,NoDel;
  tmp_prem.Prem07o 'КИС':[12,2],Protect,NoDel;
//  tmp_prem.Prem08) 'Премия за ','соблюдение норматива',' неопределенных простоев':[10],Protect,NoDel;
  tmp_prem.Prem09  'Премия из ','премиального',' фонда руководителя':[12,2],Protect,NoDel;
  tmp_prem.Prem09o 'КИС':[12,2],Protect,NoDel;
end;
HandleEvent
cmValue1:
{ MakeRaise;

}
cmValue2:
{ if BoundActive(tbbyErr)  SubBounds(tbbyErr)
  else                     AddBounds(tbbyErr);
  ReReadRecord(#tmp_prem);
  ReScanPanel(#tmp_prem);
  ReScanPanel(#Persons);

}
end;
end;//Window wnGetPrem


Screen scrParam;
Table Persons ;
Fields
  Dbeg:NoProtect;
  DEnd:NoProtect;
  nm_Path:NoProtect;
Buttons
  cmOk    ,,, 'Установить фильтр', hcAllBOk, scGalDial;
  cmCancel,,, 'Отмена', hcAllBCancel, scGalDial;

<<
  Дата с .@@@@@@@@@@@@@@@@@@
      по .@@@@@@@@@@@@@@@@@@
  Путь .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 <. Продолжить .>  <.   Отмена   .>
>>
end;

  HandleEvent
  cmInit:
  { DBeg:=date(1,monthRas,YearRas);
    DEnd:=date(Last_Day(DBeg),monthRas,YearRas);
    timelog_init;
    nm_Path:='d:\Galaxy\RedMine\_GP\KPI\Sverka\';
  }
  cmCancel:
  { CloseInterFace(cmDone);
  }
  cmOk:
  { StartNewVisual(vtNumericVisual, vfTimer, 'Ждите, идет сбор данных', 0);
    FormDoc;
    StopVisual('',0);
    RunWindowModal(wnGetPrem);
  }
  end;
end.
