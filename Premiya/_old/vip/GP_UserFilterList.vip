/*************************************************************************************************\
* Наименование: Реализация класса GP_UserFilterList "Коллекция фильтров"                          *
* Контур/Модуль: *                                                                                *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |              |15/08/17|Кузьмин П.Ю.             |НПО Энергомаш                    *
\*************************************************************************************************/

#include GP_UserFilterStoreDSK.vih

#include GP_UserFilterNotes.vih
#include GP_UserFilterSost.vih
#include GP_UserFilterAnalit.vih
#include GP_UserFilterCatalogs.vih
#include GP_UserFilterDopTables.vih
#include GP_UserFilterKlKatego.vih
#include GP_UserFilterRoles.vih
#include GP_UserFilterYesNo.vih
#include GP_UserFilterBuhSchet.vih

#include GP_UserFilterList.vih
interface GP_UserFilterList;

var FilterStore:GP_IUserFilterStore;
    ListCount:longint;
    ListFilter:array[1] of GP_IUserFilter;
    ListNoField:array[1] of longint;

function GetUsingStoreDSK(Prefix:string):GP_ObjUserFilterList;
{
  var oStore:GP_IUserFilterStore = GP_IUserFilterStore(New(GP_UserFilterStoreDSK,InitDSK(Prefix)));

  result:=GP_ObjUserFilterList(New(GP_UserFilterList,UserFilterList(oStore)));
}

constructor UserFilterList(IStore:GP_IUserFilterStore);
{
  FilterStore:=IStore;
  ListCount:=0;

  result:=FilterStore<>NullRef;
}

procedure Add(UserFilter:GP_IUserFilter);
{
  ListCount++;
  ListFilter[ListCount]:=UserFilter;
  ListNoField[ListCount]:=UserFilter.NoField;
}

procedure AddByName(FilterName:string;NoField:longint;SaveName:string;ExtPar1:longint=0;ExtPar2:comp=0);
var Filter:GP_IUserFilter;
{
  Filter:=NullRef;

  case FilterName of
    'GP_UserFilterAnalit','UserFilterAnalit','FilterAnalit':
      Filter:=GP_IUserFilter(New(GP_UserFilterAnalit,UserFilterAnalit(NoField,SaveName,word(ExtPar1))));
    'GP_UserFilterNotes','UserFilterNotes','FilterNotes':
      Filter:=GP_IUserFilter(New(GP_UserFilterNotes,UserFilterNotes(NoField,SaveName,word(ExtPar1), ExtPar2)));
    'GP_UserFilterSost','UserFilterSost','FilterSost':
      Filter:=GP_IUserFilter(New(GP_UserFilterSost,UserFilterSost(NoField,SaveName,word(ExtPar1), ExtPar2)));
    'GP_UserFilterCatalogs','UserFilterCatalogs','FilterCatalogs':
      Filter:=GP_IUserFilter(New(GP_UserFilterCatalogs,UserFilterCatalogs(NoField,SaveName,integer(ExtPar1),ExtPar2)));
    'GP_UserFilterDopTables','UserFilterDopTables','FilterDopTables':
      Filter:=GP_IUserFilter(New(GP_UserFilterDopTables,UserFilterDopTables(NoField,SaveName,word(ExtPar1))));
    'GP_UserFilterKlKatego','UserFilterKlKatego','FilterKlKatego':
      Filter:=GP_IUserFilter(New(GP_UserFilterKlKatego,UserFilter(NoField,SaveName)));
    'GP_UserFilterRoles','UserFilterRoles','FilterRoles':
      Filter:=GP_IUserFilter(New(GP_UserFilterRoles,UserFilter(NoField,SaveName)));
    'GP_UserFilterYesNo','UserFilterYesNo','FilterYesNo':
      Filter:=GP_IUserFilter(New(GP_UserFilterYesNo,UserFilter(NoField,SaveName)));
    'GP_UserFilterBuhSchet','UserFilterBuhSchet','FilterBuhSchet':
      Filter:=GP_IUserFilter(New(GP_UserFilterBuhSchet,UserFilterBuhSchet(NoField,SaveName,ExtPar2,if(ExtPar1<255,byte(ExtPar1),0))));
    else
      message('Неизвестное имя фильтра "'+FilterName+'".',error);
  end;

  if (Filter<>NullRef)
    Add(Filter);
}

function Count:longint;
{
  result:=ListCount;
}

procedure Load;
var i:longint;
{
  for(i:=1;i<=ListCount;i++)
    ListFilter[i].Load(FilterStore);
}

procedure Save;
var i:longint;
{
  for(i:=1;i<=ListCount;i++)
    ListFilter[i].Save(FilterStore);
}

function FilterStr(Ind:longint):string;
{
  result:='';

  if (Ind>0 and Ind<=ListCount)
    result:=ListFilter[Ind].FilterStr;
}

function Pick(NoField:longint):boolean;
var i:longint;
{
  result:=false;

  i:=FindItem(ListNoField,NoField);
  result:=i>0;
  if (result)
    ListFilter[i].Pick;
}

function Del(NoField:longint):boolean;
var i:longint;
{
  result:=false;

  i:=FindItem(ListNoField,NoField);
  result:=i>0;
  if (result)
    ListFilter[i].Del;
}

function IsFilter(NoField:longint):boolean;
{
  result:=FindItem(ListNoField,NoField)>0;
}

property Store:GP_IUserFilterStore absolute FilterStore read;

end.
