/*************************************************************************************************\
* Наименование:  КПИ Просмотр процентов премий по штатному или по человеку                        *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#1993         |05/03/18|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/
#include CatFunc.vih           // Функции работы с Catalogs
#include GP_Protector.Vih
#include GP_UserAccessService.vih

#include GP_KPI_RaiseProc.Vih
#doc
КПИ Просмотр процентов премий по штатному расписанию или по сотруднику
#end
Interface GP_KPI_RaiseProc 'Просмотр процентов премий по штатному расписанию', EscClose;
Show at (,,110,25);
//-------------------------------
Function GetAppointType(_LPrizn:integer):string; Forward;
//-------------------------------

var
//---- объекты
 iCatFunc:CatalogsFunctions;   // Переменная типа интерфейс CatalogsFunctions
 DataProtector : IGP_Protector2;//защита полей от модификации
//----------- входные параметры
 wIntMode    :word;//режим просмотра CgiNotEdit
 pStaffStruct:comp;//ссылка на штатное расписание
 pPersons    :comp;//ссылка на сотрудника
 pAppoint    :comp;//ссылка на назначение
//---------- прочие параметры
 pTarStav    :comp;//ссылка на тарифную сетку
 isOpenSearch:boolean; //признак запуска быстрого выбора
 isProtect,isProtect2 :boolean; //защищенный выбор
 pGP_KPI_Raise_Sts_SP_INS:comp;
//------------ Настройки
 NPOEM_OWN_Raise_Raise_Class     :comp;//'Премия за классность'
 NPOEM_OWN_Raise_Pers_Summ_Enable:boolean;//'Доступ к сумме индивидуальных премий'
Create view
var
  DT_Ras_B:date;
  DT_Ras_E:date;

as select
  StaffStruct.Nrec
From
  StaffStruct
 ,Persons
 ,TarStav
 ,GP_TarStavExt
 ,Appointments
 ,Appointments Appointments_SS
 ,Persons Persons_SS
// премии по штатному расписанию
 ,GP_KPI_Raise_Sts_SP
 ,Catalogs CatRaise
//------------
 ,GP_KPI_Pers_Raise
 ,Catalogs CatRaise_P
 ,GP_KPI_Pers_Class
 ,Catalogs CatRaise_C

where
((    pStaffStruct == StaffStruct.Nrec
  and pPersons     == Persons.Nrec
  and pAppoint     == Appointments.Nrec
  and pTarStav     == GP_TarStavExt.cTarStav
  and pTarStav     == TarStav.Nrec
  //--- сотрудники на ставке
  and pStaffStruct == Appointments_SS.StaffStr
  and DT_RAS_E >>= Appointments_SS.AppointDate(noindex)
  and 0 << Appointments_SS.Person(noindex)
  and (Appointments_SS.DisMissDate=ZeroDate or DT_RAS_B <= Appointments_SS.DisMissDate)
  and Appointments_SS.Person == Persons_SS.Nrec
  // -------------------- премии по штатному расписанию
  and pStaffStruct == GP_KPI_Raise_Sts.cStaffStruct
  and pStaffStruct == GP_KPI_Raise_Sts_SP.cStaffStruct
  and GP_KPI_Raise_Sts_SP.cDoplata  == CatRaise.Nrec
  // --- индивидуальные премии
  and Appointments_SS.Nrec == GP_KPI_Pers_Raise.cAppoint
  and GP_KPI_Pers_Raise.cDoplata == CatRaise_P.Nrec
  //--- премии за классность
  and Appointments_SS.Nrec == GP_KPI_Pers_Class.cAppoint
  and GP_KPI_Pers_Class.cDoplata == CatRaise_C.Nrec
))
// на будущее
bounds ByAppoint = pAppoint == Appointments_SS.Nrec
bounds ByPers    = pPersons == Appointments_SS.Person
;
Parameters
 wIntMode
#doc
 режим просмотра CgiNotEdit
#end
, pStaffStruct
#doc
ссылка на штатное расписание
#end
, pPersons
#doc
 ссылка на сотрудника
#end
, pAppoint
#doc
 ссылка на назначение
#end
;

Screen scrTarStav (,,sci1Esc);
Show at (,,,5) Fixed_y;
Table TarStav;
Fields
  'Наименование тарифа' {Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
  TarStav.NaiTar:Protect;
  TarStav.CodTar:Protect;
  TarStav.Razr  :Protect;
  GP_TarStavExt.MonthlyBonus[1]:[10.2],Protect,NoDel;
  [MonthlyBonusType1] iCatFunc.GetCatalogsName(GP_TarStavExt.cMonthlyBonusType[1]) (,,sci1Esc):Protect, NoPickButton,NoDel;
  GP_TarStavExt.QuarterlyBonus:[10.2],Protect,NoDel;
  [QuarterlyBonusType] iCatFunc.GetCatalogsName(GP_TarStavExt.cQuarterlyBonusType) (,,sci1Esc):Protect, NoPickButton,NoDel;
  //---
  GP_TarStavExt.MonthlyBonus[2]:[10.2],Protect,NoDel;
  [MonthlyBonusType2] iCatFunc.GetCatalogsName(GP_TarStavExt.cMonthlyBonusType[2]) (,,sci1Esc):Protect, NoPickButton,NoDel;
  GP_TarStavExt.AnnualBonus:[10.2],Protect,NoDel;
  [AnnualBonusType] iCatFunc.GetCatalogsName(GP_TarStavExt.cAnnualBonusType) (,,sci1Esc):Protect, NoPickButton,NoDel;
  //---
  GP_TarStavExt.MonthlyBonus[3]:[10.2],Protect,NoDel;
  [MonthlyBonusType3] iCatFunc.GetCatalogsName(GP_TarStavExt.cMonthlyBonusType[3]) (,,sci1Esc):Protect, NoPickButton,NoDel;
//` 1` - почему то  сдвигается
<<
 .@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Месячные премии`                 `Тарифная сетка`.@@@@@@ `Разряд категория`.@@@
 ` 1`.@@@@@`%`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ `Кв.премия`.@@@@@`%`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `2` .@@@@@`%`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ `годовая`  .@@@@@`%`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `3` .@@@@@`%`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;//Screen scrTarStav (,,sci1Esc);

//---------------------------------
Screen scrRaiseStaff (,,sci1Esc);
Show at (,6,13,9) Fixed_x;
Fields
 'Премии'     :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'по штатному':{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'расписанию' :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
<<
 .@@@@@@@@@@@
 .@@@@@@@@@@@
 .@@@@@@@@@@@
>>
end;//Screen scrRaiseStav (,,sci1Esc);

//---------------------------------
Browse brRaiseStaff;
Show at (14,6,,9) ;
Table GP_KPI_Raise_Sts_SP;
Fields
  CatRaise.Name 'Премия' ('Вид премии',,sci1378Esc) :[30], Protect,PickButton,NoDel;
  CatRaise.Code 'Код' ('код вида премии',,sci1378Esc) :[6], Protect,PickButton,NoDel;
  GP_KPI_Raise_Sts_SP.DataN 'c' :[10],NoProtect;
  GP_KPI_Raise_Sts_SP.DatOK  'По' :[10], NoProtect;
  GP_KPI_Raise_Sts_SP.Procent '%'  :[10.2],NoProtect;
  GP_KPI_Raise_Sts_SP.Summa   'Сумма'  :[10.2,'\2p[|-]366`666`666`666`666.88'],NoProtect;
end;//brRaiseStaff
//---------------------------------
Screen scrRaisePers (,,sci1Esc);
Show at (,10,13,14) Fixed_x;
Fields
 'Сотрудники' :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'на ставке' :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
<<
 .@@@@@@@@@@
 .@@@@@@@@@@
>>
end;//Screen scrRaisePers (,,sci1Esc);
//---------------------------------
Browse brRaisePers (,,sci1Esc);
Show at (14,10,,14) Fixed_x;
Table Appointments_SS;
Fields
  Persons_SS.Fio 'Фио сотрудника' :[25],Protect,NoDel;
  Appointments_SS.AppointDate 'Дата','назначения' : [12],Protect,NoDel;
  [App_type] GetAppointType(Appointments_SS.Lprizn) 'Вид' :[10],Protect,NoDel;
  Appointments_SS.DisMissDate 'Дата','ухода' : [12],Protect,NoDel;
end;

//---------------------------------
Screen scrRaiseOrder (,,sci1Esc);
Show at (,15,13,18) Fixed_x;
Fields
 'Премии'    :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'за'    :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'классность'    :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
<<
 .@@@@@@@@@@
 .@@@@@@@@@@
 .@@@@@@@@@@
>>
end;//Screen scrRaisePers (,,sci1Esc);

//****************************************************
//Browse brPersRaiseClass '' (,,sci1478Esc);
Browse brPersRaiseClass '' (,,sci1Esc);
Show at (14,15,,18) Fixed_y;
Table GP_KPI_Pers_Class;
Fields
  CatRaise_C.Name 'Премия' :[30], Protect,NoPickButton,NoDel;
  GP_KPI_Pers_Class.FromDate 'c' :[10],Protect;
  GP_KPI_Pers_Class.ToDate  'По' :[10], Protect;
  GP_KPI_Pers_Class.Procent '%'  :[10.2],Protect;
end;


//---------------------------------
Screen scrRaiseInd (,,sci1Esc);
Show at (,19,13,) Fixed_x;
Fields
 'Премии'    :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'высшего'   :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'и среднего':{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;
 'звена'     :{Font={Bold=true;Color=ColorSysBlack}},Skip,Protect;

<<
 .@@@@@@@@@@
 .@@@@@@@@@@
 .@@@@@@@@@@
 .@@@@@@@@@@
>>
end;//Screen scrRaisePers (,,sci1Esc);
//****************************************************
//Browse brPersRaise '' (,,sci1478Esc)
Browse brPersRaise '' (,,sci1Esc);
Show at (14,19,,) ;
Table GP_KPI_Pers_Raise;
Fields
  CatRaise_P.Name 'Премия' :[30], Protect,NoPickButton,NoDel;
  GP_KPI_Pers_Raise.FromDate 'c' :[10],Protect;
  GP_KPI_Pers_Raise.ToDate  'По' :[10], Protect;
  GP_KPI_Pers_Raise.Procent '%'  :[10.2],Protect;
  GP_KPI_Pers_Raise.Summa   'Сумма'  :[10.2,'\2p[|-]366`666`666`666`666.88'],Protect;
end;//Browse brGroupPers
//******************************************************************************
// Функции
//******************************************************************************
//------------------------------------
// Наименование интерфейса
//------------------------------------
Function GetInterfaceName:string;
{ Result:=#(__InterfaceName__);
}

//---------------------------------
//
//---------------------------------
Constructor Init;
{ NPOEM_OWN_Raise_Raise_Class     :=coGetTune('NPOEM_OWN.Raise.Raise_Class');//'Премия за классность'
  NPOEM_OWN_Raise_Pers_Summ_Enable:=boGetTune('NPOEM_OWN.Raise.Pers_Summ_Enable');//'Доступ к сумме индивидуальных премий'
  DT_Ras_B:=date(1,MonthRas,YearRas);
  DT_Ras_E:=date(Last_Day(DT_Ras_B),MonthRas,YearRas);
  Result:=true;
} //Constructor Init;

//---------------------------------------
// Установка режима редактирования
//---------------------------------------
procedure SetEditMode(Value: boolean);
{
  DataProtector.SetProtected(not Value);
  if Value
  {  cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpBlueWindow);
  }
  else
  { cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpCyanWindow);
  }
  isProtect:=not Value;
} //Procedure SetEditMode(_isEdit:boolean);

//---------------------------------
//  Загрузчик интерфейса
//---------------------------------
Function LoadInterface(_wTP:word) :boolean;
{ #__UNUSED__(_wTP)
  Result:=true;
  LoadVipRef(DataProtector, 'GP_Protector');
  DataProtector.LinkToExt(cfsGetCurrentContainerSelf, '', true);
  DataProtector.ProtectedStatusCtx := sci1Esc;
  DataProtector.AutoPalette := true;
  // Настройки НПО Энергомаш \ Мотивация \ Доступ к сумме индивидуальных премий"
  if boGetTune('NPOEM_OWN.RAISE.PERS_SUMM_ENABLE')
    SetFieldState(#GP_KPI_Pers_Raise.Summa,sfVisible);
  else
    ClearFieldState(#GP_KPI_Pers_Raise.Summa,sfVisible);
} //Function LoadInterface(_wTP:word) :boolean;

//---------------------------------
//  Получить тип назначения
//---------------------------------
Function GetAppointType(_LPrizn:integer):string;
{ Result:='';
  case _LPrizn of
  0 : Result:= 'Основное';
  2 : Result:= 'Замещение';
  3 : Result:= 'Вн.совмещение';

  end;
} //Function GetAppointType(_LPrizn:integer);
//------------------------------------------------------------------------------
#doc
   Инициализация параметров интерфейса
#end
Function InitParam(
   _wIntMode    :word// режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
  ;_pStaffStruct:comp//ссылка на штатное расписание
  ;_pPersons    :comp//ссылка на сотрудника
  ;_pAppoint    :comp//ссылка на назначение
) : boolean;
{ Result:=False;
  wIntMode    :=_wIntMode    ;// режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
  pStaffStruct:=_pStaffStruct;//ссылка на штатное расписание
  pPersons    :=_pPersons    ;//ссылка на сотрудника
  pAppoint    :=_pAppoint    ;//ссылка на назначение
  set pTarStav    :=0;
  if getfirst StaffStruct=tsok
    set pTarStav:=StaffStruct.TARIFF;
  if pTarStav=0
    if pAppoint>0
    { if getfirst Appointments=tsok
        set pTarStav:=Appointments.TARIFF;

    }
  if pTarStav=0
  { message('Нет привязки к тарифным сеткам!' );
    Exit
  }
  SetEditMode(wIntMode=0);
  if _pAppoint>0
  { PushBounds(tbByAppoint);
  }
  else
  if _pPersons>0
  { PushBounds(tbByPers);
  }
  else
    PushBounds(#Appointments_SS);
  Result:=True;
} //Function InitParam(

//--------------------------
// создать буфер спецификации премии по штатному расписанию
//--------------------------
Function MakeBufferRaiseStaffSP(_pDoplata:comp;_dProcent:tSumma):boolean;
{ ClearBuffer(#GP_KPI_Raise_Sts_SP);

  GP_KPI_Raise_Sts_SP.Datan:=if(Staffstruct.DInput>Dt_Ras_B,Staffstruct.DInput,Dt_Ras_B);
  GP_KPI_Raise_Sts_SP.Datok:=Staffstruct.DClose;
  GP_KPI_Raise_Sts_SP.cDoplata:=_PDoplata;
  GP_KPI_Raise_Sts_SP.Procent :=_DProcent;
  insert current GP_KPI_Raise_Sts_SP;
  pGP_KPI_Raise_Sts_SP_INS:=GP_KPI_Raise_Sts_SP.Nrec;
  Result:=true;
} //Function MakeBufferRaiseStaffSP(_pDoplata):boolean;

//--------------------------
// создать  премию по штатному расписанию
//--------------------------
Function MakeBufferRaiseStaff:boolean;
{ Result:=false;
  if pStaffStruct=0
  { message('Не найдено штатное расписание') ;
    Exit;
  }
  pGP_KPI_Raise_Sts_SP_INS:=0;
  if Getfirst GP_KPI_Raise_Sts<>tsok
  { ClearBuffer(#GP_KPI_Raise_Sts);
    GP_KPI_Raise_Sts.cStaffStruct:=pStaffStruct;
    GP_KPI_Raise_Sts.Department:=StaffStruct.Department;
    GP_KPI_Raise_Sts.Code:=iCatFunc.GetCatalogsCode(StaffStruct.Department);
    GP_KPI_Raise_Sts.Name:=iCatFunc.GetCatalogsCode(StaffStruct.Department);
    GP_KPI_Raise_Sts.Post      :=StaffStruct.Post;
    GP_KPI_Raise_Sts.cKategoty :=Staffstruct.EmpCategory ;
    if insert current GP_KPI_Raise_Sts<>tsok
    { Message('Ошибка создания записи');
      exit;
    }
  }
  Result:=true;
  if getfirst GP_TarStavExt<>tsok exit;
  var jj:word;

  For(jj :=1;jj<=3;jj++)
  { if GP_TarStavExt.MonthlyBonus[jj]>0
    { if GP_TarStavExt.cMonthlyBonusType[jj]>0
      {  MakeBufferRaiseStaffSP(GP_TarStavExt.cMonthlyBonusType[jj],GP_TarStavExt.MonthlyBonus[jj])
      }
    }
  } //for(jj:=1;jj<=3;jj++)
  if GP_TarStavExt.QuarterlyBonus>0
  { if GP_TarStavExt.cQuarterlyBonusType>0
    { MakeBufferRaiseStaffSP(GP_TarStavExt.cQuarterlyBonusType,GP_TarStavExt.QuarterlyBonus)
    }
  } //if GP_TarStavExt.QuarterlyBonus>0
  if GP_TarStavExt.AnnualBonus>0
  { if GP_TarStavExt.cAnnualBonusType>0
    { MakeBufferRaiseStaffSP(GP_TarStavExt.cAnnualBonusType,GP_TarStavExt.AnnualBonus)
    }
  } //if GP_TarStavExt.QuarterlyBonus>0
  ReScanPanel(#GP_KPI_Raise_Sts);
  ReReadRecord(#GP_KPI_Raise_Sts_SP);
  if getfirst GP_KPI_Raise_Sts_SP where (( pGP_KPI_Raise_Sts_SP_INS==GP_KPI_Raise_Sts_SP.Nrec )) =tsok {}
  ReScanPanel(#GP_KPI_Raise_Sts_SP);

} //Function MakeBufferRaiseStaff:boolean;


//******************************************************************************
/////////////// ОБРАБОТЧИК СОБЫТИЙ GP_KPI_Raise_Sts_SP /////////////////////////
//******************************************************************************
TableEvent table GP_KPI_Raise_Sts_SP ;
cmSetDefault:
{ //Abort;
  exit;
}
cmInsert:
{
  //MakeBufferRaiseStaffSP(0,0);
  MakeBufferRaiseStaff;
  ReScanPanel(#GP_KPI_Raise_Sts_SP);
  abort;
}
cmInsertRecord:
{
  Insert Current GP_KPI_Raise_Sts_SP;
}
cmUpdateRecord:
{ Update Current GP_KPI_Raise_Sts_SP;
}
cmDeleteRecord:
{ if message('Удалить запись?',YesNo)<>cmYes
  { abort; exit;
  }
  delete Current GP_KPI_Raise_Sts_SP;
}
end; //TableEvent table GP_KPI_Raise_Sts

//******************************************************************************
/////////////////////////// ОБРАБОТКА СОБЫТИЙ ИНТЕРФЕЙСА ///////////////////////
//******************************************************************************
HandleEvent
//------------------------------
  cmInit:
  { LoadInterface(0);
    if not InitParam(wIntMode,pStaffStruct,pPersons,pAppoint)
    { CloseInterFace(cmDone);
      abort;exit;
    }
  }
  cmOnVipLoad:
  { LoadInterface(1);
  }
  //----------------------
  cmPick:
  { if IsProtect
    { Abort;
      Exit;

    }
    case CurField of
    //--------------------------
    #CatRaise.Name,#CatRaise.Code:
    { var cTmp: comp;
      cTmp:=GP_KPI_Raise_Sts_SP.cDoplata;
      if ( RunInterface('PickCatalog2', integer(-17), cTmp, 0) <> cmCancel )
      { set GP_KPI_Raise_Sts_SP.cDoplata:=cTmp;
        if GetFirst CatRaise=tsok {}
        if GP_KPI_Raise_Sts_SP.Procent=0
        { GP_KPI_Raise_Sts_SP.Procent:=Longint(CatRaise.LastUser);
        }
      }
    }
    //--------------------------
    #CatRaise_P.Name,#CatRaise_P.Code:
    { var cTmp: comp;
      cTmp:=GP_KPI_Pers_Raise.cDoplata;
      if ( RunInterface('PickCatalog2', integer(-17), cTmp, 0) <> cmCancel )
      { set GP_KPI_Pers_Raise.cDoplata:=cTmp;
        if GetFirst CatRaise_P=tsok {}
        if GP_KPI_Pers_Raise.Procent=0
        { GP_KPI_Pers_Raise.Procent:=Longint(CatRaise_P.LastUser);
        }
      }
    }
    //--------------------------
    #CatRaise_C.Name,#CatRaise_C.Code:
    { var cTmp: comp;
      cTmp:=GP_KPI_Pers_Class.cDoplata;
      if ( RunInterface('PickCatalog2', integer(-17), cTmp, 0) <> cmCancel )
      { set GP_KPI_Pers_Class.cDoplata:=cTmp;
        if GetFirst CatRaise_C=tsok {}
        if GP_KPI_Pers_Class.Procent=0
        { GP_KPI_Pers_Class.Procent:=Longint(CatRaise_C.LastUser);
        }
      }
    }
    end;
  }//cmPick//
end;
end.
