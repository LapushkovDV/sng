/*************************************************************************************************\
* Наименование: Роли и пользователи                                                               *
* Контур/Модуль: *                                                                                *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер задачи  |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |23/08/17|Кузьмин П.Ю.             |НПО Энергомаш                    *
\*************************************************************************************************/

#include GP_UserAccessService.vih
#include GP_RolesView.vih
#include GP_UserRolesView.vih

interface GP_RolesAndUsers 'Роли и пользователи', Cyan, EscClose;
show(20,5,140,35);

var UserAccessService:GP_UserAccessService NoAuto;
    RolesView:GP_RolesView NoAuto;
    UserRolesView:GP_UserRolesView NoAuto;
    RoleGroupName:string;

parameters RoleGroupName;

screen scRoleGroup (,,sci13Esc);
show(,,,2) Fixed_Y;
fields
  RoleGroupName:Protect,PickButton;
<<
 `Группа ролей`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;

tabbedSheet top tabRolesAndUsers;
show(,3,,);
embedded brRoles 'Роли' interface;
end;
embedded brUsers 'Пользователи' interface;
end;
end;

procedure GoToUser(cUser:comp);
{
  SetFormat(brUsers);
  UserRolesView.ReReadUsers;
  UserRolesView.SelectUser(cUser);
}

procedure GoToRole(cRole:comp);
{
  SetFormat(brRoles);
  RolesView.SelectRole(cRole);
}

function InitForRoleGroupName(GrName:string):boolean;
{
  result:=false;

  UserAccessService:=New(GP_UserAccessService,InitForRoleGroup(GrName));
  if (UserAccessService=NullRef) exit;

  if (not UserAccessService.IsAdmin) {
    message('Вы не обладаете ролью Администратор.'#13'Доступ запрещен.');
    exit;
  }

  if (RolesView<>NullRef) {
    UnbindEmbeddedInterface(brRoles);
    UnbindEvent(GoToUser,RolesView.GoToUser);
    RolesView:=NullRef;
  }
  RolesView:=New(GP_RolesView,InitForRoleGroup(UserAccessService.RoleGroup));
  BindEmbeddedInterface(brRoles,RolesView);
  BindEvent(GoToUser,RolesView.GoToUser);

  if (UserRolesView<>NullRef) {
    UnbindEmbeddedInterface(brUsers);
    UnbindEvent(GoToRole,UserRolesView.GoToRole);
    UserRolesView:=NullRef;
  }
  UserRolesView:=New(GP_UserRolesView,InitForRoleGroup(UserAccessService.RoleGroup));
  BindEmbeddedInterface(brUsers,UserRolesView);
  BindEvent(GoToRole,UserRolesView.GoToRole);

  result:=true;
}

HandleEvent
cmInit:{
  if (RoleGroupName='')
    RoleGroupName:='Мотивация персонала';

  if (not InitForRoleGroupName(RoleGroupName)) abort;
}
cmChangeTabbedSheetFormat:{
  if (Target=brUsers)
    UserRolesView.ReReadUsers;
}
cmPick:{
  var sTmp:string;
  sTmp:=RoleGroupName;
  if (RunInterface(GP_PickRoleGroup, sTmp) = cmDefault)
    if (RoleGroupName<>sTmp)
      if (InitForRoleGroupName(sTmp))
        set RoleGroupName:=sTmp;
}
end;
end.
