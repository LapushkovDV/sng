/*************************************************************************************************\
* Наименование: Фонды                                                                             *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |20/09/17|Кириллов Э.П.            |НПО Энергомаш                    *
* Разработка  |#779          |20/09/17|Кириллов Э.П.            |НПО Энергомаш                    *
\*************************************************************************************************/
#include marker.vih // описание объекта и объявление интерфейса
                    // marker c реализацией по умолчанию
#include GP_Protector.Vih
#include GP_UserAccessService.vih
#include GP_KPI_RaiseEdit.Vih
#include GP_KPI_FondEdit.Vih
#doc
Фонды
#end
Interface GP_KPI_FondEdit 'Фонды' , EscClose;
Show At (,,70,20);
var
  pMarker:IMarker(Marker) new;

  wIntMode:word; //тип запуска
  cRec    :Comp   ; // ссылка на группу
  isOpenSearch:boolean; //признак запуска быстрого выбора
  isProtect :boolean; //защищенный выбор
  isFilterRun:boolean;//признак работы ограничений
  DataProtector : IGP_Protector2;//защита полей от модификации
  UserAccessService:GP_UserAccessService NoAuto;
  RoleGroupName    :string;
  pTmp:comp;
Create View
as select GP_KPI_Fond.Nrec
From
  GP_KPI_Fond
, GP_KPI_Fond GP_KPI_Fond_F
, GP_KPI_GroupPers
//, Catalogs CatRaise
//--------- поля
, GP_KPI_Fields(GP_KPI_Fields02)
, GP_KPI_Fields GP_KPI_Fields_F
, GP_KPI_Alg GP_KPI_Alg_Fld
, GP_KPI_Alg GP_KPI_Alg_Fld_Chk
, KatKau
, Catalogs CatSys
, X$Files

where ((
    GP_KPI_Fond.cGroupPers == GP_KPI_GroupPers.Nrec
//and GP_KPI_Fond.cKPI_Raise == CatRaise.Nrec //GP_KPI_Raise.Nrec
and GP_KPI_Fond.cKPI_Raise == GP_KPI_RAISE.Nrec //GP_KPI_Raise.Nrec
//------------
and 1                            == GP_KPI_Fields.wType
and GP_KPI_Fond.Nrec             == GP_KPI_Fields.cDoc
and 1                            == GP_KPI_Fields_F.wType
and GP_KPI_Fond.Nrec             == GP_KPI_Fields_F.cDoc
and GP_KPI_Fields.Npp            == GP_KPI_Fields_F.Npp

and GP_KPI_Fields.cGP_KPI_Alg     == GP_KPI_Alg_Fld.Nrec
and GP_KPI_Fields.cGP_KPI_Alg_CHK == GP_KPI_Alg_Fld_Chk.Nrec
and GP_KPI_Fields.KodGroup        == KATKAU.KODGROUP
and GP_KPI_Fields.KodGroup        == CatSys.SysCode
and GP_KPI_Fields.KodGroup        == x$Files.xf$code

));
Parameters
  wIntMode
#doc
#end
, cRec
#doc
, возвращаемый параметр
#end
;

//*************************************************8
QuickChoice qcByCode
{
  AcceptField = GP_KPI_Fond.Nrec;
  ViewField = GP_KPI_Fond.Code;
  ViewField = GP_KPI_Fond.Name;
  // только текстовый поля!
  SearchField = GP_KPI_Fond.Code;
  OnOpen : {
  }
  OnClose : {
    cRec := GP_KPI_Fond.Nrec;
  }
}
QuickChoice qcByName
{
  AcceptField = GP_KPI_Fond.Nrec;
  ViewField = GP_KPI_Fond.Name;
  ViewField = GP_KPI_Fond.Code;
  // только текстовый поля!
  SearchField = GP_KPI_Fond.Name;
  OnOpen : {
  }
  OnClose : {
    cRec := GP_KPI_Fond.Nrec;
  }
}

//******************************************************************************
// Функции
//******************************************************************************

procedure SetEditMode(Value: boolean);
{
  DataProtector.SetProtected(not Value);

  if Value
    cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpBlueWindow);
  else
    cfsSetProp(cfsGetCurrentContainerSelf, cfpPalette, wpCyanWindow);
  isProtect:=not Value;
} //Procedure SetEditMode(_isEdit:boolean);

//===============================================
// Получить наименование ссылочных полей
//===============================================
Function GetFldTypeName:string;
{ Result:='';
  case GP_KPI_Fields.wTypeFld  of //'Тип поля' : [5]
  //  0 'строка'
  //       ,1 'число'
  //       ,2 'дата'
  //       ,3 'время'
  4,7:// 'аналитика' , 'Переключатель'
  { Result:=if(isValid(#KatKau),KatKau.Name,'')
  }
  5:// 'кадр.справочники'
  { Result:=if(isValid(#CatSys),CatSys.Name,'');
  }
  6:// 'таблицв'
  { Result:=if(isValid(#x$Files),x$Files.xf$Name,'');
  }
  end;

} //Function GetFldTypeName:string;

//****************************************************
Window wnEditFond 'Редактирование показателей фонда';
Screen ScrEditFond (,,sci178Esc);
Show At (,,,6) ;
Table GP_KPI_Fond;
Fields
  GP_KPI_Fond.Name : NoProtect,NoPickButton
     ,{Font={BackColor=if(GP_KPI_Fond.Name='',ColorNeed,0)}};
  GP_KPI_Fond.Code : NoProtect,NoPickButton;
  GP_KPI_Fond.Description : NoProtect,NoPickButton;
  GP_KPI_GroupPers.Name (,,sci1378Esc) : Protect,PickButton,NoDel
     ,{Font={BackColor=if(GP_KPI_Fond.cGroupPers=0,ColorNeed,0)}};
  GP_KPI_GroupPers.Code (,,sci1378Esc) : Protect,PickButton,NoDel;
  //CatRaise.Name
  GP_KPI_RAISE.Name
   (,,sci1378Esc) : Protect,PickButton,NoDel
     ,{Font={BackColor=if(GP_KPI_Fond.cKPI_Raise=0,ColorNeed,0)}};
  //CatRaise.Code
  GP_KPI_RAISE.CODE    (,,sci1378Esc) : Protect,PickButton,NoDel;
  GP_KPI_Fond.PercentToFond :[10.1] NoProtect,NoPickButton;
<<
 `Наименование фонда` .@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Группа персонала  ` .@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@
 `Премия            ` .@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@
 `Процент плановой премии для фонда`              .@@@@@

>>
end;
Screen ScrRaiseEdit04 (,,Sci178Esc);
Show at (,7,,7) Fixed_y;
<<
 Список полей для отображения в фонде
>>
end;//Screen ScrRaiseEdit04
Screen ScrRaiseEdit05 (,,Sci178Esc);
Show at (,8,10,) fixed_x ;
Buttons
  cmValue1,,,'Вверх',,;
  cmValue2,,,'Вниз' ,,;

<<


 <.Вверх.>

 <.Вниз .>
>>
end;

Browse brFields;
Show at (11,8,,) ;
Table GP_KPI_Fields;
Fields
 GP_KPI_Fields.NPP '№ п/п' :[3],NoProtect;
 GP_KPI_Fields.Name 'Наименование' :[30],NoProtect;
 GP_KPI_Alg_Fld.Name 'Алгоритм' (,,Sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields.Description 'Описание':[30],NoProtect;
 [CanEdit]  (GP_KPI_Fields.Option and 1)         'Редакт.'   :[10],[List 0 'Нет','Да'],Protect;
 [Itog]     ((GP_KPI_Fields.Option and 2) shr 1) 'результат' :[10],[List 0 'Нет','Да'],Protect;
 [Visib]    ((GP_KPI_Fields.Option and 4) shr 2) 'Скрыть'    :[10],[List 0 'Нет','Да'],Protect;
 [Agregate] ((GP_KPI_Fields.Option and 8) shr 3) 'Агрегат'   :[10],[List 0 'Нет','Да'],Protect;
 // здесь бы еще добавить по умолчанию
 GP_KPI_Fields.wTypeFld 'Тип поля' : [10]
   ,#GP_KPI_Fields_Type, Protect;
 [FldTypeName] GetFldTypeName() 'Тип ссылки' (,,sci1378Esc) :[20],Protect,PickButton;
 GP_KPI_Fields.Len  'Ширина' : [10],NoProtect;
 GP_KPI_Fields.Razr 'Дроб.часть' : [10],NoProtect;
 GP_KPI_Alg_Fld_Chk.Name 'Алг.контроля' ('возврат не пустого значения ошибка' ,,Sci1378Esc) :[20],Protect,PickButton;

end;//Browse brFields;
HandleEvent
    //----------------------
    cmValue1://'Вверх'
    { var _Npp:longint;
      if GP_KPI_Fields.Npp<=1
      { Message('Запись не может быть перемещена вверх');
        exit;
      }
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp-1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }
    }
    cmValue2://'Вниз'
    { var _Npp:longint;
      _Npp:=GP_KPI_Fields.Npp;
      set GP_KPI_Fields.Npp:=_Npp+1;
      SetModified(true);
      UpdateTable;
      if Getfirst GP_KPI_Fields_F=tsok
      { update current GP_KPI_Fields_F set GP_KPI_Fields_F.Npp:=_Npp;
      }

    }
end;
end;//Window wnEditFond

//****************************************************
Browse brGroupPers '' (,,sci1478Esc);
Table GP_KPI_Fond;
recMarker=pMarker;
Fields
  GP_KPI_Fond.Code        'Код' :[20],Protect,NoPickButton,NoDel;
  GP_KPI_Fond.Name        'Наименование' :[40],Protect,NoPickButton,NoDel;
  GP_KPI_GroupPers.Name   'Группа персонала':[20],Protect,NoPickButton,NoDel;
  GP_KPI_Fond.Description 'Описание'     :[40],NoProtect,NoPickButton,NoDel;
end;//Browse brGroupPers



//******************************************************************************
// HandleEvent таблиц
//******************************************************************************
TableEvent table GP_KPI_Fond ;
cmSetDefault:
{ ClearBuffer(#GP_KPI_Fond);
  PutCommand(cmEdit);
}
cmInsertRecord:
{ Insert Current GP_KPI_Fond;
}
cmUpdateRecord:
{ Update Current GP_KPI_Fond;
}
cmDeleteRecord:
{ if message('Удалить запись?',YesNo)<>cmYes
  { abort; exit;
  }
  delete GP_KPI_Fields_F where  ((  1                == GP_KPI_Fields_F.wType
        and GP_KPI_Fond.Nrec == GP_KPI_Fields_F.cDoc    ));

  delete Current GP_KPI_Fond;
}
end;

//------------------------------
TableEvent table GP_KPI_Fields;
cmSetDefault:
{ if not isvalid(#GP_KPI_Fond) then Abort;
  if isFilterRun abort;
  ClearBuffer(#GP_KPI_Fields);
  if (getlast GP_KPI_Fields_F where
     ((  1                == GP_KPI_Fields_F.wType
    and GP_KPI_Fond.Nrec == GP_KPI_Fields_F.cDoc
    )) Ordered by index GP_KPI_Fields02) = tsok
  { GP_KPI_Fields.Npp:=GP_KPI_Fields_F.Npp+1;
  }
  else
  { GP_KPI_Fields.Npp:=1;
  }
  GP_KPI_Fields.wType:=1;
  GP_KPI_Fields.cDoc :=GP_KPI_Fond.Nrec;

}
cmInsertRecord:
{ Insert Current GP_KPI_Fields;
}
cmUpdateRecord:
{ Update Current GP_KPI_Fields;
}
cmDeleteRecord:
{ if message('Удаление может изменить существующие документы'
   +chr(13)+'Продолжить?',YesNo )=cmYes
  //здесь нужно добавить еще проверку
  { delete Current GP_KPI_Fields;
  }
}

end;


//******************************************************************************
// HandleEvent самого интерфейса
//******************************************************************************
  HandleEvent
    //-------------------------------
    cmInit:
    { isFilterRun:=True;
      LoadVipRef(DataProtector, 'GP_Protector');
      DataProtector.LinkToExt(cfsGetCurrentContainerSelf, '', true);
      DataProtector.ProtectedStatusCtx := sci1Esc;
      DataProtector.AutoPalette := true;
      if (wIntMode and cgiPickMult)=cgiPickMult
      { DataProtector.ProtectedStatusCtx := sci1EscIns;
        pMarker.AutoSave := True;
        pMarker.LoadAuto := True;
        pMarker.StoreName := 'GP_KPI_FondEdit';
        pMarker.Caption   := (' Отмечено [%d] ');
      }
      else  pMarker.Disable:=true;

      //===========================
      RoleGroupName:='Мотивация персонала';

      UserAccessService:=New(GP_UserAccessService,InitForRoleGroup(RoleGroupName));
      if (UserAccessService=NullRef) {
        abort;
        exit;
      }

      if (not UserAccessService.IsAdmin)
      { if wIntMode=0
        { message('Вы не обладаете ролью Администратор.'#13'Редактирование запрещено.');
        }
        wIntMode:=wIntMode or cgiNotEdit
      }
      if cRec=0
      { if ReadMyDsk(cRec,'GP_KPI_FondEdit_crec',false) cRec:=0;
      }
      if cREc>0
      { if getfirst GP_KPI_Fond where (( cRec == GP_KPI_Fond.Nrec )) =tsok {}
      }

      if wIntMode<>0
      { SetEditMode(false)
      }
      else
      { SetEditMode(True)
      }
      isFilterRun:=False;
    }
    //-------------------------------
    cmDefault:
    { if (wIntMode and cgiPick)>0
      {
        if (wIntMode and cgiPickMult)=cgiPickMult
        { if PMarker.Count=0
          { pMarker.Mark;
          }
          pMarker.ExportToName(pMarker.StoreName);
        }
        else
        { set cRec:=GP_KPI_Fond.Nrec;
        }

        CloseInterface(cmDefault)
      }
      else
      if (wIntMode=0 or wIntMode=cgiNotEdit)
       PutCommand(cmEdit);
    }
    //-------------------------------
    cmDone:
    {
      //-------------------------
      SaveMyDsk(GP_KPI_Fond.Nrec,'GP_KPI_FondEdit_crec');
      //-------------------------
      if DataProtector<>NullRef
      { FreeVipInterface(DataProtector);

      }
    }
    cmEdit:
    { RunWindowModal(wnEditFond);
    }
    cmOpenSearch :
    {
      isOpenSearch:= true;
      ProcessCommand(cmPick);
      isOpenSearch:= false;
    }
    //----------------------
    cmCheckField:
    { case CurField of
      #CanEdit: // (GP_KPI_Fields.Option and 1) 'Редакт.'  :[3],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,1);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,1);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Itog   : //    (GP_KPI_Fields.Option and 2) div 2 'результат':[5],[List 0 'Нет','Да'],Protect;
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { var isNeed:boolean=true;
          if getfirst GP_KPI_Fields_F where ((
                        GP_KPI_Fields.wType   == GP_KPI_Fields_F.wType
                    and GP_KPI_Fields.cDoc == GP_KPI_Fields_F.cDoc
                    and ( IsBitCTW(GP_KPI_Fields_F.Option,2)
                      and GP_KPI_Fields.Nrec<>GP_KPI_Fields_F.Nrec
                        )
           ))=tsok
          { if message('Уже есть запись с признаком "Итог"'
             +chr(13)+'поле:'+string(GP_KPI_Fields_F.Npp)+' ,'+GP_KPI_Fields_F.Name
             +chr(13)+'Установить для текущего поля?' , YesNo)=cmYes
            { BitOffW(GP_KPI_Fields.Option,2);
              update current GP_KPI_Fields_F;

            }
            else isNeed:=false;

          }
          if isNeed BitOnW(GP_KPI_Fields.Option,2);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,2);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;

      }
      #Visib   : // [Visib]   ((GP_KPI_Fields.Option and 4) shr 2)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,3);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,3);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #Agregate   : // ((GP_KPI_Fields.Option and 8) shr 3)
      { var ww_str:string=GetViewerData();
        if ww_str='Да'
        { BitOnW(GP_KPI_Fields.Option,4);
        }
        else
        { BitOffW(GP_KPI_Fields.Option,4);
        }
        set GP_KPI_Fields.Option:=GP_KPI_Fields.Option;
      }
      #GP_KPI_Fields.Npp:
      { if GP_KPI_Fields.Npp=0
        { Message('Номер поля 0 не допустим!');
          set GP_KPI_Fields.Npp:=Word(OldFieldValue);
        }
        if GP_KPI_Doc_Max_FLD_SP<GP_KPI_Fields.Npp
        { Message('Номер поля больше '+string(GP_KPI_Doc_Max_FLD_SP)+' не допустим!');
          set GP_KPI_Fields.Npp:=Word(OldFieldValue);
        }

      }
      end;
      //принудительно вызовем вставку
      Case CurTable of
      #GP_KPI_Fond:
      { SetModified(True);
        UpdateTable;

      }
      end;
    }
    cmPick:
    { case CurField of
      #GP_KPI_GroupPers.Name,#GP_KPI_GroupPers.Code:
      {
        var cTmp: comp;
        cTmp:=GP_KPI_FOND.cGroupPers;
        if RunInterface('GP_KPI_GroupPersEdit', cgiPick, cTmp)<>cmCancel //
        { set GP_KPI_FOND.cGroupPers:=cTmp;
          SetModified(true);
        }
      }
      /*
      #CatRaise.Name,#CatRaise.Code:
      { var cTmp: comp;
        cTmp:=GP_KPI_FOND.cKPI_RAISE;
        if ( RunInterface('PickCatalog2', integer(-17), cTmp, 0) <> cmCancel )
        { set GP_KPI_FOND.cKPI_RAISE:=cTmp;
        }

      }
      */
      #GP_KPI_RAISE.Name,#GP_KPI_RAISE.Code:
      { var cTmp: comp;
        cTmp:=GP_KPI_FOND.cKPI_RAISE;
        if RunInterface(GP_KPI_RaiseEdit,cgiPick,cTmp,0)<>cmCancel
        { set GP_KPI_FOND.cKPI_RAISE:=cTmp;
        }
      }
      #GP_KPI_Alg_Fld.Name:// 'Алгоритм' :[20],NoProtect;
      {
        pTmp:=GP_KPI_Fields.cGP_KPI_Alg;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Fields.cGP_KPI_Alg := pTmp;
          UpdateTable;
        }
      }
      #GP_KPI_Alg_Fld_Chk.Name:// 'Алгоритм' :[20],NoProtect;
      {
        pTmp:=GP_KPI_Fields.cGP_KPI_Alg_Chk;
        if (RunInterface(GP_KPI_AlgPickAndEdit,1,cgiPick,pTmp,0)<> cmCancel)
        { set GP_KPI_Fields.cGP_KPI_Alg_Chk := pTmp;
        }
      }
      #FldTypeName:// 'Тип ссылки' (,,sci1378Esc) :[10],Protect,PickButton;
      {  case GP_KPI_Fields.wTypeFld  of //'Тип поля' : [5]
         //  0 'строка'
         //       ,1 'число'
         //       ,2 'дата'
         //       ,3 'время'
         4,7:// 'аналитика'
         { //Result:=if(isValid(#KatKau),KatKau.Name,'')
           //var _rType:word; _rType:=0;
           //var _coTable:word; _coTable:=0;
           var _rObject:word; _rObject:= GP_KPI_Fields.KodGroup;
           //if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           if RunInterface(GetKauTable,cgiPick,(4 or 8 or 16 or 32),_rObject,0) <> cmCancel
           { set GP_KPI_Fields.KodGroup:=_rObject;
             SetModified(true);
           }

         }
         5:// 'кадр.справочники'
         { var _CurCat:comp; _CurCat:=0;
           if isValid(#CatSys) _CurCat:=CatSys.Nrec;
           if RunInterface(PickCatalog2, Integer(-1), _CurCat, Comp(0))<>cmCancel
           { if getfirst CatSys where (( _CurCat == CatSys.Nrec )) =tsok
             { var _SysCode:Longint;
               _SysCode:=CatSys.SysCode;
               if _SysCode=0
               { message('Допустимы к выбору только системные записи');
               }
               else
               { set GP_KPI_Fields.KodGroup:=_SysCode;
                 SetModified(true);
               }
             }
           }

         }
         6:// 'таблицв'
         { var _rType:word; _rType:=cgKatKau_System;
           var _coTable:word; _coTable:= GP_KPI_Fields.KodGroup;
           var _rObject:word; _rObject:= GP_KPI_Fields.KodGroup;
           if (RunInterface(GetAttrTable,_rType,_rObject,_coTable) = cmDefault)
           { set GP_KPI_Fields.KodGroup:=_coTable;//_rObject;
             SetModified(true)
           }
         }
         end;
      }
      end;
    }
    cmValue3: //Копирование записи
    { if isProtect
      { Message('В этом режиме копирование запрещено');
        Exit

      }
      if Message('Скопировать запись?'
        +chr(13)+GP_KPI_Fond.Name
        ,YesNo )<>cmYes
      { Exit;

      }
      if getfirst GP_KPI_Fond_F where (( GP_KPI_Fond.Nrec == GP_KPI_Fond_F.Nrec ))<>tsok
      { Message('Ошибка поиска записи для копирования');
        Exit;

      }
      GP_KPI_Fond_F.Nrec:=0;
      //GP_KPI_Fond_F.Dbegin:=date(1,MonthRas,YearRas);
      GP_KPI_Fond_F.Name:=GP_KPI_Fond_F.Name+'(копия)';
      if Insert Current GP_KPI_Fond_F<>tsok
      { Message('Ошибка создания копии записи!');
        Exit;
      }
      External _Loop GP_KPI_Fields
      { GP_KPI_Fields.Nrec:=0;
        GP_KPI_Fields.cDoc:=GP_KPI_Fond_F.Nrec;
        Insert Current GP_KPI_Fields;
      }
      if getfirst GP_KPI_Fond where (( GP_KPI_Fond_f.Nrec == GP_KPI_Fond.Nrec ))<>tsok
      ReScanPanel(#GP_KPI_Fond)
    }
    //--------------------------
    cmPickClass:// внешние классификаторы
    {
      if UpdateTable
      case CurTable of
      #GP_KPI_Fond: RunInterface('ExClassifier', coGP_KPI_Fond, GP_KPI_Fond.nRec);
      end;
    }
    //--------------------------
    cmFilterSave:
    { UpdateTable;
      /*
      if RunWindowModal(wnFilter)=cmDefault
      { SetFilterBounds(0);
      }
      else RestFromA
      */
    }


    //--------------------------
    cmPickAttr:// внешние аттрибуты
    {
      if UpdateTable
      case CurTable of
      #GP_KPI_Fond: RunInterface('Attribute', coGP_KPI_Fond, GP_KPI_Fond.nRec);
      end;
    }
    //--------------------------
    cmHotKeys:
    {
      case CurTable of
      #GP_KPI_Fond:
      { ProcessCommand(RunMenu('GP_KPI_FondEdit_Main_HotKey'));
      }
      end;
    }
  end;
end.

GP_KPI_FondEdit_Main_HotKey Menu
{
- 'Копирование записи', cmValue3, 'Копирование записи',  ,'',,sci1Esc;
 -----------;
//- 'Фильтр на данные'     , cmFilterSave, 'Фильтр на данные', hcProc_NagrKaf, 'Alt+B',kbAltB, scMenuCtx;
- 'Внешняя классификация', cmPickClass, 'Внешняя классификация', hcGkatalM1ExtClass, 'Alt+C', kbAltC, sci1Esc;
- 'Внешние атрибуты'     , cmPickAttr , 'Заполнение внешних атрибутов по данной позиции', hcGkatalM1Attr, 'Alt+A', kbAltA, sci1Esc;

}
