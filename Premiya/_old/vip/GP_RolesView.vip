/*************************************************************************************************\
* Наименование: Роли пользователей                                                                *
* Контур/Модуль: *                                                                                *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер задачи  |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#195          |23/08/17|Кузьмин П.Ю.             |НПО Энергомаш                    *
\*************************************************************************************************/

#include GetUserByIDPick.vih

#include GP_UserAccessService.vih

#include GP_RolesView.vih
interface GP_RolesView 'Роли пользователей', Cyan;
show(20,5,140,35);

var cCurRoleGroup:comp;
    UserAccessService:GP_UserAccessService NoAuto;

create view
from
  GP_Roles,GP_UserRoles,X$Users,
  GP_UserRoles GP_UserRoles2,Pick
where((
  cCurRoleGroup==GP_Roles.cRoleGroup and
  GP_Roles.NRec==GP_UserRoles.cRole and
  GP_UserRoles.cUser==X$Users.ATL_NREC
));

browse brRoles (,,sci14Esc);
show(,,,15);
table GP_Roles;
fields
  {font={Bold=GP_Roles.IsAdmin}};
  GP_Roles.Name 'Наименование роли' ('Наименование роли',,):[50],Protect;
  if(GP_Roles.IsAdmin,'Да','Нет') 'Адм.' ('Роль администратора',,):[5],Protect,NoAutoSize;
end;

browse brUsers (,,sci14Esc);
show(,16,,);
table GP_UserRoles;
fields
  X$Users.XU$FULLNAME 'Имя пользователя' ('Имя пользователя',,):[60],Protect,NoDel;
  X$Users.XU$LOGINNAME 'Идентификатор пользователя' ('Идентификатор пользователя',,):[35],Protect,NoDel;
  sGetTuneEx('USER.DESCR',UserOfficeFilial(GP_UserRoles.cUser),GP_UserRoles.cUser)
    'Дескриптор' ('Дескриптор'):[12], Protect,NoAutoSize;
  sGetTuneEx('USER.DESGR',UserOfficeFilial(GP_UserRoles.cUser),GP_UserRoles.cUser)
    'Гр.Дескр' ('Группа дескрипторов'):[10], Protect,NoAutoSize;
end;

window WinEdit 'Редактирование ролей пользователей' Blue;
show(20,5,140,35);

browse brEditRoles (,,sci178Esc);
show(,,,15);
table GP_Roles;
fields
  {font={Bold=GP_Roles.IsAdmin}};
  GP_Roles.Name 'Наименование роли' ('Наименование роли',,):[50],NoProtect,
    {font={BackColor=if(GP_Roles.Name='',ColorNeed,0)}};
  if(GP_Roles.IsAdmin,'Да','Нет') 'Адм.' ('Роль администратора',,):[5],Protect,NoAutoSize;
end;

browse brEditUsers (,,sci178Esc);
show(,16,,);
table GP_UserRoles;
fields
  X$Users.XU$FULLNAME 'Имя пользователя' ('Имя пользователя',,):[60],Protect,NoDel;
  X$Users.XU$LOGINNAME 'Идентификатор пользователя' ('Идентификатор пользователя',,):[35],Protect,NoDel;
  sGetTuneEx('USER.DESCR',UserOfficeFilial(GP_UserRoles.cUser),GP_UserRoles.cUser)
    'Дескриптор' ('Дескриптор'):[12], Protect,NoAutoSize;
  sGetTuneEx('USER.DESGR',UserOfficeFilial(GP_UserRoles.cUser),GP_UserRoles.cUser)
    'Гр.Дескр' ('Группа дескрипторов'):[10], Protect,NoAutoSize;
end;

TableEvent table GP_Roles;
cmSetDefault:{
  SelectField(#GP_Roles.Name);
}
cmCheckField:{
  case CurField of
    #GP_Roles.Name:{
      if (Trim(GP_Roles.Name)='') {
        message('Пожалуйста, укажите наименование роли или удалите запись.',error);
        abort;
      }
    }
  end;
}
cmInsertRecord:{
  insert current GP_Roles;
}
cmUpdateRecord:{
  update current GP_Roles;
}
cmDeleteRecord:{
  if (GP_Roles.IsAdmin) {
    message('Нельзя удалить роль Администратор.');
    abort;
    exit;
  }

  if (delete GP_UserRoles where((GP_Roles.NRec==GP_UserRoles.cRole))=tsok)
    delete current GP_Roles;
}
end;

TableEvent table GP_UserRoles;
cmDeleteRecord:{
  if (GP_Roles.IsAdmin and GP_UserRoles.cUser=UserID) {
    message('Нельзя вывести себя из роли Администратор.');
    abort;
    exit;
  }

  delete current GP_UserRoles;
}
end;

HandleEvent
cmInsert:{
  if (CurTable<>tnGP_UserRoles) exit;
  if (not IsValidAll(tnGP_Roles)) exit;

  delete Pick where((1001==Pick.wList));
  if (RunInterface(GetUserByIDPick,0,1001)=cmDefault) {
    _loop Pick where((1001==Pick.wList and Pick.cRec==GP_UserRoles2.cUser and GP_Roles.NRec==GP_UserRoles2.cRole)) {
      if (IsValidAll(tnGP_UserRoles2)) continue;

      ClearBuffer(tnGP_UserRoles);
      GP_UserRoles.cRoleGroup:=cCurRoleGroup;
      GP_UserRoles.cRole:=GP_Roles.NRec;
      GP_UserRoles.cUser:=Pick.cRec;
      if (insert current GP_UserRoles <> tsok) {
        message('Ошибка вставки записи в таблицу GP_UserRoles!',error);
        break;
      }
    }
    ReReadRecord(tnGP_UserRoles);
  }
  stop;
}
cmDone:{
  if (not UpDateTable) abort;
}
end;
end;//WinEdit

HandleEvent
cmEdit:{
  RunWindow(WinEdit);
}
cmHotKeys:{
  if (brUsers=GetCurrentFormat)
    PutContextMenuCommand('GP_RolesView_HotKeys');
}
cmValue1:{//Перейти к пользователю
  if (IsValidAll(tnGP_UserRoles))
    GoToUser(GP_UserRoles.cUser);
}
end;

constructor Init;
{
  result:=false;
}

constructor InitForRoleGroup(cRoleGroup:comp);
{
  cCurRoleGroup:=cRoleGroup;
  result:=cCurRoleGroup<>0;
}

procedure SelectRole(cRole:comp);
{
  if (getfirst GP_Roles where((cRole==GP_Roles.NRec))=tsok)
    ReReadRecord(tnGP_Roles);
}

procedure ShowWinEdit(cRole:comp);
{
  if (cRole<>0) SelectRole(cRole);
  RunWindowModal(WinEdit);
}

end.

GP_RolesView_HotKeys Menu
{
- '~П~ерейти к пользователю', cmValue1, 'Перейти в представление по пользователям', , , , sci1Esc,,;
}
