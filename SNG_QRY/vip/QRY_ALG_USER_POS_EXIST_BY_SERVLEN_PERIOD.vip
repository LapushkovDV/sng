
/*************************************************************************************************\
* Наименование: Возвращает признак наличия вида стажа по Servlen.nRec+Position+SubPos                              *
* Контур/Модуль: Абстрактный конструктор JSON                                                     *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *

\*************************************************************************************************/

#include QRY_ALG_USER.vih
#include QRY_Base.vih
//************************************************************

vipinterface QRY_ALG_USER_POS_EXIST_BY_SERVLEN_PERIOD implements IQRY_ALG_USER
  Licensed(free);

Interface QRY_ALG_USER_POS_EXIST_BY_SERVLEN_PERIOD;

create view
  var
    cNrec: comp;
    sPosCode, sSubPosCode: string;
  as select
    Servlen.nRec
  from
    Servlen,
    Catalogs
;

const
  coSep: string = '|';
  coSysCodeStajTypes: integer = -19; //системный код справочника "Виды стажа"
  coAbapFalse: string = '';
  coAbapTrue: string = 'X';
end;

function ParseParameter(_Parameter:string):boolean;
{
  Result := False;

  if Length(_Parameter) = 0
    exit;

  cNrec := comp(ParseWord(_Parameter, 1, coSep));
  sPosCode := ParseWord(_Parameter, 2, coSep);
  sSubPosCode := if(sPosCode = '10', ParseWord(_Parameter, 3, coSep), '');

  Result := True;
}

#doc
  Запустить расчет с параметрами
  _Parameter  = Persons.nRec+'|'+sPosCode+'|'+sSubPosCode
#end
Function Calc(_Parameter:string):string;
var
  cPerson, cParent, cPosition, cFeature: comp;
  dFrom, dTo: date;
{

  Result := 'N/A';

  if ParseParameter(_Parameter) = False
    exit;

  if GetFirst fastfirstrow Servlen where ((cNrec == Servlen.nRec)) <> tsOk
    exit;
  cPerson := Servlen.Person;
  dFrom := Servlen.FromDate;
  dTo := Servlen.ToDate;

  if GetFirst fastfirstrow Catalogs where ((coSysCodeStajTypes == Catalogs.SysCode)) <> tsOk
    exit;
  cParent := Catalogs.nRec;

  if GetFirst fastfirstrow Catalogs where ((cParent == Catalogs.cParent
                                       and sPosCode == Catalogs.Code)) <> tsOk
    exit;
  cPosition := Catalogs.nRec;

  if sSubPosCode <> ''
  {
    if GetFirst fastfirstrow Catalogs where ((cPosition == Catalogs.cParent
                                        and sSubPosCode == Catalogs.Code)) <> tsOk
      exit;
    cFeature := Catalogs.nRec;
  }
  else
    cFeature := comp(0);

  Result := coAbapFalse;

  if GetFirst fastfirstrow Servlen where ((cPerson == Servlen.Person
                                     and cPosition == Servlen.Position
                                      and cFeature == Servlen.Feature
                                         and dFrom == Servlen.FromDate(noindex)
                                           and dTo == Servlen.ToDate(noindex) )) = tsOk
    Result := coAbapTrue;
}

#doc
Наименование интерфейса
#end
function GetDescription : string;
{
  Result:='Возвращает признак наличия вида стажа по Servlen.nRec+Position+SubPos';
}
end.
