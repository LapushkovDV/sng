/*************************************************************************************************\
  Наименование:
  Контур/Модуль:
  Примечание:
  Вид работы  |Номер           |Дата    |Исполнитель              |Проект
  -----------------------------------------------------------------------------------------------
\*************************************************************************************************/
/*


*/
#include TMnPlan.vih
#include Algor.vih
#include StatLog.vih
#include FILESREF_File_hRef.Vih
#component "M_MnPlan"


//#include SaldoFuncs.vih

//***********************************
VipInterface Algoritm_File_hRef Implements oAlgoritm_Sys;
//***********************************
#doc
Алгоритм для прикрепления файлов
#end
Interface Algoritm_File_hRef;
//***********************************
Var
 _TypeCpNrec : word;
 _cpNrec     : comp;
Create view
Var
 nrecFormPl    : Comp;//Настройка алгоритма

As Select
 FormPl.nrec
From
   FormPl
Where
((
       nrecFormPl == FormPl.NRec
))
;
//-------------------------
//Номер системного алгоритма
Function GetNum: Word;
{ Result := 6100;
} //Function GetNum: Word;


//-------------------------
Function GetName: String;
{ Result := 'Прикрепление файлов';
}; //Function GetName: String;


//-------------------------
Function GetMemo(st: oSteckCommonString): Boolean;
{ Result := True;
  st.Push(GetName);
  st.Push('   Прикрепление файлов к документам');
  st.Push('   Используется FILESREF_File_hRef и WEB API по хранению файлов');
  st.Push('   Выдаются временные ссылки на файлы');
  st.Push('   Адрес API задается в настройке ' + gettunename('FILESREF.HREF_PATHAPI'));
}; //Function GetMemo(st: oSteckCommonString): Boolean;


//-------------------------
Function GetNameInter: String;
{ Result := 'Algoritm_File_hRef';
} //Function GetNameInter: String;


//-------------------------
Function GetNameInterPr: String;
{ Result := 'Algoritm_File_hRef_Setup';
} //Function GetNameInterPr: String;


//-------------------------
Function InitInter(Var pt: TRecAcc): Boolean;
{ #__UNUSED__(pt)
  Result := True;
} //Function InitInter(Var pt: TRecAcc): Boolean;

Function getwtablebyTypeCpNrec(_typeCpNrec : word) : word;
{
  message('getwtablebyTypeCpNrec _typeCpNrec = ' + _typeCpNrec);
  result := _typeCpNrec;
  case _typeCpNrec of
    1101 // До снабжение
  , 1201 // ДО сбыт
  , 1501 //  ДО/ЛЗК на отпуск в производство
      :{
        result := 1102; // basedoc
      }
    2101 // Приходная накладная
  , 2111 // Акт на прием услуг
  , 2201 // Накладная на отпуск
  , 2211 // Акт на оказание услуг
  , 2106 // Накладная на возврат товаров по рекламации в продаже
  , 2626 // Акт на возврат оборудования и материалов
  , 2501 // Накладная на отпуск в производство /склад-подразделение/
  , 2502 // Накладная на приход готовой продукции из производства /подразделение-склад/
  , 2503 // Накладная на возврат сырья из производства /подразделение-склад/
  , 2504 // Акт на списание МЦ из производства /подразделение-.../
  , 2505 // Межцеховая накладная (полуфабрикат) /подразделение-подразделение/
  , 2506 // Накладная на внутреннее перемещение в производстве (МЦ) /подразделение-подразделение/
  , 2507 // Акт на брак
  , 2508 // Акт на оказание услуг
  , 2600 // Накладная на внутреннее перемещение - склад
  , 2630 // Акт пересортицы - склад
  , 2532 // Накладная на расход сырья /по накладной на приход готовой продукции из производства /
      :{
         result := 1109; // katsopr
      }
    74 // СФ сбыт
  , 75 // СФ поставщика
      : {
         result := 3500; // 3500 SCHFACT
      }
    7 // договор
      :{
       result := 1707;
      }
    2 // Ссылка на ObjAcct
     :{
       result := 11016;
      }
    3 // Ссылка на SpObjAcc
     :{
       result := 11033;
      }
    4 // Ссылка на ObjParam
     :{
       result := 11226;
      }
    5 // Ссылка на SpObjPar
     :{
       result := 11227;
      }
    6 // Ссылка на Indent
     :{
       result := 31011;
      }
    8 // Ссылка на CalPlan
     :{
       result := 1702;
      }
    9 // Ссылка на OperPlan
     :{
       result := 11096;
      }
    10 // Ссылка на SklOrder
     :{
       result := 1111;
      }
    11 // Ссылка на RsvOper
     :{
       result := 11103;
      }
    3101 // на всякий
   ,3111 // Сводный сопроводительный документ снабжение
   ,3201 //сводная накладная
   ,3211 // Сводный сопроводительный документ сбыт
     :{
       result := 1137 // сводный сопроводительный документ, но на него не прикручечны доп функции локального меню... ждлемс
     }
    end;
}


//Запуск алгоритма
Function RunInter(wflag: Word; Var pt: TRecAcc): Boolean;
//var isAllOk:boolean;
{ #__UNUSED__(wflag,pt)

  Result  := false;

  set nrecFormPl := pt.cFormPl;
  if getfirst FormPl <> tsOK
   {
         message('Не найдена настройка алгоритма ' + string(nrecFormPl,0,0), error);
         pt.Binding:=8;
     exit;
   }
  _TypeCpNrec := pt.TypeCpNrec;
  _cpNrec     := pt.cpNrec;
   var pFILESREF_File_hRef : FILESREF_File_hRefi;

      pFILESREF_File_hRef.InitParam(
        getwtablebyTypeCpNrec(_TypeCpNrec) //_wTable    : word; указать код таблицы документа системы
      , _cpNrec //_cRec      : comp=0;   // указать поле в таблице
       );
       pFILESREF_File_hRef.ShowWindowFile;
} //Function RunInter(wflag: Word; Var pt: TRecAcc): Boolean;

End.
