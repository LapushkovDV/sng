в PGSQL создать БД, например, filestorage выполнить
CREATE TABLE IF NOT EXISTS files (guid uuid PRIMARY KEY,
                                    name varchar (150) NOT NULL,
                                    extension varchar (10) NOT NULL,
                                    description text,
                                    date_added date DEFAULT CURRENT_TIMESTAMP);

далее

pip install virtualenv
выполняем в папке , где будет сервис:

$ mkdir fileservice-api

$ cd fileservice-api
$ virtualenv flask
$ flask/bin/pip install flask
$ flask/bin/pip install psycopg2-binary
$ flask/bin/pip install waitress
$ flask/bin/pip install cryptography


положить в fileservice-api содержимое архива

сгенерировать ключ криптографии:
$ chmod a+x create-key.py
$ ./create-key.py
в результате в этой папке появится файл crypto.key
поместить в папку, куда доступ будет иметь ограниченный круг лиц. ВНИМАНИЕ! без данного ключа расшифровка файлов будет невозможна!!

прописать в app.py параметры:
cryptokeypath = '/home/sngadmin/fileservice-api/crypto.key' - полный путь где лежит сгенерированный ключ
dirpath = '/opt/files/' - где будут файлы храниться
dirpathtmp = '/opt/files/tmp/' - где будут временные фалйы
httpfileserver = 'localhost:8081' - вместо localhost адрес сервака
pg_server = "localhost" - адрес сервера СУБД
pg_user = "postgres" - юзер PGSQL
pg_password = "Zraeqw123" - пароль юзера PGSQL
pg_database = "filestorage" - имя БД

при необходимости поменять порты на нужные в строках
httpfileserver = 'localhost:8081' 
serve(app, host="0.0.0.0", port=8081)



выполнить
$ chmod a+x app.py
запустить для теста
$ ./app.py
проверить ,что работает зайти на localhost:8081 - будет приветственная страница
$ ctrl+C

далее изменяем файл fileservice_galaktika.service

меняем строки:
	на пользователя под которым будет выполняться сервис
	User=sngadmin 
	
	меняем пути на актуальные
	ExecStart=/home/sngadmin/fileservice-api/flask/bin/python3 /home/sngadmin/fileservice-api/app.py

копируем измененный fileservice_galaktika.service в /etc/systemd/system/

далее 
# sudo systemctl daemon-reload
# sudo systemctl start fileservice_galaktika
# sudo systemctl status fileservice_galaktika

если статус active(running), то делаем автозапуск сервиса:
# sudo systemctl enable fileservice_galaktika






