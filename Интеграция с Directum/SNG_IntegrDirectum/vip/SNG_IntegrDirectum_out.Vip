//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - Управление персоналом
// CreatePersonnelOrder
//------------------------------------------------------------------------------
//#ifdef Atl60
// 844424930131983
//#include SNG_IntegrDirectum_out.Vih
#include NumberOfAddAgreement.vih
#include adrfunc.vih
#include PsnFuncs.vih
#include SNG_IntegrDirectum_out_base.Vih
#include SNG_IntegrDirectum_out.Vih
#component "API_DIRECTUM"

const
  co_unknown_value = '--не указано как заполнять--';
  co_formatdatetostr = 'DD/MM/YYYY'; // никто не сказал в каком виде передавать...
end;

interface SNG_IntegrDirectum_out 'Интеграция с Directum по API' (,,), EscClose, gray;
  show at (,, 90, 13);
var todestroyJSON_obj: array[0..0] of TPTR;
Create view
var
   _isDebug : boolean = false;
    API_url
  , API_Username
  , API_Password : string;

   API_methodFromTune : string;
   API_method : byte;
  BodyMess   : string;
  _MainCrec : comp;
  _addrfunc: AddressFunc;
  _PersFunc : PersonsFunctions;
  _mylog : string;
  _sfileout : string;
as select
 catalogs.nrec
from
    catalogs
  , catalogs catalogs_2
  , catalogs catalogs_api
  , Catalogs cat_search
  , catalogs Catalogs_podr
  , Persons
  , Appointments
  , contdoc
  , PartDoc
  , Titledoc
  , TYPEPR
  , TYPEPR TYPEPR_api
  , staffStruct
  , SpAllStaff SpAllStaff_TD
  , SpAllStaff SpAllStaff_16
  , SpAllStaff SpAllStaff_pers
  , SpAllStaff SpAllStaff_6
  , SpAllStaff SpAllStaff_aggreement
  , PutVacCon
  , KlOtpusk
  , PutVacation
  , WorkPeriod
  , APPHIST
  , TarStav
  , katorg
  , passports
  , addressn
  , klkatego
  , klsovm
  , externalasm
  , raise
;

procedure mylog(_str : string);
 {
   if _isDebug = False then exit;
   if _mylog = '' then  {
     _sfileout := AddSlashToPath(GetStringParameter('Files','OutputFilesDirectory',0))+ 'SNG_APIDIRECTUMOUT_LOG_'+DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS');
     _mylog := _sfileout+'.log';
     }
   logstrtofile(_mylog,DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS') + '|'+_str );
 }



function getpodrunder_nrec(_code : string; _crec , _cParent: comp) : comp; {

  mylog(' getpodrunder_nrec   _code = '  + _code+'  _crec = '+_crec + '  _cParent = '+ _cParent);
  if getfirst fastfirstrow cat_search where ((_cParent == cat_search.nrec)) = tsOK
   {
    mylog(' getpodrunder_nrec   cat_search.code = ' + cat_search.code);
    if cat_search.code = _code {
        if getfirst fastfirstrow cat_search where ((_crec == cat_search.nrec)) = tsOK {
          result := cat_search.nrec;
          mylog(' getpodrunder_nrec   result = '  +result);
          exit;
        }
        else {
         result := 0h;
         mylog(' getpodrunder_nrec   result = '  +result);
         exit;

        }
      }
      else {
        result := getpodrunder_nrec(_code, cat_search.nrec, cat_search.cParent)
      }
   }
   else {
     result := 0h;
     mylog(' getpodrunder_nrec   result = '  +result);
     exit;
   }
}
function getpodrunder(_code : string; _crec , _cParent: comp) : string; {
  result := '';
  mylog(' getpodrunder   _code = ' +_code   +'  _crec = '  +_crec+ '  _cParent = ' +_cParent);
  var _crec : comp = getpodrunder_nrec(_code, _crec, _cParent);
  mylog(' getpodrunder   _crec = '  +_crec);
   if getfirst cat_search where (( _crec == cat_search.nrec)) = tsOK then result := cat_search.longname ;
   mylog(' getpodrunder   result = '  +result);
}


function getperson_passport_by_code(_cPers: comp; _code : string) : string; {
result := '';
 _loop Passports where ((_cPers == Passports.person))
    and Passports.filialno = 0  { // не является предыдущим доком
     if getfirst cat_search where ((Passports.DocName == cat_search.nRec)) = tsOK {
          if cat_search.code = _code then  {
            result := cat_search.name ;
            exit;
           }
        }
      }
}

function getsumraise(_cPers, _appoint: comp; _date : date): double; {
//надбавка RAISE.SUM при RAISE.FROMDATE<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= RAISE.TODATE"
  var _result : double = 0;
  _loop RAISE where ((_cPers == RAISE.PERSON
                and _appoint == RAISE.APPOINT
                  and _date >>= RAISE.FROMDATE )) {
         if RAISE.todate = to_date(0,0,0) or RAISE.todate >= _date {
           _result := _result + RAISE.sum;
         }
       }
 result := _result;
}

Procedure FillPersonnelOrder_API_header(_m_service: TPtr; _JSONObj : TPtr); {
/*
ВНИМАНИЕ!!
для использования функции разработчик обязан предварительно спозиционироваться на все таблицы используемые в процедуре

пока пусто.... нет фактуры..

но идея есть идея, и не икеа
*/
}

Function getpassport_string(_passRus,_cPers: comp) : string; {

  var _result : string = '';
      if getfirst Passports where ((_passRus == Passports.Nrec)) = tsOK
    // and Passports.filialno = 0 { // не является предыдущим доком    //закоментировала условие  //Шалухо АИ 06112023
     {  if getfirst cat_search where ((Passports.DocName == cat_search.nRec)) = tsOK {
          case cat_search.code of
           '21': _result := 'Паспорт гражданина РФ' // а я бы делал cat_search.name
           '10': _result := 'Паспорт иностранного гражданина' // а я бы делал cat_search.name
           '12': _result := 'Вид на жительство в РФ' // а я бы делал cat_search.name
          end;
        }
      }
      // как вариант основной документ не указан или не попадает под условия 21 10 12
      // потому поищем просто среди доков
#declare getperson_passport_by_code(code)
 _loop Passports where ((_cPers == Passports.person))
 // and Passports.filialno = 0  { // не является предыдущим доком   //закоментировала условие  //Шалухо АИ 06112023
      { if getfirst cat_search where ((Passports.DocName == cat_search.nRec)) = tsOK {
          if cat_search.code = #code then  {
            case cat_search.code of
             '21': _result := 'Паспорт гражданина РФ' // а я бы делал cat_search.name
             '10': _result := 'Паспорт иностранного гражданина' // а я бы делал cat_search.name
             '12': _result := 'Вид на жительство в РФ' // а я бы делал cat_search.name
            end;
            break;
           }
        }
      }
#end
      if _result = '' {
        #getperson_passport_by_code('21')
      }
      if _result = '' {
        #getperson_passport_by_code('10')
      }
      if _result = '' {
        #getperson_passport_by_code('12')
      }
  result := _result
}

#declare addArrayElementString(param)
/*
для использования переменные должны меть названия m_service JSONObj_Array
*/
  mylog(' addArrayElementString param = #param');
   var JSONObj_ArrayOneElement_#param : TPtr = HttpConnect_JsonObjectCreate(m_service);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj_ArrayOneElement_#param, 'Param', '#param');
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj_ArrayOneElement_#param, 'Value', _#param);
    HttpConnect_JsonArrayAddObject(m_service, JSONObj_Array, JSONObj_ArrayOneElement_#param);
//а нельзя уничтожать так сразу.. там походу в памяти все связи просто указываются и только в момент обращения считываются HttpConnect_JSONObjectDestroy(m_service, JSONObj_ArrayOneElement_#param);
#end

#declare addArrayElementlongstring(param,longstring)
/*
для использования переменные должны меть названия m_service JSONObj_Array
*/

  mylog(' addArrayElementlongstring param = #param');
   var JSONObj_ArrayOneElement_#param : TPtr = HttpConnect_JsonObjectCreate(m_service);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj_ArrayOneElement_#param, 'Param', '#param');
    HttpConnect_JsonObjectAddLongString(m_service, JSONObj_ArrayOneElement_#param, 'Value', #longstring);
    HttpConnect_JsonArrayAddObject(m_service, JSONObj_Array, JSONObj_ArrayOneElement_#param);
//а нельзя уничтожать так сразу.. там походу в памяти все связи просто указываются и только в момент обращения считываются     HttpConnect_JSONObjectDestroy(m_service, JSONObj_ArrayOneElement_#param);
// а нельзя уничтожать так сразу.. там походу в памяти все связи просто указываются и только в момент обращения считываются    HttpConnect_DestroyLongString(m_service,#longstring);
#end


#include CreateUpdateRPD_API.Vpp
#include CreateUpdateReasonForOrder_api.Vpp
#include CreateUpdateKindTD_API.Vpp
#include CreateUpdate_RPD1.Vpp
#include CreateUpdate_EmploymentContract.Vpp
#include CreateUpdate_RPD8.Vpp
#include CreateUpdate_RPD6.Vpp
#include CreateUpdate_RPD41.Vpp
#include CreateUpdateKindDC_API.Vpp
#include CreateAdditionalAgreement.Vpp
#include CreatePersonnelOrder_API.Vpp

Window winDEBUGAPIRESTDIRECTUM;
screen scrDEBUGAPIRESTDIRECTUM 'API DIRECTUM';
  show at(,,,);
fields
  Api_url      ('Адрес',,): Skip;
  API_Username ('Username',,): Skip;
!  API_Password ('Password',,): Skip;

  API_method       ('Метод',,): [LIST 0 'CreateUpdateKindDC'
                                    , 1 'CreatePersonnelOrder- TEST'
                                    , 2 'CreateUpdateKindTD'
                                    , 3 'CreateUpdateRPD'
                                    , 4 'CreateUpdateReasonForOrder'
                                    , 5 'CreateUpdate_RPD1'
                                    , 6 'CreateUpdate_RPD8'
                                    , 7 'CreateUpdate_RPD41'
                                    , 8 'CreateUpdate_EmploymentContract'
                                    , 9 'CreateAdditionalAgreement'
                                    , 10 'CreatePersonnelOrder_API'
                                ],protect;
  API_methodFromTune   ('Метод из настройки',,): Skip;
  _MainCrec  ('ссылка на экземпляр объекта - параметр для метода'): NoProtect;
buttons
  cmValue1;
<<
Данный интерфейс содержит все функции по интеграции с "Директумом".
Сейчас вы запустили его напрямую. это DEBUG-вариант: все запросы будут сопровождаться сообщениями
    и будут скачаны файлы ответом от API "Директума"

Из настроек системы:
  `URL API`     .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `API_Username`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!  `API_Password`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

`Выберите метод:` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `Метод из настройки системы` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

  `cREC`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   <.    Отправить    .>
>>
end; // screen scrGLX586REST
end;
windowevent  winDEBUGAPIRESTDIRECTUM;
cmValue1: {
      case API_method of
         0 : CreateUpdateKindDC_ALL
         1 : CreatePersonnelOrder_API_test
         2 : CreateUpdateKindTD_ALL
         3 : CreateUpdateRPD_ALL
         4 : CreateUpdateReasonForOrder_ALL
         5 : CreateUpdate_RPD1(_MainCrec)
         6 : CreateUpdate_RPD8(_MainCrec)
         7 : CreateUpdate_RPD41(_MainCrec)
         8 : CreateUpdate_EmploymentContract(_MainCrec)
         9 : CreateAdditionalAgreement(_MainCrec)
        10 : CreatePersonnelOrder_API(_MainCrec)
      end;
}
end;

Procedure setvisiblefields;
{
  var _isVisible: boolean = False;
       case API_method of
         0,1,2,3,4 : _isVisible := False;
         5,6,7,8,9,10 : _isVisible := true;
       end;
 cfssetprop('L_SCRDEBUGAPIRESTDIRECTUM_cREC','Visible', _isVisible) ;
 cfssetprop('i_SCRDEBUGAPIRESTDIRECTUM_MAINCREC','Visible', _isVisible)
}
HandleEvent

cmInit: {
//  gettunes;
  API_method := 0;
  API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateKindDC');
  setvisiblefields;
  if ( BodyMess = '' )
  {
    set BodyMess := '{"personnelOrder": {"Id":null,"DocumentKind":"PersOrder", "Author":"00220401", "Employees":["00220401","00076778"]}}';
  }
  _isDebug := true;
  _SNG_IntegrDirectum_out_base.set_debug_mode;
  runwindowmodal(winDEBUGAPIRESTDIRECTUM);
  closeinterface(-1);
}

cmCheckField: {
  case curfield of
   #API_method:
       case API_method of
         0 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateKindDC');
              }
         1 :  { API_methodFromTune := sgettune('DirectumIntegration_CreatePersonnelOrder');
              }
         2 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateKindTD');
              }
         3 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateRPD');
              }
         4 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateReasonForOrder');
              }
         5 :  { API_methodFromTune := sgettune('DirectumIntegration_RPD1');//CreateUpdate_RPD1
              }
         6 :  { API_methodFromTune := sgettune('DirectumIntegration_RPD8');//CreateUpdate_RPD8
              }
         7 :  { API_methodFromTune := sgettune('DirectumIntegration_RPD41');//CreateUpdate_RPD41
              }
         8 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateEmploymentContract');//CreateUpdate_RPD41
              }
         9 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateAdditionalAgreement');//CreateUpdate_RPD41
              }
        10 :  { API_methodFromTune := sgettune('DirectumIntegration_CreatePersonnelOrder');//CreateUpdate_RPD41
              }

       end;
   end;
   setvisiblefields;
   rereadrecord;
}
end; // HandleEvent
end.
