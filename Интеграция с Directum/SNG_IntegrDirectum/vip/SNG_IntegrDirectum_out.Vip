//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - Управление персоналом
// CreatePersonnelOrder
//------------------------------------------------------------------------------
//#ifdef Atl60
// 844424930131983
//#include SNG_IntegrDirectum_out.Vih
#include adrfunc.vih
#include SNG_IntegrDirectum_out_base.Vih
#include SNG_IntegrDirectum_out.Vih
#component "API_DIRECTUM"

const
  co_unknown_value = '--не указано как заполнять--';
end;

interface SNG_IntegrDirectum_out 'Интеграция с Directum по API' (,,), EscClose, gray;
  show at (,, 90, 13);
var todestroyJSON_obj: array[0..0] of TPTR;
Create view
var
   _isDebug : boolean = false;
    API_url
  , API_Username
  , API_Password : string;

   API_methodFromTune : string;
   API_method : byte;
  BodyMess   : string;
  _MainCrec : comp;
  _addrfunc: AddressFunc;
  _mylog : string;
  _sfileout : string;
as select
 catalogs.nrec
from
    catalogs
  , catalogs catalogs_2
  , catalogs catalogs_api
  , Catalogs cat_search
  , catalogs Catalogs_podr
  , Persons
  , Appointments
  , contdoc
  , PartDoc
  , Titledoc
  , TYPEPR
  , TYPEPR TYPEPR_api
  , staffStruct
  , SpAllStaff SpAllStaff_TD
  , SpAllStaff SpAllStaff_exp
  , PutVacCon
  , KlOtpusk
  , PutVacation
  , WorkPeriod
  , APPHIST
  , TarStav
  , katorg
  , passports
  , addressn
  , klkatego
  , klsovm
;

procedure mylog(_str : string);
 {
   if _isDebug = False then exit;
   if _mylog = '' then  {
     _sfileout := AddSlashToPath(GetStringParameter('Files','OutputFilesDirectory',0))+ 'SNG_APIDIRECTUMOUT_LOG_'+DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS');
     _mylog := _sfileout+'.log';
     }
   logstrtofile(_mylog,DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS') + '|'+_str );
 }


function getpodrunder_nrec(_code : string; _crec , _cParent: comp) : string; {

  if getfirst fastfirstrow cat_search where ((_cParent == cat_search.nrec)) = tsOK
   {
    if cat_search.code = _code {
        if getfirst fastfirstrow cat_search where ((_crec == cat_search.nrec)) = tsOK {
          result := cat_search.nrec;
          exit;
        }
        else {
         result := 0h;
         exit;

        }
      }
      else {
        result := getpodrunder_nrec(_code, cat_search.nrec, cat_search.cParent)
      }
   }
   else {
     result := 0h;
     exit;
   }
}
function getpodrunder(_code : string; _crec , _cParent: comp) : string; {
  result := '';
  var _crec : comp = getpodrunder_nrec(_code, cat_search.nrec, cat_search.cParent);
   if getfirst cat_search where (( _crec == cat_search.nrec)) = tsOK then result := cat_search.longname
}


function getperson_passport_by_code(_cPers: comp; _code : string) : string; {
result := '';
 _loop Passports where ((_cPers == Passports.person))
    and Passports.filialno = 0  { // не является предыдущим доком
     if getfirst cat_search where ((Passports.DocName == cat_search.nRec)) = tsOK {
          if cat_search.code = _code then  {
            result := cat_search.name ;
            exit;
           }
        }
      }
}
#include SNG_IntegrDirectum_out_CreatePersonnelOrder_API.Vpp
#include SNG_IntegrDirectum_out_CreateUpdateRPD_API.Vpp
#include SNG_IntegrDirectum_out_CreateUpdateReasonForOrder_api.Vpp
#include SNG_IntegrDirectum_out_CreateUpdateKindTD_API.Vpp
#include SNG_IntegrDirectum_out_CreateUpdate_RPD1.Vpp
#include SNG_IntegrDirectum_out_CreateUpdate_EmploymentContract.Vpp
#include SNG_IntegrDirectum_out_CreateUpdate_RPD8.Vpp
#include SNG_IntegrDirectum_out_CreateUpdate_RPD41.Vpp
#include SNG_IntegrDirectum_out_CreateUpdateKindDC_API.Vpp


Window winDEBUGAPIRESTDIRECTUM;
screen scrDEBUGAPIRESTDIRECTUM 'API DIRECTUM';
  show at(,,,);
fields
  Api_url      ('Адрес',,): Skip;
  API_Username ('Username',,): Skip;
!  API_Password ('Password',,): Skip;

  API_method       ('Метод',,): [LIST 0 'CreateUpdateKindDC'
                                    , 1 'CreatePersonnelOrder- TEST'
                                    , 2 'CreateUpdateKindTD'
                                    , 3 'CreateUpdateRPD'
                                    , 4 'CreateUpdateReasonForOrder'
                                    , 5 'CreateUpdate_RPD1'
                                    , 6 'CreateUpdate_RPD8'
                                    , 7 'CreateUpdate_RPD41'
                                    , 8 'CreateUpdate_EmploymentContract'
                                ],protect;
  API_methodFromTune   ('Метод из настройки',,): Skip;
  _MainCrec  ('ссылка на экземпляр объекта - параметр для метода'): NoProtect;
buttons
  cmValue1;
<<
Данный интерфейс содержит все функции по интеграции с "Директумом".
Сейчас вы запустили его напрямую. это DEBUG-вариант: все запросы будут сопровождаться сообщениями
    и будут скачаны файлы ответом от API "Директума"

Из настроек системы:
  `URL API`     .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `API_Username`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!  `API_Password`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

`Выберите метод:` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `Метод из настройки системы` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

  `cREC`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   <.    Отправить    .>
>>
end; // screen scrGLX586REST
end;
windowevent  winDEBUGAPIRESTDIRECTUM;
cmValue1: {
      case API_method of
         0 : CreateUpdateKindDC_ALL
         1 : CreatePersonnelOrder_API_test
         2 : CreateUpdateKindTD_ALL
         3 : CreateUpdateRPD_ALL
         4 : CreateUpdateReasonForOrder_ALL
         5 : CreateUpdate_RPD1(_MainCrec)
         6 : CreateUpdate_RPD8(_MainCrec)
         7 : CreateUpdate_RPD41(_MainCrec)
         8 : CreateUpdate_EmploymentContract(_MainCrec)
      end;
}
end;

Procedure setvisiblefields;
{
  var _isVisible: boolean = False;
       case API_method of
         0,1,2,3,4 : _isVisible := False;
         5,6,7,8 : _isVisible := true;
       end;
 cfssetprop('L_SCRDEBUGAPIRESTDIRECTUM_cREC','Visible', _isVisible) ;
 cfssetprop('i_SCRDEBUGAPIRESTDIRECTUM_MAINCREC','Visible', _isVisible)
}
HandleEvent

cmInit: {
//  gettunes;
  API_method := 0;
  API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateKindDC');
  setvisiblefields;
  if ( BodyMess = '' )
  {
    set BodyMess := '{"personnelOrder": {"Id":null,"DocumentKind":"PersOrder", "Author":"00220401", "Employees":["00220401","00076778"]}}';
  }
  _isDebug := true;
  _SNG_IntegrDirectum_out_base.set_debug_mode;
  runwindowmodal(winDEBUGAPIRESTDIRECTUM);
  closeinterface(-1);
}

cmCheckField: {
  case curfield of
   #API_method:
       case API_method of
         0 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateKindDC');
              }
         1 :  { API_methodFromTune := sgettune('DirectumIntegration_CreatePersonnelOrder');
              }
         2 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateKindTD');
              }
         3 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateRPD');
              }
         4 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateReasonForOrder');
              }
         5 :  { API_methodFromTune := sgettune('DirectumIntegration_RPD1');//CreateUpdate_RPD1
              }
         6 :  { API_methodFromTune := sgettune('DirectumIntegration_RPD8');//CreateUpdate_RPD8
              }
         7 :  { API_methodFromTune := sgettune('DirectumIntegration_RPD41');//CreateUpdate_RPD41
              }
         8 :  { API_methodFromTune := sgettune('DirectumIntegration_CreateUpdateEmploymentContract');//CreateUpdate_RPD41
              }
       end;
   end;
   setvisiblefields;
   rereadrecord;
}
end; // HandleEvent
end.
