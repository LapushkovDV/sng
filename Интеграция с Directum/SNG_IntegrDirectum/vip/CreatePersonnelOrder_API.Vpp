procedure CreatePersonnelOrder_API_test;
{
/*
 '{"personnelOrder": {"Id":null,"DocumentKind":"PersOrder", "Author":"00220401", "Employees":["00220401","00076778"]}}';
*/
  var  m_service : TPtr = HttpConnect_CreateEx('http://ya.ru', '', '', true);
  var JSONObj : TPtr = HttpConnect_JsonObjectCreate(m_service);
  var JSONObj_Element : tptr = HttpConnect_JsonObjectCreate(m_service);
   var stringNULL : TPtr =  HttpConnect_CreateLongString(m_service);

   HttpConnect_AddValueToLongString(m_service, '{"Id":null,"DocumentKind":"PersOrder"}',stringNULL);
   JSONObj_Element :=  HttpConnect_JSONObjectByLongString(m_service, stringNULL);

//   HttpConnect_JsonObjectAddLongString(m_service, JSONObj_Element, 'Id', stringNULL);
//   my_HttpConnect_JsonObjectAddString(m_service, JSONObj_Element, 'DocumentKind', 'PersOrder');

//   my_HttpConnect_JsonObjectAddString(m_service, JSONObj_Element, 'Author', '00220401');
   _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj_Element, 'Author', '00220401');

  var JSONObj_Array : TPtr = HttpConnect_JsonArrayCreate(m_service);
   HttpConnect_JsonArrayAddString(m_service, JSONObj_Array, '00220401');
   HttpConnect_JsonArrayAddString(m_service, JSONObj_Array, '00076778');
   HttpConnect_JsonObjectAddObject(m_service, JSONObj_Element, 'Employees', JSONObj_Array);

   HttpConnect_JsonObjectAddObject(m_service, JSONObj, 'personnelOrder', JSONObj_Element);

 var lResponse : TPtr;
   var methodstr : string = sgettune('DirectumIntegration_CreatePersonnelOrder');
   if _SNG_IntegrDirectum_out_base.DoRequest(methodstr, JSONObj, lResponse) {
     /*что то надо сделать*/

   }
   else {
   }
  HttpConnect_JSONArrayDestroy( m_service, JSONObj_Array);
  HttpConnect_JSONObjectDestroy(m_service, JSONObj_Element);
  HttpConnect_JSONObjectDestroy(m_service, JSONObj);
  HttpConnect_Free(m_service);


}


Function CreatePersonnelOrder_API(_cTitledoc : comp) : boolean;
{
//по идее это входная точка. далее определяем тип РПД и вызываем соответствующую функцию
  if getfirst Titledoc where ((_cTitledoc == Titledoc.nrec)) <> tsOK {
    if _isDebug{
        message('Не найден приказ c Titledoc.nrec = ' + string(_cTitledoc, 0, 0),error)
      }
    exit;
  }
  if(getfirst partdoc where ((titledoc.nrec == partdoc.CDOC))) <> tsOK {
    if _isDebug{
        message('В приказе (titledoc.nrec ='+string(titledoc.nrec,0,0)+') нет разделов (таблица partdoc)'+
        ''#13'' + 'partdoc where ((titledoc.nrec == partdoc.CDOC))',error)
      }
    exit;
  }
  _loop partdoc where ((titledoc.nrec == partdoc.CDOC)) {
      if getfirst TYPEPR where ((Partdoc.TYPEOPER == TYPEPR.CODOPER)) <> tsOK then {
         if _isDebug{
            message('В приказе указан несуществующий тип приказа в БД: '+
            ''#13''+ 'TYPEPR where ((Partdoc.TYPEOPER == TYPEPR.CODOPER))'+
            ''#13''+ 'Partdoc.TYPEOPER = ' + Partdoc.TYPEOPER,error)
          }
        continue;
      }
      case Partdoc.TYPEOPER of
         1: result := CreateUpdate_RPD1(Titledoc.nrec); // тут так то есть развилка с формированием трудового договора
         6: result := CreateUpdate_RPD6(Titledoc.nrec); // . Анна Шахуло переделала этот метод... все на TITLEDOC перенесла... аналогично - развилка по самому приказу и записке-расчету
         8: result := CreateUpdate_RPD1(Titledoc.nrec);
        50: result := CreateAdditionalAgreement(Titledoc.nrec);
       else {
          if _isDebug{
              message('Для РПД'+String(Partdoc.TYPEOPER)+' не предусмотрена обработка в этом методе' ,error)
            }
          exit;
       }
      end;
  }

}
