  /*
 {
  "Adr" : "",
  "DateDoc" : "",
  "DateStartDC" : "20/10/2023",
  "DocShablon" : "DOP_TRUD_DOST",
  "DocTy" : "",
  "Employees" : 1234569995,
  "Gorod" : "",
  "HRCode" : "000000000000000Eh",
  "HRCodeEmploymentContract" : "",
  "HRCodeKindAdditionalAgreement" : "21",
  "IdMainDoc" : "",
  "KemVydan" : "",
  "Name" : "Михаил",
  "NameORG" : "Публичное акционерное общество \"Сургутнефтегаз\"",
  "NameOrgShort" : " ПАО \"Сургутнефтегаз\"",
  "NameWerks" : "",
  "Nomer" : "",
  "OkladShtat" : "150000",
  "Oklad_M" : "",
  "Oklad_P" : "100000.00",
  "Seriya" : "",
  "Surname" : "Горшенев",
  "Surname2" : "Юрьевич",
  "TarifShtat" : "",
  "TarifShtat_P" : ""
}
*/

function CreateAdditionalAgreement(_cRec : comp): boolean; {

 //вставила блок  //Шалухо АИ 05112023   для возможности тестирования
  var lsTest : string = sgettune('DirectumIntegration_Test')
  if lsTest <> ''
     _isDebug := true;

 // gettunes;
 //вставила блок  //Шалухо АИ 05112023
  var methodstr : string = sgettune('DirectumIntegration_CreateAdditionalAgreement');
  if methodstr = ''
         if true{
                 message('Не заполнена настройка "Метод создания доп.соглашения на изменение оклада"'  ,error);
                 exit;
                }
  //вставила блок  //Шалухо АИ 05112023
  if methodstr = '---miss_http_request---'   //  /DrxIntegration/odata/HRDocflow/CreateAdditionalAgreement
    _isDebug := true;


  //-----
  if getfirst Titledoc where ((_cRec == Titledoc.nrec)) <> tsOK {
    if _isDebug{
        message('Не найден приказ c Titledoc.nrec = ' + string(_cRec, 0, 0),error)
      }
    exit;
  }
  if(getfirst partdoc where ((titledoc.nrec == partdoc.CDOC)) and Partdoc.TYPEOPER = 50 ) <> tsOK {
    if _isDebug{
        message('В приказе нет разделов "Изменение оклада" (РПД 50)',error)
      }
    exit;
  }

  _loop partdoc where ((titledoc.nrec == partdoc.CDOC)) and Partdoc.TYPEOPER = 50 {
    _loop contdoc where ((partdoc.nrec == contdoc.CPART)) {

      if getfirst TYPEPR where ((Partdoc.TYPEOPER == TYPEPR.CODOPER)) <> tsOK then {
         if _isDebug{
            message('В приказе указан несуществующий тип приказа в БД: '+
            ''#13''+ 'TYPEPR where ((Partdoc.TYPEOPER == TYPEPR.CODOPER))'+
            ''#13''+ 'Partdoc.TYPEOPER = ' + Partdoc.TYPEOPER,error)
          }
        continue;
      }


      if getfirst PERSONS where ((CONTDOC.PERSON == PERSONS.nrec)) <> tsOK then {
         if _isDebug{
            message('В приказе не нашли сотрудника (CONTDOC.PERSON == PERSONS.nrec) CONTDOC.PERSON = ' + string(CONTDOC.PERSON,0,0),error)
          }
        continue;
      }

      if getfirst Catalogs_podr where ((CONTDOC.CDOPREF == Catalogs_podr.nrec)) <> tsOK  then {
        if _isDebug{
            message('В приказе не нашли подразделение (CONTDOC.CDOPREF == Catalogs_podr.nrec) CONTDOC.CDOPREF = ' + string(CONTDOC.CDOPREF,0,0),error)
          }
         continue;
        }
      if getfirst appointments where ((contdoc.CSTR == appointments.nrec)) <> tsOk then  {
           if _isDebug{
            message('В приказе не нашли назначение назначение (contdoc.CSTR == appointments.nrec) contdoc.CSTR = ' + string(contdoc.CSTR,0,0),error)
          }
          continue;
        }

      if getfirst STAFFSTRUCT where ((appointments.STAFFSTR == STAFFSTRUCT.nrec)) <> tsOK  then {
         if _isDebug{
            message('В назначении не нашли ШР (appointments.STAFFSTR == STAFFSTRUCT.nrec) appointments.STAFFSTR = ' + string(appointments.STAFFSTR,0,0),error)
          }
         continue;
        }

 /*    //закоментировала блок  //Шалухо АИ 05112023
     if getfirst SpAllStaff_pers where ((5 == SpAllStaff_pers.WNOCON
                          and PERSONS.NREC == SpAllStaff_pers.CBASET)) <> tsOK {
         if _isDebug{
            message('Не нашли SpAllStaff_pers where ((5 == SpAllStaff_pers.WNOCON'+
            ''#13''+'                  and PERSONS.NREC == SpAllStaff_pers.CBASET)) '+
            ''#13''+'PERSONS.NREC = '+ string(PERSONS.NREC,0,0),error)
          }
          continue;
      }
 /**/

/*  //закоментировала блок  //Шалухо АИ 05112023
     if getfirst SpAllStaff_6 where ((6 == SpAllStaff_6.WNOCON
               and SpAllStaff_pers.nrec == SpAllStaff_6.CBASET)) <> tsOK {
         if _isDebug{
            message('Не нашли SpAllStaff_pers where ((6 == SpAllStaff_6.WNOCON'+
            ''#13''+'          and SpAllStaff_pers.nrec == SpAllStaff_6.CBASET)) '+
            ''#13''+'SpAllStaff_pers.nrec = '+ string(SpAllStaff_pers.nrec,0,0),error)
          }
          continue;
      }
/**/

//раскоментировала блок  //Шалухо АИ 05112023
/**/
// сказали искать не напрямуююю.....\  а   APPHIST.DREC<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= APPHIST.DEND
      if getfirst APPHIST where ((CONTDOC.nrec == APPHIST.CCONTDOC)) <> tsOK  then {
         if _isDebug{
            message('В истории назначений не нашли ссылку на приказ (CONTDOC.nrec == APPHIST.CCONTDOC). '+
            ''#13''+'APPHIST.CCONTDOC = ' + string(APPHIST.CCONTDOC,0,0),error)
          }
          continue;
        }
/**/


/*
      if getfirst TarStav where ((AppHist.Tariff == TarStav.Nrec)) <> tsOK  then {
         if _isDebug{
            message('В истории назначений не нашли ссылку на тарифную ставкц (AppHist.Tariff == TarStav.Nrec).'+
            ''#13''+' AppHist.Tariff = ' + string(AppHist.Tariff,0,0),error)
          }
          continue;
        }
*/
      if getfirst katorg where ((cogettune('myorg') == katorg.nrec)) <> tsOK then {
         if _isDebug{
            message('Не нашли собственную организацию по настройке "myorg" '+
            ''#13''+' cogettune("myorg") = ' + string(cogettune('myorg'),0,0),error)
          }
          continue;
        }

   var  m_service : TPtr = HttpConnect_CreateEx('http://ya.ru', '', '', true);
   var JSONObj : TPtr = HttpConnect_JsonObjectCreate(m_service);


/*
HRCodeKindAdditionalAgreement
"Условие для параметра:
необходимо определить код вида ДС для передачи в RX
- в SPALLSTAFF при
SPALLSTAFF.CBASET= PERSONS.NREC (ссылка на таб№), SPALLSTAFF.WNOCON=5
Запомнить значение SPALLSTAFF.NREC
- далее найти соединение SPALLSTAFF.CBASET=SPALLSTAFF.NREC, SPALLSTAFF.WNOCON=6
Запомнить значение SPALLSTAFF.NREC
- для записи SPALLSTAFF.CBASET= SPALLSTAFF.NREC, SPALLSTAFF.WNOCON=16 запомнить значение
SPALLSTAFF. RESCOMP[7]
- Для SPALLSTAFF. RESCOMP[7] в CATALOGS при CATALOGS.NREC=SPALLSTAFF. RESCOMP[7] найти CALALOGS.CODE (этот код передать в RX)
"
*/



    var NOAA: NumberOfAddAgreement new;
    var tmpLink: comp =  NOAA.GetFirstAgreementByLink(coAppHist, AppHist.NRec);
    //ссылка на ДС
     if getfirst SpAllStaff_aggreement where ((tmpLink == SpAllStaff_aggreement.nrec )) <> tsOK {
         if _isDebug{
            message('Не нашли ДС'+
            ''#13''+ ' NOAA.GetFirstAgreementByLink(coAppHist, AppHist.NRec);'+
            ''#13''+ 'AppHist.NRec  = '+ string(AppHist.NRec, 0, 0)+
            ''#13''+ 'tmpLink  = '+ string(tmpLink , 0, 0),error)
          }
          //на тестовой/пустой БД закомментировать строку ниже
          continue;
       }
    //ссылка на Вид ДС
     if getfirst SpAllStaff_16 where ((     16 == SpAllStaff_16.WNOCON
                                       and SpAllStaff_aggreement.nrec == SpAllStaff_16.CBASET)) <> tsOK {
         if _isDebug{
             message('Не нашли Вид ДС по ДС '
             +''#13''+'SpAllStaff_aggreement.nrec = '+ string(SpAllStaff_aggreement.nrec, 0, 0)
             +''#13''+'SpAllStaff_16.nrec = '+ string(SpAllStaff_16.nrec, 0, 0),error)
           }
                    //на тестовой/пустой БД закомментировать строку ниже
          continue;
       }

     if getfirst cat_search where ((SpAllStaff_16.RESCOMP[7] == cat_search.nrec)) <> tsOK {
         if _isDebug{
            message('Не нашли значение для "Вид ДС"'
            +''#13''+'ДС SpAllStaff_aggreement.nrec = '+ string(SpAllStaff_aggreement.nrec, 0, 0)
            +''#13''+'вид ДС SpAllStaff_16.nrec = '+ string(SpAllStaff_aggreement.nrec, 0, 0)
            +''#13''+'каталог видов ДС SpAllStaff_16.RESCOMP[7] = '+ string(SpAllStaff_aggreement.RESCOMP[7], 0, 0)
            ,error)
          }
                    //на тестовой/пустой БД закомментировать строку ниже
          continue;
     }

     var _HRCodeKindAdditionalAgreement : string = cat_search.code;

/* HRCodeEmploymentContract
Условие для параметра:
Для ДС необходимо передавать ИД ТД, в рамках которого создается ДС.
- в SPALLSTAFF при
SPALLSTAFF.CBASET= PERSONS.NREC (ссылка на таб№), SPALLSTAFF.WNOCON=5
Запомнить значение SPALLSTAFF.NREC
- при EXTERNALASM.CREC= SPALLSTAFF.NREC,
EXTERNALASM.WTABLE=32211, EXTERNALASM.ASM_TYPE=101 запомнить значение EXTERNALASM.NUMBER[1] (передать значение в RX)
*/
   var _HRCodeEmploymentContract: string = '';
  //закоментировала блок  //Шалухо АИ 05112023
  //_HRCodeEmploymentContract := _SNG_IntegrDirectum_out_base.GetIdDirectRxByDoc( coSpAllStaff, SpAllStaff_aggreement.Nrec)
  //пока работаем по TitleDoc
  _HRCodeEmploymentContract := _SNG_IntegrDirectum_out_base.GetIdDirectRxByDoc(coTitleDoc,Titledoc.nrec );
  /* //закоментировала блок  //Шалухо АИ 05112023
    if getfirst EXTERNALASM where ((101 ==  EXTERNALASM.ASM_TYPE
                              and 32211 == EXTERNALASM.WTABLE
               and SpAllStaff_pers.nrec == EXTERNALASM.CREC)) = tsOK {
      _HRCodeEmploymentContract := EXTERNALASM.NUMBERS[1];
    }
  /**/

    HttpConnect_JsonObjectAddInteger(m_service, JSONObj, 'IdRX', 0); //не сказано как искать и заполнять
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'HRCode',string(TYPEPR.nrec,0,0));
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'HRCodeKindAdditionalAgreement',_HRCodeKindAdditionalAgreement);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'HRCodeEmploymentContract',_HRCodeEmploymentContract);
    //закоментировала блок  //Шалухо АИ 05112023
    //HttpConnect_JsonObjectAddInteger(m_service, JSONObj, 'Employees', CONTDOC.LITABN);

    //вставила блок  //Шалухо АИ 05112023
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Employees', PERSONS.TABNMB);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DateStart', _SNG_IntegrDirectum_out_base.SetDateToHeader(SpAllStaff_aggreement.RESDATE[2])); // сначала был DateStartDC
    /*//закоментировала блок  //Шалухо АИ 05112023
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DocShablon','D_SOGTD010123');
    /**/
    //вставила блок  //Шалухо АИ 05112023
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Shablon', _SNG_IntegrDirectum_out_base.GetDocShablonDS(cat_search.Nrec)); // сначала был DocShablon

    HttpConnect_JsonObjectAddInteger(m_service, JSONObj, 'IdMainDoc', 0);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Author', _SNG_IntegrDirectum_out_base.GetDocUserTabN ); // тут по идее _SNG_IntegrDirectum_out_base.GetDocUserTabN(с каким то параметром)
    HttpConnect_JsonObjectAddBoolean(m_service, JSONObj, 'IsArhive',  false);


/*
далее переделываем линейную структуру на массив из JSON
Param
Value

*опой чуял, что будет так и потому название переменных заранее делал как название параметра
*/
  var JSONObj_Array : TPtr = HttpConnect_JsonArrayCreate(m_service);
  mylog(' start JSONObj_Array');


   var _NameORG, _NameOrgShort : string = '';
     _NameORG := katorg.ShortName ;
     _NameOrgShort := katorg.Name;
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'NameORG',_NameORG);
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'NameOrgShort',_NameOrgShort);

     #addArrayElementString(NameORG)
     #addArrayElementString(NameOrgShort)

   var _NameWerks : string = '';
     _NameWerks := getpodrunder(_SNG_IntegrDirectum_out_base.GetMainCode_PAOSNG, Catalogs_podr.nrec, Catalogs_podr.cParent);
     mylog('_NameWerks = ' + _NameWerks);

//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'NameWerks',_NameWerks);
    #addArrayElementString(NameWerks)

   var _cRec : comp = getpodrunder_nrec(_SNG_IntegrDirectum_out_base.GetMainCode_PAOSNG, Catalogs_podr.nrec, Catalogs_podr.cParent);
   var _Gorod : string = sGetAttr(coCATALOGS, _cRec, 'Город');
    //_SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Gorod',_Gorod);
    #addArrayElementString(Gorod)



    /*//закоментировала блок  //Шалухо АИ 05112023
    var _FIO: string = PERSONS.FIO;
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'FIO',_FIO);
    */
    //вставила блок  //Шалухо АИ 05112023
/*   _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Surname',  _PersFunc.Get_LastName(PERSONS.nrec)  ); //выделить фамилию
   _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Name',     _PersFunc.Get_FirstName(PERSONS.nrec) ); //выделить имя
   _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Surname2', _PersFunc.GetPatronymic(PERSONS.nrec) ); //выделить отчество
*/

   var _Surname: string = '';
     _Surname := _PersFunc.Get_LastName(PERSONS.nrec);
     #addArrayElementString(Surname)

   var _Name: string = '';
     _Name:= _PersFunc.Get_FirstName(PERSONS.nrec);
     #addArrayElementString(Name)

   var _Surname2: string = '';
     _Surname2:= _PersFunc.GetPatronymic(PERSONS.nrec);
     #addArrayElementString(Surname2)


   var _Adr :  string= '';
      if getfirst addressn where ((persons.PASSPADDR == addressn.nrec)) = tsOK {
        _Adr := _addrfunc.GetFullAddressInd(addressn.nrec);
      }
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Adr',_Adr);
     #addArrayElementString(Adr)

   var _DocTy : string = '';
 //закоментировала //Шалухо АИ 06112023
// _DocTy := getpassport_string(Passports.DocName,persons.nrec) ;
   _DocTy := getpassport_string(PERSONS.PASSPRUS,persons.nrec) ;

//   _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DocTy',_DocTy);
     #addArrayElementString(DocTy)

    // по идее после вышестоящего кода мы стоим как раз на нужном passports
   var _Seriya : string= '';
   var _Nomer  : string= '';
   var _DateDoc : string= '';
   var _KemVydan : string= '';
     if _DocTy <> '' {
       _Seriya   := passports.SER;
       _Nomer    := passports.NMB;
       _DateDoc  := _SNG_IntegrDirectum_out_base.SetDateToValue(passports.GIVENDATE);
       _KemVydan := passports.GIVENBY;
     }
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Seriya',_Seriya);
     #addArrayElementString(Seriya)
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Nomer',_Nomer);
     #addArrayElementString(Nomer)
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DateDoc',_DateDoc);
     #addArrayElementString(DateDoc)
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'KemVydan',_KemVydan);
     #addArrayElementString(KemVydan)

   var _OkladShtat, _Oklad_M, _Oklad_P, _TarifShtat, _TarifShtat_P  : string = '';
/*

_OkladShtat
если категория сотрудника=01-03
получить значение оклада APPHIST.TAXRATE при APPHIST.DREC<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= APPHIST.DEND

но я сделал не так..
тут я напрямую выхожу на APPHIST через if getfirst APPHIST where ((CONTDOC.nrec == APPHIST.CCONTDOC))

_Oklad_M
"Условие для параметра:
если Категория сотрудников= 05 (рабочие-окладники)
получить значение оклада APPHIST.TAXRATE при APPHIST.DREC<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= APPHIST.DEND"

но я сделал не так..
тут я напрямую выхожу на APPHIST через if getfirst APPHIST where ((CONTDOC.nrec == APPHIST.CCONTDOC))

Oklad_P
"Условие для параметра:
если категория сотрудника=01-03, 05
рассчитать значение персонального оклада : оклад APPOINMENTS.TAXRATE+ надбавка RAISE.SUM при RAISE.FROMDATE<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= RAISE.TODATE"

TarifShtat
"Условие для параметра:
если категория сотрудника=04 (рабочие-тарифники)
получить значение тарифа APPHIST.TAXRATE при APPHIST.DREC<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= APPHIST.DEND"

TarifShtat_P
"Условие для параметра:
если категория сотрудника=04 (рабочие-тарифники)
рассчитать значение персональной тарифной ставки : тариф APPOINMENTS.TAXRATE+ надбавка RAISE.SUM при RAISE.FROMDATE<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= RAISE.TODAT"
*/

//AppHist
   if getfirst KlKatego  where ((AppHist.cSpr4 == KlKatego.Nrec)) = tsOK {
     case klkatego.kod of
      1,2,3 : { _OkladShtat := string(APPHIST.TAXRATE,0,0);
                _Oklad_P := string(appointments.taxrate + getsumraise(persons.nrec, appointments.nrec, SPALLSTAFF_6.RESDATE[2])); // ну вот вопрос.. я бы брал APPHIST.TAXRATE
           }
      4     : {_TarifShtat := string(APPHIST.TAXRATE,0,0);
               _TarifShtat_P := string(appointments.taxrate + getsumraise(persons.nrec, appointments.nrec, SPALLSTAFF_6.RESDATE[2])); // ну вот вопрос.. я бы брал APPHIST.TAXRATE
           }
      5     : { _Oklad_M := string(APPHIST.TAXRATE,0,0);
                _Oklad_P := string(appointments.taxrate + getsumraise(persons.nrec, appointments.nrec, SPALLSTAFF_6.RESDATE[2])); // ну вот вопрос.. я бы брал APPHIST.TAXRATE
           }
     end;
   }

//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'OkladShtat',_OkladShtat);
       #addArrayElementString(OkladShtat)
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Oklad_M',_Oklad_M);
       #addArrayElementString(Oklad_M)
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Oklad_P',_Oklad_P);
       #addArrayElementString(Oklad_P)
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'TarifShtat',_TarifShtat);
       #addArrayElementString(TarifShtat)
//    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'TarifShtat_P',_TarifShtat_P);
       #addArrayElementString(TarifShtat_P)



    HttpConnect_JsonObjectAddObject(m_service, JSONObj, 'Content', JSONObj_Array);

   var JSONObjAdditionalAgreementStructure : TPtr = HttpConnect_JsonObjectCreate(m_service);
    HttpConnect_JsonObjectAddObject(m_service, JSONObjAdditionalAgreementStructure, 'AdditionalAgreementStructure', JSONObj);



     var lResponse : tptr;
     if _SNG_IntegrDirectum_out_base.DoRequest(methodstr, JSONObjAdditionalAgreementStructure, lResponse) {
        /*чтот то надо сделать*/
        var JSONResponse : TPtr = HttpConnect_JSONObjectByLongString(m_service, lResponse);
/*
{
 "@odata.context": "https://directumrxtst/odata/$metadata#Sungero.IntegrationService.Models.Generated.HRDocflow.IResultResponseDto",
 "Id": 10704156,
 "TypeMessage": "Success",
 "Message": "Personnel order with Id 10704156 created successfully.",
 "Url": "https://directumrxtst/DirectumRx?type=05a72ca1-2759-4a92-b461-d5ea5c8906fa&id=10704156"
 }
*/


        if upcase(HttpConnect_JsonObjectValueByName(m_service,JSONResponse,'TypeMessage')) <> upcase('Success') {
              if true { //_isDebug{  //закоментировала условие  //Шалухо АИ 06112023
                 message('DirectunRX вернул ошибку: ' +
                      ''#13''+ HttpConnect_JsonObjectValueByName(m_service,JSONResponse,'Message'),error);
                }
           result := false;
         }
         else {

              var Id : string = HttpConnect_JsonObjectValueByName(m_service,JSONResponse,'Id');
              _SNG_IntegrDirectum_out_base.SetIdDirectRx(coTitleDoc,Titledoc.nrec,Id);

              if true { //_isDebug{ //закоментировала условие  //Шалухо АИ 06112023
                 message('DirectunRX приказ успешно передан: Id = "' + Id+'"'+
                      ''#13''+ HttpConnect_JsonObjectValueByName(m_service,JSONResponse,'Message'));
                }

           result := true;
         }
       }
       else {
         result := false;
       }


   // var jsonResponse: TPtr = HttpConnect_JSONObjectByLongString(httpCon, lResponse);

    HttpConnect_JSONObjectDestroy(m_service,JSONObj);
    HttpConnect_Free(m_service);
   }
  }
}   //end function CreateUpdate_RPD1(_cRec : comp): string; {
