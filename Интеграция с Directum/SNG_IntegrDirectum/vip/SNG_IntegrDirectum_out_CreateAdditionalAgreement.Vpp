function CreateAdditionalAgreement(_cRec : comp): boolean; {
  if getfirst Titledoc where ((_cRec == Titledoc.nrec)) <> tsOK {
    if _isDebug{
        message('Не найден приказ c Titledoc.nrec = ' + string(_cRec, 0, 0),error)
      }
    exit;
  }
  if(getfirst partdoc where ((titledoc.nrec == partdoc.CDOC)) and Partdoc.TYPEOPER = 50 ) <> tsOK {
    if _isDebug{
        message('В приказе нет разделов "Изменение оклада" (РПД 50)',error)
      }
    exit;
  }
// gettunes;
   var methodstr : string = sgettune('DirectumIntegration_CreateAdditionalAgreement');

  _loop partdoc where ((titledoc.nrec == partdoc.CDOC)) and Partdoc.TYPEOPER = 50 {
    _loop contdoc where ((partdoc.nrec == contdoc.CPART)) {

      if getfirst TYPEPR where ((Partdoc.TYPEOPER == TYPEPR.CODOPER)) <> tsOK then {
         if _isDebug{
            message('В приказе указан несуществующий тип приказа в БД: '+
            ''#13''+ 'TYPEPR where ((Partdoc.TYPEOPER == TYPEPR.CODOPER))'+
            ''#13''+ 'Partdoc.TYPEOPER = ' + Partdoc.TYPEOPER,error)
          }
        continue;
      }


      if getfirst PERSONS where ((CONTDOC.PERSON == PERSONS.nrec)) <> tsOK then {
         if _isDebug{
            message('В приказе не нашли сотрудника (CONTDOC.PERSON == PERSONS.nrec) CONTDOC.PERSON = ' + string(CONTDOC.PERSON,0,0),error)
          }
        continue;
      }

      if getfirst Catalogs_podr where ((CONTDOC.CDOPREF == Catalogs_podr.nrec)) <> tsOK  then {
        if _isDebug{
            message('В приказе не нашли подразделение (CONTDOC.CDOPREF == Catalogs_podr.nrec) CONTDOC.CDOPREF = ' + string(CONTDOC.CDOPREF,0,0),error)
          }
         continue;
        }
      if getfirst appointments where ((contdoc.CSTR == appointments.nrec)) <> tsOk then  {
           if _isDebug{
            message('В приказе не нашли назначение назначение (contdoc.CSTR == appointments.nrec) contdoc.CSTR = ' + string(contdoc.CSTR,0,0),error)
          }
          continue;
        }

      if getfirst STAFFSTRUCT where ((appointments.STAFFSTR == STAFFSTRUCT.nrec)) <> tsOK  then {
         if _isDebug{
            message('В назначении не нашли ШР (appointments.STAFFSTR == STAFFSTRUCT.nrec) appointments.STAFFSTR = ' + string(appointments.STAFFSTR,0,0),error)
          }
         continue;
        }
      if getfirst APPHIST where ((CONTDOC.nrec == APPHIST.CCONTDOC)) <> tsOK  then {
         if _isDebug{
            message('В истории назначений не нашли ссылку на приказ (CONTDOC.nrec == APPHIST.CCONTDOC). '+
            ''#13''+'APPHIST.CCONTDOC = ' + string(APPHIST.CCONTDOC,0,0),error)
          }
          continue;
        }
/*
      if getfirst TarStav where ((AppHist.Tariff == TarStav.Nrec)) <> tsOK  then {
         if _isDebug{
            message('В истории назначений не нашли ссылку на тарифную ставкц (AppHist.Tariff == TarStav.Nrec).'+
            ''#13''+' AppHist.Tariff = ' + string(AppHist.Tariff,0,0),error)
          }
          continue;
        }
*/
      if getfirst katorg where ((cogettune('myorg') == katorg.nrec)) <> tsOK then {
         if _isDebug{
            message('Не нашли собственную организацию по настройке "myorg" '+
            ''#13''+' cogettune("myorg") = ' + string(cogettune('myorg'),0,0),error)
          }
          continue;
        }

   var  m_service : TPtr = HttpConnect_CreateEx('http://ya.ru', '', '', true);
   var JSONObj : TPtr = HttpConnect_JsonObjectCreate(m_service);


/*
HRCodeKindAdditionalAgreement
"Условие для параметра:
необходимо определить код вида ДС для передачи в RX
- в SPALLSTAFF при
SPALLSTAFF.CBASET= PERSONS.NREC (ссылка на таб№), SPALLSTAFF.WNOCON=5
Запомнить значение SPALLSTAFF.NREC
- далее найти соединение SPALLSTAFF.CBASET=SPALLSTAFF.NREC, SPALLSTAFF.WNOCON=6
Запомнить значение SPALLSTAFF.NREC
- для записи SPALLSTAFF.CBASET= SPALLSTAFF.NREC, SPALLSTAFF.WNOCON=16 запомнить значение
SPALLSTAFF. RESCOMP[7]
- Для SPALLSTAFF. RESCOMP[7] в CATALOGS при CATALOGS.NREC=SPALLSTAFF. RESCOMP[7] найти CALALOGS.CODE (этот код передать в RX)
"
*/
     if getfirst SpAllStaff_pers where ((5 == SpAllStaff_pers.WNOCON
                          and PERSONS.NREC == SpAllStaff_pers.CBASET)) <> tsOK {
         if _isDebug{
            message('Не нашли SpAllStaff_pers where ((5 == SpAllStaff_pers.WNOCON'+
            ''#13''+'                  and PERSONS.NREC == SpAllStaff_pers.CBASET)) '+
            ''#13''+'PERSONS.NREC = '+ string(PERSONS.NREC,0,0),error)
          }
          continue;
      }

     if getfirst SpAllStaff_6 where ((6 == SpAllStaff_6.WNOCON
               and SpAllStaff_pers.nrec == SpAllStaff_6.CBASET)) <> tsOK {
         if _isDebug{
            message('Не нашли SpAllStaff_pers where ((6 == SpAllStaff_6.WNOCON'+
            ''#13''+'          and SpAllStaff_pers.nrec == SpAllStaff_6.CBASET)) '+
            ''#13''+'SpAllStaff_pers.nrec = '+ string(SpAllStaff_pers.nrec,0,0),error)
          }
          continue;
      }

     if getfirst SpAllStaff_16 where ((16 == SpAllStaff_16.WNOCON
                    and SpAllStaff_6.nrec == SpAllStaff_16.CBASET)) <> tsOK {
         if _isDebug{
            message('Не нашли SpAllStaff_16 where ((16 == SpAllStaff_16.WNOCON'+
            ''#13''+'          and SpAllStaff_6.nrec == SpAllStaff_16.CBASET)) '+
            ''#13''+'SpAllStaff_6.nrec = '+ string(SpAllStaff_6.nrec, 0, 0),error)
          }
          continue;
      }


     if getfirst cat_search where ((SpAllStaff_16.RESCOMP[7] == cat_search.nrec)) <> tsOK {
         if _isDebug{
            message('Не нашли значение для HRCodeKindAdditionalAgreement:  cat_search where ((SpAllStaff_16.RESCOMP[7] == cat_search.nrec))'+
            ''#13''+'SpAllStaff_16.RESCOMP[7] = '+ string(SpAllStaff_16.RESCOMP[7], 0, 0),error)
          }
          continue;
     }

    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'HRCodeKindAdditionalAgreement',cat_search.code);

/* HRCodeEmploymentContract
Условие для параметра:
Для ДС необходимо передавать ИД ТД, в рамках которого создается ДС.
- в SPALLSTAFF при
SPALLSTAFF.CBASET= PERSONS.NREC (ссылка на таб№), SPALLSTAFF.WNOCON=5
Запомнить значение SPALLSTAFF.NREC
- при EXTERNALASM.CREC= SPALLSTAFF.NREC,
EXTERNALASM.WTABLE=32211, EXTERNALASM.ASM_TYPE=101 запомнить значение EXTERNALASM.NUMBER[1] (передать значение в RX)
*/
   var _HRCodeEmploymentContract: string = '';
    if getfirst EXTERNALASM where ((101 ==  EXTERNALASM.ASM_TYPE
                              and 32211 == EXTERNALASM.WTABLE
               and SpAllStaff_pers.nrec == EXTERNALASM.CREC)) = tsOK {
      _HRCodeEmploymentContract := EXTERNALASM.NUMBERS[1];
    }
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'HRCodeEmploymentContract',_HRCodeEmploymentContract);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'HRCode',string(TYPEPR.nrec,0,0));
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'IdMainDoc','');
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DateStartDC',datetostr(SPALLSTAFF_6.RESDATE[2],co_formatdatetostr));
    HttpConnect_JsonObjectAddInteger(m_service, JSONObj, 'Employees', CONTDOC.LITABN);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DocShablon','');

   var _NameORG, _NameOrgShort : string = '';
     _NameORG := katorg.ShortName ;
     _NameOrgShort := katorg.Name;
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'NameORG',_NameORG);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'NameOrgShort',_NameOrgShort);

   var _NameWerks : string = '';
     _NameWerks := getpodrunder('0000', Catalogs_podr.nrec, Catalogs_podr.cParent);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'NameWerks',_NameWerks);
   var _cRec : comp = getpodrunder_nrec('0000', Catalogs_podr.nrec, Catalogs_podr.cParent);
   var _Gorod : string = sGetAttr(coCATALOGS, _cRec, 'Город');
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Gorod',_Gorod);
   var _FIO: string = '';
     _FIO := PERSONS.FIO;
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'FIO',_FIO);
   var _Adr :  string= '';
      if getfirst addressn where ((persons.PASSPADDR == addressn.nrec)) = tsOK {
        _Adr := _addrfunc.GetFullAddressInd(addressn.nrec);
      }
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Adr',_Adr);

   var _DocTy : string = '';
   _DocTy := getpassport_string(Passports.DocName,persons.nrec) ;

   _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DocTy',_DocTy);

    // по идее после вышестоящего кода мы стоим как раз на нужном passports
   var _Seriya : string= '';
   var _Nomer  : string= '';
   var _DateDoc : string= '';
   var _KemVydan : string= '';
     if _DocTy <> '' {
       _Seriya   := passports.SER;
       _Nomer    := passports.NMB;
       _DateDoc  := passports.GIVENDATE;
       _KemVydan := passports.GIVENBY;
     }
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Seriya',_Seriya);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Nomer',_Nomer);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'DateDoc',_DateDoc);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'KemVydan',_KemVydan);

   var _OkladShtat, _Oklad_M, _Oklad_P, _TarifShtat, _TarifShtat_P  : string = '';
/*

_OkladShtat
если категория сотрудника=01-03
получить значение оклада APPHIST.TAXRATE при APPHIST.DREC<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= APPHIST.DEND

но я сделал не так..
тут я напрямую выхожу на APPHIST через if getfirst APPHIST where ((CONTDOC.nrec == APPHIST.CCONTDOC))

_Oklad_M
"Условие для параметра:
если Категория сотрудников= 05 (рабочие-окладники)
получить значение оклада APPHIST.TAXRATE при APPHIST.DREC<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= APPHIST.DEND"

но я сделал не так..
тут я напрямую выхожу на APPHIST через if getfirst APPHIST where ((CONTDOC.nrec == APPHIST.CCONTDOC))

Oklad_P
"Условие для параметра:
если категория сотрудника=01-03, 05
рассчитать значение персонального оклада : оклад APPOINMENTS.TAXRATE+ надбавка RAISE.SUM при RAISE.FROMDATE<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= RAISE.TODATE"

TarifShtat
"Условие для параметра:
если категория сотрудника=04 (рабочие-тарифники)
получить значение тарифа APPHIST.TAXRATE при APPHIST.DREC<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= APPHIST.DEND"

TarifShtat_P
"Условие для параметра:
если категория сотрудника=04 (рабочие-тарифники)
рассчитать значение персональной тарифной ставки : тариф APPOINMENTS.TAXRATE+ надбавка RAISE.SUM при RAISE.FROMDATE<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= RAISE.TODAT"
*/
   if getfirst KlKatego  where ((AppHist.cSpr4 == KlKatego.Nrec)) = tsOK {
     case klkatego.kod of
      1,2,3 : { _OkladShtat := string(APPHIST.TAXRATE,0,0);
                _Oklad_P := string(appointments.taxrate + getsumraise(persons.nrec, appointments.nrec, SPALLSTAFF_6.RESDATE[2])); // ну вот вопрос.. я бы брал APPHIST.TAXRATE
           }
      4     : {_TarifShtat := string(APPHIST.TAXRATE,0,0);
               _TarifShtat_P := string(appointments.taxrate + getsumraise(persons.nrec, appointments.nrec, SPALLSTAFF_6.RESDATE[2])); // ну вот вопрос.. я бы брал APPHIST.TAXRATE
           }
      5     : { _Oklad_M := string(APPHIST.TAXRATE,0,0);
                _Oklad_P := string(appointments.taxrate + getsumraise(persons.nrec, appointments.nrec, SPALLSTAFF_6.RESDATE[2])); // ну вот вопрос.. я бы брал APPHIST.TAXRATE
           }
     end;
   }

    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'OkladShtat',_OkladShtat);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Oklad_M',_Oklad_M);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'Oklad_P',_Oklad_P);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'TarifShtat',_TarifShtat);
    _SNG_IntegrDirectum_out_base.my_HttpConnect_JsonObjectAddString(m_service, JSONObj, 'TarifShtat_P',_TarifShtat_P);




     var lResponse : tptr;
     if _SNG_IntegrDirectum_out_base.DoRequest(methodstr, JSONObj, lResponse) {
        /*чтот то надо сделать*/
        var JSONResponse : TPtr = HttpConnect_JSONObjectByLongString(m_service, lResponse);
        result := true;
       }
       else {
         result := false;
       }

/*
_Oklad_P
"Условие для параметра:
если категория сотрудника=01-03, 05
рассчитать значение персонального оклада : оклад APPOINMENTS.TAXRATE+ надбавка RAISE.SUM при RAISE.FROMDATE<= SPALLSTAFF.RESDATE[2] для ДС при SPALLSTAFF.WNOCON=6 <= RAISE.TODATE"

*/


   // var jsonResponse: TPtr = HttpConnect_JSONObjectByLongString(httpCon, lResponse);

    HttpConnect_JSONObjectDestroy(m_service,JSONObj);
    HttpConnect_Free(m_service);
   }
  }
}   //end function CreateUpdate_RPD1(_cRec : comp): string; {
