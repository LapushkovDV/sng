//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - Управление персоналом
// CreatePersonnelOrder
//------------------------------------------------------------------------------
//#ifdef Atl60

//#include SNG_IntegrDirectum_out.Vih

#component "API_DIRECTUM"

interface SNG_IntegrDirectum_out_4 'API REST Directum для создания приказа - тест' (,,), EscClose, gray;
  show at (,, 90, 13);

Create view vwGLX586REST
var
  method     : string;
  Api        : string;
  Username   : string;
  Password   : string;

  BodyMess   : string;
  _getoutdir : string;
;

function getoutdir : string;
{
  if _getoutdir = '' then {
     _getoutdir := AddSlashToPath(GetStringParameter('Files','OutputFilesDirectory',0)); // ExDirectoryOut;
//     MESSAGE('_getoutdir=' + _getoutdir + ' 0_0 ' + ExDirectoryOut);
    }

  result := _getoutdir
}
screen scrTESTAPIRESTDIRECTUM 'TEST API REST DIRECTUM 3';
  show at(,,,);
fields
  Api          ('Адрес',,): noProtect;
  method       ('Метод',,): noProtect;
  Username     ('Пользователь',,): noProtect;
  Password     ('Пароль',,): noProtect;
  BodyMess     ('Тело сообщения',,): noProtect;

buttons
  cmValue1;
<<
  4 вариант
  `URL API` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `Метод`   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `Username`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `Password`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `Body`    .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   <.    Отправить    .>
>>
end; // screen scrGLX586REST

procedure DoRequest(URLapistr: string; methodstr: string; bodystr: string);
{

  var _sfileout : string = getoutdir+ 'SNG_APIDIRECTUMOUT_DoRequest_'+DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS')+'_';

 var _logHttpConnect : string = _sfileout + '_logHttpConnect.log' ;
  var httpCon: TPtr = longint(0);
  var lHeader: TPtr = longint(0);

  httpCon := HttpConnect_CreateEx(URLapistr, '', '', True);
  HttpConnect_SetUserAgent(httpCon, 'Mozilla/5.0');
  HttpConnect_ResponseLogEnable(httpCon);

  _try
  {
    lHeader := HttpConnect_CreateLongString(httpCon);
    HttpConnect_AddValueToLongString(httpCon, 'Host: directumrxtst' + chr(13), lHeader);
    HttpConnect_AddValueToLongString(httpCon, 'Username: '+ Username+ chr(13), lHeader);
    HttpConnect_AddValueToLongString(httpCon, 'Password: '+ Password+ chr(13), lHeader);
    HttpConnect_AddValueToLongString(httpCon, 'Content-Type: application/json' + chr(13), lHeader);
    HttpConnect_AddValueToLongString(httpCon, 'Accept: application/json' + chr(13), lHeader);




//    var lToken: TPtr = HttpConnect_CreateLongString(httpCon);
//    HttpConnect_AddValueToLongString(httpCon, 'Authorization: Bearer ', lToken);
//    HttpConnect_AddLongValueToLongString(httpCon, lToken, lHeader);

    var lAddUrl: TPtr = HttpConnect_CreateLongString(httpCon);
    HttpConnect_AddValueToLongString(httpCon, methodstr, lAddUrl);

    _try
    {
      var lRequest: TPtr = HttpConnect_CreateLongString(httpCon);
      HttpConnect_AddValueToLongString(httpCon, bodystr, lRequest);
      _try
      {
        /*
        <li><code>httpCon</code> - идентификатор объекта для работы с HTTP (см. статью про <a href="art--HttpConnector_Init.htm">инициализация и деинициализацию объектов для работы с HTTP</a>)</li>
        <li><code>lAddUrl</code> - строка с адресом ресурса на сервере (например, <code>'/auth/key'</code>)</li>
        <li><code>lHeader</code> - идентификатор длинной строки с заголовком авторизации</li>
        <li><code>lRequest</code> - идентификатор длинной строки с телом запроса</li>
        <li><code>Async</code> - параметр, включающий псевдоасинхронность работы. Устанавливает таймаут в 2 сек и выходит без ошибки. Во всех иных случаях - false</li>
        */
        //var isHTTPS : boolean = (instr('HTTPS', UPCASE(URLapistr)) = 1 );
        var lResponse    : TPtr = HttpConnect_SendRequestPostJSON(httpCon, lAddUrl, lHeader, lRequest, false);
        var jsonResponse : TPtr = HttpConnect_JSONObjectByLongString(httpCon, lResponse);
        if (HttpConnect_LastError(httpCon) <> 0)
          {
              message('При выполнении запроса возникла ошибка' +
                  ''#13''+  HttpConnect_LastErrorText(httpCon) +
                  ''#13''+ 'Лог ошибок в файле : ' + _logHttpConnect,error);
              HttpConnect_ResponseLogToFile (httpCon, _logHttpConnect);
            PutFileToClient(_logHttpConnect,false);
            HttpConnect_Free(httpCon);
            Exit;
          }
          var filelResponse1 : string = _sfileout + '_logHttpConnect.txt' ;
          var filelResponse2 : string = _sfileout + '_Response.txt' ;
            message('Запрос выполнен' +
                   ''#13''+ 'ответ от директума в файлах : ' +
                   ''#13'' + filelResponse1 +
                   ''#13'' + filelResponse2);
          HttpConnect_ResponseLogToFile(httpCon, filelResponse1);
          HttpConnect_SaveToFile(httpCon, lResponse, filelResponse2, 65001);
          PutFileToClient(filelResponse1,false);
          PutFileToClient(filelResponse2,false);


      }
      _finally
      {
        message('что то выввалилось по ошибке 0_0',error) ;
        HttpConnect_DestroyLongString(httpCon, lRequest);
      }
    }
    _finally
    {
      HttpConnect_DestroyLongString(httpCon, lHeader);
//      HttpConnect_DestroyLongString(httpCon, lToken);
      HttpConnect_DestroyLongString(httpCon, lAddUrl);
    }
  }
  _finally
  {
      HttpConnect_Free(httpCon);
  }
}

HandleEvent

cmInit:
{
  ReadMyDsk(Api, 'GLX586REST_Api2', true);
  ReadMyDsk(method,'GLX586REST_method2',true);

  ReadMyDsk(  Username, 'GLX586REST_Username', true);
  ReadMyDsk(  Password, 'GLX586REST_Password', true);


  ReadMyDsk(BodyMess, 'GLX586REST_BodyMess2', true);
  if ( Api = '' )
  {
    set Api := 'https://directumrxtst';
    set method := '/DrxIntegration/Odata/HRDocflow/CreatePersonnelOrder';
  }
  if ( Username = '' )
  {
    set Username := 'DIRRX_GATE_GL@sgc.oil.gas';
  }
  if ( Password = '' )
  {
    set Password := '35!RvWdhdeykQVnu';
  }

  if ( BodyMess = '' )
  {
    set BodyMess := '{"personnelOrder": {"Id":null,"DocumentKind":"PersOrder", "Author":"00220401", "Employees":["00220401","00076778"]}}';
  }
}

cmDone:
{
  SaveMyDsk(Api, 'GLX586REST_Api2');
  SaveMyDsk(method, 'GLX586REST_method2');
  SaveMyDsk(  Username, 'GLX586REST_Username');
  SaveMyDsk(  Password, 'GLX586REST_Password');
  SaveMyDsk(BodyMess, 'GLX586REST_BodyMess2');
}

cmValue1:
{
  DoRequest(Api, method, BodyMess);
}


end; // HandleEvent

end.
