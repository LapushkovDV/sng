
#ifndef __SNG_QUE_REST_VIH__
#define __SNG_QUE_REST_VIH__

#component "SNG_QUE"


#doc
Интерфейс по работе с входящей очередью через REST
#end
web objInterface oQUE_REST;

#doc
Положить сообщение во входящую очередь без обработки
 Входные параметры (все STRING)
_system_code - код системы-отправителя
     isbase64 - передаваемое тело в BASE64
       _mess  - тело сообщения
     ID_QUEUE - возвращаемый. ID очереди

    С учетом того, что входной формат это JSON, то корректно вложить _mess (например если он тоже JSON или содержит спецсимволы)
    в чистом виде не получится, поэтому рекомендую передавать _mess как BASE64

 Возвращаемый json
    Code      - код ответа (200 - успешно, 400 - Bad Request пустое тело, 401 - ошибка выполнения в Галактике)
    Message   - текстовое описание ответа
    ID_QUEUE  - ID очереди для дальнейшего опроса статуса в GetStatusMessageInIncomeQueue
#end
  function PutMessageToIncomeQueue(system_code : string; isbase64 : boolean; body : widestring[2097151]) : TResultPutMessageToIncomeQueue;

#doc
Получить статус сообщения во входящей очереди
 Входные параметры
  ID_QUEUE - string[36], string[36]

 Возвращаемый json
  status      - наименование статуса
  status_code - код статуса (0 - готова в обработке, 1 - обрабатывается, 2 - ошибка, 3 - успешно, 4 - некорректный идентификатор очереди)
  Body        - тело ответа, содержимое определяется прикладным программистом
  BodyBase64  - тело ответа, содержимое определяется прикладным программистом в BASE64
#end
  function GetStatusMessageWithBody(ID_QUEUE : string[36]): TResultGetStatusMessageInIncomeQueue;

end;

web vipInterface QUE_REST
  implements oQUE_REST
  licensed(Free);
public:
  // тестовая функция
  function oQUE_REST.PutMessageToIncomeQueue(system_code : string; isbase64 : boolean; body : widestring[2097151]): TResultPutMessageToIncomeQueue;
  function oQUE_REST.GetStatusMessageWithBody(ID_QUEUE : string[36]): TResultGetStatusMessageInIncomeQueue;
end;

#end // __TestREST_VIH__
