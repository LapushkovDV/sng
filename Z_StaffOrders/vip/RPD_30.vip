#component "Z_StaffOrders"

alter interface RPD_30;
/*const
  coAttrNameCauseAward: string = 'СНГ. Основание для награждения';
  coAttrNameNumDoc: string = 'СНГ. Номер документа о награждении';
end;*/

var
  oExtAttr: iExtAttr;
  chNrec: comp;
  viCYPersons2: ChoiseYourPersons new;

overload
  procedure IRPD_Base.EnableDisable;
  procedure IRPD_Base.MyDel;
  procedure GetPersonOrAppointments;
end;

create view
as select
  //oExtAttr.sGetAttr(coFortune, Fortune.nrec, coAttrNameCauseAward ) (fieldname = sExtAttrCauseAward),
  //oExtAttr.sGetAttr(coFortune, Fortune.nrec, coAttrNameNumDoc ) (fieldname = sExtAttrNumDoc),
  altCat.nrec,
  extFortune.atl_nrec,
  FortForRaiseCat_lvl1.name,
  FortForRaiseCat_lvl2.name,
  osnovCat.name
    from
     catalogs altCat,
     sng_fortune,
     sng_fortune extFortune,
     catalogs FortForRaiseCat_lvl1,
     catalogs FortForRaiseCat_lvl2,
     catalogs osnovCatTop,
     catalogs osnovCat
    where ((
      //chNrec == altCat.nrec and
      Fortune.nrec == extFortune.cfortune and
      FortForRaiseCat.cparent == FortForRaiseCat_lvl2.nrec and
      FortForRaiseCat_lvl2.cparent == FortForRaiseCat_lvl1.nrec and
      coExImLogR == osnovCatTop.syscode and
      osnovCatTop.nrec == osnovCat.cparent and
      LPadCh(string(extFortune.osnov),'0',2) == osnovCat.code
    ));

overloadformats scrDet30;

screen scrDet30 (,hcStaffWinPr, sciStaffTypical1Esc);  //Награждение/поощрение, премирование
show at (, 5,,);
table Fortune;
  fields
    FortForRaiseCat.Name ('Код награды',, sciStaffTypical13Esc), protect;
    FortForRaiseCat_lvl2.Name ('Ранг награды'), skip;
    FortForRaiseCat_lvl1.Name ('Вид награды'), skip;
    Fortune.Dat1 ('Дата награждения/поощрения, премирования', hcStaffWinPr, sciStaffTypical13Esc):
        [10,'DD/MM/YYYY'], {Font = {BackColor = if(Fortune.Dat1 = ZeroDate, ColorNeed, 0)}}, noprotect;
    //sExtAttrNumDoc  ('Номер документа о награждении'), noprotect;
    extFortune.z_num  ('Номер документа о награждении'), noprotect;
    FortuneDocName.Name ('Вид документа о награждении',, sciStaffTypical13Esc): [20], protect;
    Fortune.SNote ('Примечание (мотив)'), noprotect;
    //sExtAttrCauseAward ('Основание для награждения',, sciStaffTypical13Esc), noprotect;
    osnovCat.name ('Основание для награждения',, sciStaffTypical13Esc), protect;
    extFortune.z_datedsp : [10,'DD/MM/YYYY'], noprotect;
    extFortune.z_numdsp : noprotect;
    WorkDay: skip;
    WorkHour: skip;

  buttons
    cmViewAdvance1,,, 'Просмотр примечания к приказу', hcStaffWinPr;
    cmValue21,,, 'Дополнительные условия по приказу';

<<
 Код награды   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Ранг награды  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Вид награды   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Дата          .@@@@@@@@@@@@  Номер .@@@@@@@@@@@
 Вид документа о награждении .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Примечание (мотив)
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Основание для награждения .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Дата приказа СП .@@@@@@@@@@@@
 Номер приказа СП .@@@@@@@@@@@
 .@@@ .@@@
              <. Примечание .>            <. Доп. условия .>
>>
end; //screen

procedure MyDel;
{
 var cfortune : comp = 0;
 if GetFirst fastfirstrow Fortune = tsOk
    cfortune := Fortune.nrec;

  inherited::MyDel;

  if GetFirst fastfirstrow Fortune where (( cfortune == Fortune.nrec )) <> tsOk
    if getfirst fastfirstrow sng_fortune where ((cfortune == sng_fortune.cfortune)) = tsOk
      delete current sng_fortune;
}

procedure EnableDisable;
{
  inherited::EnableDisable;
  if fnFieldsOpen
  {
    //SetFieldOption(#sExtAttrNumDoc, ofSelectable);
    //SetFieldOption(#sExtAttrCauseAward, ofSelectable);
    SetFieldOption(#extFortune.z_num, ofSelectable);
    SetFieldOption(#osnovCat.name, ofSelectable);
    SetFieldOption(#extFortune.z_datedsp, ofSelectable);
    SetFieldOption(#extFortune.z_numdsp, ofSelectable);
  }
  else //утвержден
  {
    //ClearFieldOption(#sExtAttrNumDoc, ofSelectable);
    //ClearFieldOption(#sExtAttrCauseAward, ofSelectable);
    ClearFieldOption(#extFortune.z_num, ofSelectable);
    ClearFieldOption(#osnovCat.name, ofSelectable);
    ClearFieldOption(#extFortune.z_datedsp, ofSelectable);
    ClearFieldOption(#extFortune.z_numdsp, ofSelectable);
  }
}

procedure GetPersonOrAppointments;
{
  var DummyMarker1, DummyMarker2: TPtr;
  DummyMarker1 := InitMarker('', 8, 10, 10);
  DummyMarker2 := InitMarker('', 8, 1, 1);

  ReReadRecord(tnTitleDoc); // поскольку могла поменяться дата

  case ContDoc.wAttrDoc2 of

    0, 2: // по основному месту работы - по старой схеме
    {
      if ContDoc.cDopRef <> 0
        InsertMarker(DummyMarker1, ContDoc.cDopRef);

      var wK: word = 0;

      if viCYPersons2.Choice(DummyMarker1,
                            3,
                            vfCanSelect,
                            wK,
                            ParentSav,
                            DummyMarker2)
      {
        CheckAndFindCorrectRecordByPick(wK, ParentSav);
      }
    }
    1, 3: // совмещение
    {
      ParentSav := ContDoc.cStr;

      CopyMarker(DummyMarker1, FO.GetRefMarkerPodr);

      if ContDoc.cDopRef <> 0
        InsertMarker(DummyMarker1, ContDoc.cDopRef);

      if RunInterface('GetAllApp', if(ContDoc.wAttrDoc2 = 1, 3, 70), ParentSav
                      , DummyMarker1, TitleDoc.DocDate) = cmDefault
      {
        if GetFirst FastFirstRow DepAppoint
          where ((ParentSav == DepAppoint.nRec)) = tsOk
        {
          set ContDoc.Person := DepAppoint.Person;
          set ContDoc.cDopRef := DepAppoint.Department;
          set ContDoc.cStr := ParentSav;
        }
      }
    } // совмещение

  end;

  DoneMarker(DummyMarker1, '');
  DoneMarker(DummyMarker2, '');
}

TableEvent table Fortune;
cmInsertRecord:
{
  var _z_datedsp: date = extFortune.z_datedsp;
  var _z_numdsp : string = extFortune.z_numdsp;
  var _z_num    : string = extFortune.z_num;
  var _osnov    : byte = extFortune.osnov;

  inherited::handleEvent(cmInsertRecord);

  if Fortune.nrec != 0
    insert sng_fortune set
        cfortune := Fortune.nrec,
        z_datedsp := _z_datedsp,
        z_numdsp := _z_numdsp,
        z_num := _z_num,
        osnov := _osnov;
}

cmUpdateRecord:
{
  inherited::handleEvent(cmUpdateRecord);

  if update current Fortune = tsOk //ну повторно обновим, что теперь
    if IsValidAll(#extFortune)
      update current extFortune;
    else
      message('Запись не найдена, изменения не внесены в SNG_fortune')
}
end; //TableEvent

handleevent
cmPick:
{
  case CurField of
    #osnovCat.name:
    {
      if RunInterface('Z_StaffCat::PickCatalog2', coExImLogR, chNrec, comp(0)) = cmDefault
        {
          if GetFirst fastfirstrow altCat where (( chNrec == altCat.nrec )) = tsOk
            set extFortune.osnov := byte(altCat.code);
          //rescanpanel(#Fortune);
        }
    }

    #FortForRaiseCat.Name:
    {
      chNrec := Fortune.cRef1;

      if RunInterface('Z_StaffCat::PickCatalog2', integer(-31665), chNrec, comp(0)) = cmDefault
      {
        if GetFirst fastfirstrow altCat where (( chNrec == altCat.cparent )) = tsOk
        {
          message('Выберите код награды');
          exit;
        }

        set Fortune.cRef1 := chNrec;
        //rescanpanel(#Fortune);
      }
    }

	  #FortuneDocName.Name:
	  {
		  chNrec := Fortune.cRef2;
      if RunInterface('Z_StaffCat::PickCatalog2', Integer(-31516), chNrec, Comp(0)) = cmDefault
      {
  			if GetFirst fastfirstrow altCat where (( chNrec == altCat.nRec )) = tsOk
        {
          set Fortune.cRef2 := chNrec;
    			rescanpanel(#Fortune);
        }
      }
	  }

    #Persons.FIO:
    {
      GetPersonOrAppointments;
    }
    else
      inherited::handleEvent(cmPick);
    end;
}

cmOnVipLoad:
{
  if inherited::handleEvent(cmOnVipLoad) = heAbort
     abort;

     oExtAttr.DeleteAllAttr(coFortune, fortune.nrec);
  //oExtAttr.DeleteAttr (coFortune, coAttrNameCauseAward, cgAttrType_Comp);
  //oExtAttr.DeleteAttr (coFortune, coAttrNameNumDoc, cgAttrType_Str);
//  oExtAttr.CreateAttrcomp(coFortune, coAttrNameCauseAward, cgAttrType_Comp, cgKatKau_System, coCatalogs);
//  oExtAttr.CreateAttr(coFortune, coAttrNameNumDoc, cgAttrType_Str);
}
end; //handleevent
end.
